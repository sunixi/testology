{"version":3,"sources":["../../src/services/serverEvents/index.ts","../../src/pages/user/edit/photos/index.ts","../../src/services/config/index.ts","../../src/services/auth/index.ts","../../src/services/http/errorHandler.ts","../../src/pages/appUrl/index.ts","../../src/services/questions/validators/index.ts","../../src/services/http/index.ts","../../src/services/questions/validators/require.ts","../../src/shared/components/customPage/index.ts","../../src/services/push/index.ts","../../src/pages/user/edit/basePhotoEdit.ts","../../src/pages/user/edit/questions/index.ts","../../src/services/inapps/index.ts","../../node_modules/@angular/core/@angular lazy","../../src/services/questions/manager.ts","../../src lazy","../../src/services/serverEvents/channels/configs.ts","../../src/services/serverEvents/channels/permissions.ts","../../src/services/serverEvents/channels/conversations.ts","../../src/services/serverEvents/channels/matchedUsers.ts","../../src/services/serverEvents/channels/messages.ts","../../src/services/serverEvents/channels/guests.ts","../../src/services/serverEvents/channels/hotList.ts","../../src/services/questions/questions/date.ts","../../src/services/questions/questions/googlemapLocation.ts","../../src/shared/components/locationAutocomplete/index.ts","../../src/pages/dashboard/index.ts","../../src/services/questions/validators/email.ts","../../src/services/questions/validators/url.ts","../../src/services/questions/validators/userEmail.ts","../../src/services/questions/validators/baseAsyncValidator.ts","../../src/services/questions/validators/username.ts","../../src/services/questions/validators/minLength.ts","../../src/services/questions/validators/maxLength.ts","../../src/pages/user/forgotPassword/checkEmail/index.ts","../../src/pages/user/forgotPassword/checkCode/index.ts","../../src/pages/user/forgotPassword/newPassword/index.ts","../../src/pages/user/join/initial/index.ts","../../src/pages/user/join/questions/index.ts","../../src/pages/user/disapproved/index.ts","../../src/pages/user/verifyEmail/checkCode/index.ts","../../src/pages/user/verifyEmail/checkEmail/index.ts","../../src/pages/user/completeProfile/index.ts","../../src/pages/user/completeAccountType/index.ts","../../src/pages/appConnectionError/index.ts","../../src/pages/appError/index.ts","../../src/services/admob/index.ts","../../src/services/questions/control-service.ts","../../src/pages/profile/photos/index.ts","../../src/shared/components/flag/index.ts","../../src/pages/dashboard/components/matchedUser/index.ts","../../src/pages/user/login/index.ts","../../src/services/application/index.ts","../../src/services/questions/questions/base.ts","../../src/services/permissions/index.ts","../../src/pages/appSettings/index.ts","../../src/pages/user/bookmarks/index.ts","../../src/pages/user/guests/index.ts","../../src/pages/user/compatibleUsers/index.ts","../../src/pages/dashboard/components/search/components/searchFilter/index.ts","../../src/pages/inapps/components/memberships/viewMembership/index.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/pages/profile/view/index.ts","../../src/app/app.component.ts","../../application.config.json","../../src/services/questions/questions/text.ts","../../src/services/questions/questions/select.ts","../../src/services/questions/questions/textarea.ts","../../src/services/questions/questions/range.ts","../../src/services/questions/questions/checkbox.ts","../../src/services/questions/questions/dateRange.ts","../../src/services/api/utils.ts","../../src/services/questions/questions/extendedGooglemapLocation.ts","../../src/shared/animations/matchActions.ts","../../src/pages/inapps/index.ts","../../node_modules/moment/locale ^/.*$","../../src/pages/messages/components/plainMessage/index.ts","../../src/pages/messages/components/winkMessage/index.ts","../../src/pages/dashboard/components/hotList/index.ts","../../src/pages/dashboard/components/tinder/index.ts","../../src/pages/dashboard/components/profile/index.ts","../../src/pages/dashboard/components/conversations/index.ts","../../src/pages/dashboard/components/search/index.ts","../../src/pages/dashboard/components/tabs/index.ts","../../src/pages/inapps/components/memberships/index.ts","../../src/pages/inapps/components/credits/index.ts","../../src/shared/components/question/index.ts","../../src/shared/components/avatar/index.ts","../../src/shared/directives/autosize/index.ts","../../src/pages/messages/index.ts","../../src/services/questions/validators/baseValidator.ts","../../src/pages/appMaintenance/index.ts","../../src/services/photoUploader/index.ts","../../src/shared/directives/changeFocusByEnter/index.ts","../../src/services/i18n/index.ts","../../src/services/api/factory.ts","../../src/services/api/resources/distances.ts","../../src/services/api/resources/compatibilities.ts","../../src/services/api/resources/avatars.ts","../../src/services/api/resources/users.ts","../../src/services/api/resources/userMemberships.ts","../../src/services/api/resources/questionsData.ts","../../src/services/api/resources/joinQuestions.ts","../../src/services/api/resources/editQuestions.ts","../../src/services/api/resources/searchQuestions.ts","../../src/services/api/resources/searchUsers.ts","../../src/services/api/resources/userGenders.ts","../../src/services/api/resources/configs.ts","../../src/services/api/resources/permissions.ts","../../src/services/api/resources/photos.ts","../../src/services/api/resources/usersCache.ts","../../src/services/api/resources/matchActions.ts","../../src/services/api/resources/viewQuestions.ts","../../src/services/api/resources/blocks.ts","../../src/services/api/resources/matchedUsers.ts","../../src/services/api/resources/conversations.ts","../../src/services/api/resources/messages.ts","../../src/services/api/resources/guests.ts","../../src/services/api/resources/hotListUsers.ts","../../src/services/questions/factory.ts","../../src/shared/pipes/nlbr/index.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable, NgZone } from '@angular/core';\nimport { Events } from 'ionic-angular';\nimport { TranslateService } from 'ng2-translate';\n\n// services\nimport { ConfigService } from '../../services/config/index';\nimport { AuthService } from '../../services/auth/index';\n\n// channels\nimport { ConfigsChannelService } from './channels/configs';\nimport { PermissionsChannelService } from './channels/permissions';\nimport { ConversationsChannelService } from './channels/conversations';\nimport { MatchedUsersChannelService } from './channels/matchedUsers';\nimport { MessagesChannelService } from './channels/messages';\nimport { GuestsChannelService } from './channels/guests';\nimport { HotListChannelService } from './channels/hotList';\n\ndeclare var EventSource: any;\n\n@Injectable()\nexport class ServerEventsService {\n    private isEventsStarted: boolean = false;\n    private channels: ServerEventsChannel[] = [];\n    private eventSource: any;\n    private httpErrorHandler: () => void;\n    private reconnectTimeout: number = 10000;\n    private reconnectHandler: any;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private translate: TranslateService,\n        private ngZone: NgZone,\n        private auth: AuthService,\n        private config: ConfigService,\n        private events: Events,\n        private configsChannel: ConfigsChannelService,\n        private permissionsChannel: PermissionsChannelService,\n        private conversationsChannel: ConversationsChannelService,\n        private matchedUsersChannel: MatchedUsersChannelService,\n        private messagesChannel: MessagesChannelService,\n        private guestsChannel: GuestsChannelService,\n        private hotListChannel: HotListChannelService)\n    {\n        // register channels\n        this.channels.push(this.configsChannel);\n        this.channels.push(this.permissionsChannel);\n        this.channels.push(this.conversationsChannel);\n        this.channels.push(this.matchedUsersChannel);\n        this.channels.push(this.messagesChannel);\n        this.channels.push(this.guestsChannel);\n        this.channels.push(this.hotListChannel);\n\n        // -- init callbacks --//\n\n        // http error occurred handler\n        this.httpErrorHandler = (): void => {\n            this.stop();\n        };\n    }\n\n    /**\n     * Start\n     */\n    start(): void {\n        if (!this.isEventsStarted) {\n            this.isEventsStarted = true;\n\n            if (this.reconnectHandler) {\n                clearTimeout(this.reconnectHandler);\n            }\n\n            // subscribe to some system events\n            this.events.subscribe('http:error', this.httpErrorHandler);\n\n            let appLang = this.translate.currentLang\n                ? this.translate.currentLang\n                : this.translate.getDefaultLang();\n\n            let url = this.auth.isAuthenticated()\n                ? this.config.getApiUrl() + `/server-events/user/${this.auth.getToken()}/?api-language=${appLang}`\n                : this.config.getApiUrl() + `/server-events/?api-language=${appLang}`;\n\n            // init connection\n            this.eventSource = new EventSource(url);\n            this.eventSource.onmessage = (response: any) => {\n                let data: {channel: string, data: any} = JSON.parse(response.data);\n\n                if (data.channel) {\n                    let channel: ServerEventsChannel = this.channels.find((channel: ServerEventsChannel) => {\n                        return data.channel == channel.getChannelName()\n                    });\n\n                    // do we have a received channel?\n                    if (channel) {\n                        this.ngZone.run(() => channel.applyChanges(data.data));\n                    }\n                }\n            };\n\n            // connection error\n            this.eventSource.onerror = (e) => {\n                if (e.readyState != EventSource.CONNECTING) {\n                    this.ngZone.runOutsideAngular(() => this.reconnectHandler = setTimeout(() => this.restart(), this.reconnectTimeout));\n                }\n            };\n\n        }\n    }\n\n    /**\n     * Restart\n     */\n    restart(): void {\n        this.stop();\n        this.start();\n    }\n\n    /**\n     * Stop\n     */\n    stop(): void {\n        if (this.isEventsStarted) {\n            this.isEventsStarted = false;\n            this.events.unsubscribe('http:error', this.httpErrorHandler);\n\n            this.eventSource.close();\n        }\n    }\n}\n\nexport interface ServerEventsChannel {\n    /**\n     * Get channel name\n     */\n    getChannelName(): string;\n\n    /**\n     * Apply changes\n     */\n    applyChanges(data: any): void;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/serverEvents/index.ts","import { Component, ViewChild, OnInit, OnDestroy, AfterViewChecked, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { DataStore } from 'js-data';\nimport { Events, Content, LoadingController, AlertController, ToastController, ActionSheetController, NavController, InfiniteScroll } from 'ionic-angular';\nimport { PhotoViewer } from '@ionic-native/photo-viewer';\nimport { TranslateService } from 'ng2-translate';\n\nimport { BasePhotoEdit, PhotoRefreshType, PhotoUnit } from '../basePhotoEdit'\n\n// services\nimport { AuthService } from '../../../../services/auth/index';\nimport { ApiUtilsService } from '../../../../services/api/utils';\nimport { PermissionsService } from '../../../../services/permissions/index';\nimport { SecureHttpService } from '../../../../services/http/index';\nimport { ConfigService } from '../../../../services/config/index';\nimport { PhotoUploaderService } from '../../../../services/photoUploader/index';\n\n@Component({\n    selector: 'edit-user-photos',\n    templateUrl: 'index.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        ApiUtilsService,\n        PhotoUploaderService\n    ]\n})\n\nexport class EditUserPhotosPage extends BasePhotoEdit implements OnInit, OnDestroy, AfterViewChecked {\n    @ViewChild(InfiniteScroll) infiniteScroll: InfiniteScroll = null;\n    @ViewChild(Content) content: Content;\n\n    private photosLimit: number;\n    private freeSlots: number = 0;\n    private pageReady: boolean = false;\n    private infiniteScrollNeedComplete: boolean = false;\n    private configsUpdatedHandler: () => void;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        protected ref: ChangeDetectorRef,\n        protected events: Events,\n        protected photoUploader: PhotoUploaderService,\n        protected config: ConfigService,\n        protected http: SecureHttpService,\n        protected loadingCtrl: LoadingController,\n        protected actionSheetCtrl: ActionSheetController,\n        protected alert: AlertController,\n        protected toast: ToastController,\n        protected permissions: PermissionsService,\n        protected nav: NavController,\n        protected translate: TranslateService,\n        protected photoViewer: PhotoViewer,\n        protected api: DataStore,\n        protected auth:AuthService,\n        private apiUtils:ApiUtilsService)\n    {\n        super(\n            ref,\n            events,\n            photoUploader,\n            config,\n            http,\n            loadingCtrl,\n            actionSheetCtrl,\n            alert,\n            toast,\n            permissions,\n            nav,\n            translate,\n            api,\n            auth,\n            photoViewer);\n\n        this.photosLimit = this.api.get('configs', 'photosLimit').value;\n\n\n        // -- init callbacks --//\n\n        // configs updated handler\n        this.configsUpdatedHandler = (): void => {\n            this.ref.markForCheck();\n        };\n    }\n\n    /**\n     * Get min photos\n     */\n    get minPhotos(): number {\n        return this.api.get('configs', 'minPhotos').value;\n    }\n\n    /**\n     * Component init\n     */\n    async ngOnInit(): Promise<any> {\n\n        // config updated\n        this.events.subscribe('configs:updated', this.configsUpdatedHandler);\n\n        let loader = this.loadingCtrl.create();\n\n        try {\n            await loader.present();\n\n            // clear user cached data\n            this.apiUtils.clearUserData(this.auth.getUserId());\n\n            // load all pages dependencies\n            await Promise.all([\n                this.api.find('users', this.auth.getUserId(), { // get logged user info with relations\n                    params: {\n                        with: ['avatar', 'permissions', 'photos', 'memberships']\n                    }\n                })\n            ]);\n\n            // init user avatar\n            if (this.currentUser.avatar && this.currentUser.avatar.id) {\n                this.initAvatar(this.currentUser.avatar);\n            }\n\n            // load photos\n            this.loadPhotoList(this.photosLimit);\n\n            loader.dismiss();\n\n            this.pageReady = true;\n            this.ref.markForCheck();\n        }\n        catch (e) {\n            loader.dismiss();\n        }\n    }\n\n    /**\n     * Component destroy\n     */\n    ngOnDestroy(): void {\n        this.events.unsubscribe('configs:updated', this.configsUpdatedHandler);\n    }\n\n    /**\n     * View rendered\n     */\n    ngAfterViewChecked() {\n        if (this.infiniteScrollNeedComplete) {\n            this.infiniteScrollNeedComplete = false;\n\n            setTimeout(() => {\n                this.infiniteScroll.complete();\n            });\n        }\n    }\n\n    /**\n     * Load more photos\n     */\n    loadMorePhotos(): void {\n        if (this.getPhotoCount() + 1 > this.photosLimit) { // include avatar\n            this.photosLimit += this.photosPerRow;\n\n            this.loadPhotoList(this.photosLimit);\n            this.infiniteScrollNeedComplete = true;\n            this.ref.markForCheck();\n\n            return;\n        }\n\n        this.infiniteScroll.enabled = false; //don't show scroll any more\n        this.infiniteScroll.complete();\n        this.ref.markForCheck();\n    }\n\n    /**\n     * Approval text\n     */\n    get approvalText(): string {\n        let notApprovedPhotos = this.api.filter('photos', {\n            where: {\n                userId: this.auth.getUserId(),\n                approved: false\n            }\n        });\n\n        if (notApprovedPhotos.length && !BasePhotoEdit.isAvatarActive) {\n            return this.translate.instant('avatar_and_photos_approval_text', {\n                photos: notApprovedPhotos.length\n            });\n        }\n\n        if (notApprovedPhotos.length) {\n            return this.translate.instant('photos_approval_text', {\n                photos: notApprovedPhotos.length\n            });\n        }\n\n        if (!BasePhotoEdit.isAvatarActive) {\n            return this.translate.instant('avatar_approval_text');\n        }\n\n        return;\n    }\n\n    /**\n     * Refresh photo list\n     */\n    protected async refreshPhotoList(refreshType: PhotoRefreshType): Promise<any> {\n        switch (refreshType) {\n            case 'add' :\n                // check free slots\n                if (!this.freeSlots) {\n                    this.photosLimit += 1;\n                    this.ref.markForCheck();\n                }\n\n                await this.content.scrollToTop();\n                break;\n\n            case 'delete' :\n                this.photosLimit -= 1;\n                this.ref.markForCheck();\n                break;\n\n            default :\n                await this.content.scrollToTop();\n        }\n\n        if (this.photosLimit % this.photosPerRow) {\n            let extraFreeSlots = (this.photosPerRow - this.photosLimit % this.photosPerRow);\n            this.freeSlots += extraFreeSlots;\n\n            this.photosLimit = this.photosLimit + extraFreeSlots;\n        }\n\n        // remove unused free slots\n        if  (this.freeSlots == this.photosPerRow && this.photosLimit > this.minPhotos ) {\n            this.freeSlots -= this.photosPerRow;\n            this.photosLimit -= this.photosPerRow;\n        }\n\n        this.ref.markForCheck();\n        this.loadPhotoList(this.photosLimit);\n    }\n\n    /**\n     * Get photo count\n     */\n    protected getPhotoCount(): number {\n        return this.api.filter('photos', {\n            where: {\n                userId: this.auth.getUserId()\n            }\n        }).length;\n    }\n\n    /**\n     * Load photo list\n     */\n    protected loadPhotoList(limit: number): void {\n        this.photos = []; // clear current photo list\n        let photos: PhotoUnit[] = [];\n        this.freeSlots = 0;\n\n        // add avatar to the photo list\n        photos.push(new PhotoUnit(\n            BasePhotoEdit.avatarId,\n            BasePhotoEdit.avatarUrl ? BasePhotoEdit.avatarUrl : BasePhotoEdit.defaultAvatar,\n            BasePhotoEdit.bigAvatarUrl ? BasePhotoEdit.bigAvatarUrl : BasePhotoEdit.defaultAvatar,\n            'avatar',\n            BasePhotoEdit.isAvatarActive\n        ));\n\n        // get user photos\n        let apiPhotos = this.api.filter('photos', {\n            where: {\n                userId: this.auth.getUserId()\n            },\n            orderBy: [\n                ['id', 'DESC']\n            ],\n            limit: limit - 1 // exclude avatar\n        });\n\n        // check count of photos\n        let visiblePhotos = this.getPhotoCount() + 1 >= this.minPhotos // include avatar\n            ? limit\n            : this.minPhotos;\n\n        // process photos\n        for (let i = 1; i < visiblePhotos; i++) {\n            let photoDetails = apiPhotos && apiPhotos[i - 1] ? apiPhotos[i - 1] : null;\n\n            photos.push(new PhotoUnit(\n                photoDetails ? photoDetails.id : null,\n                photoDetails ? photoDetails.url : null,\n                photoDetails ? photoDetails.bigUrl : null,\n                'photo',\n                photoDetails ? photoDetails.approved : true\n            ));\n\n            if (!photoDetails) {\n                this.freeSlots++;\n            }\n        }\n\n        // chunk photos\n        for (let i = 0; i < photos.length; i += this.photosPerRow) {\n            this.photos.push(photos.slice(i, i + this.photosPerRow));\n        }\n\n        this.ref.markForCheck();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user/edit/photos/index.ts","import { Injectable } from '@angular/core';\nimport configFile from '../../../application.config.json';\n\n@Injectable()\nexport class ConfigService {\n    protected baseUri: string;\n    protected baseApiUri: string;\n\n    /**\n     * Constructor\n     */\n    constructor() {\n        this.baseUri = '/skmobileapp/';\n        this.baseApiUri = this.baseUri + 'api';\n    }\n\n    /**\n     * Get config\n     */\n    public getConfig(configName: string): string {\n        let value: string = configFile[configName];\n\n        return value;\n    }\n\n    /**\n     * Get generic api url\n     */\n    public getGenericApiUrl(): string {\n        return localStorage.getItem('siteUrl');\n    }\n\n    /**\n     * Set generic api url\n     */\n    public setGenericApiUrl(url: string): void {\n        localStorage.setItem('siteUrl', url);\n    }\n\n    /**\n     * Get api uri\n     */\n    public getApiUri(): string {\n        return this.baseApiUri;\n    }\n\n    /**\n     * Get api url\n     */\n    public getApiUrl(): string {\n        let serverUrl: string = configFile['serverUrl'] // check custom server url\n            ? configFile['serverUrl']\n            : this.getGenericApiUrl();\n\n        if (serverUrl) {\n            return serverUrl + this.getApiUri();\n        }\n    }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/config/index.ts","import { Injectable } from '@angular/core';\nimport { JwtHelper, tokenNotExpired } from 'angular2-jwt';\nimport 'rxjs/add/operator/map';\nimport { Events } from 'ionic-angular';\n\n@Injectable()\nexport class AuthService {\n    protected token: any = null;\n    protected tokenName: string = 'token';\n    protected user: {id: number, name: string, email: string} = null;\n    protected jwtHelper: JwtHelper = new JwtHelper();\n\n    /**\n     * Constructor\n     */\n     constructor(private events: Events) {\n        this.token = localStorage.getItem(this.tokenName);\n\n        if (this.token) {\n            this.user = this.jwtHelper.decodeToken(this.token);\n        }\n    }\n\n    /**\n     * Get user\n     */\n    public getUser(): {id: number, name: string, email: string} {\n        return this.user;\n    }\n\n    /**\n     * Get user id\n     */\n    public getUserId(): number {\n        return this.user ? this.user['id'] : null;\n    }\n\n    /**\n     * Get token\n     */\n    public getToken(): string {\n        return this.token;\n    }\n\n    /**\n     * Get auth header name\n     */\n    public getAuthHeaderName(): string {\n        return 'jwt';\n    }\n\n    /**\n     * Get auth header value\n     */\n    public getAuthHeaderValue(): string {\n        return `Bearer ${this.getToken()}`;\n    }\n\n    /**\n     * Set authenticated\n     */\n    public setAuthenticated(token: string):void {\n        localStorage.setItem(this.tokenName, token);\n\n        this.user = this.jwtHelper.decodeToken(token);\n        this.token = token;\n        this.events.publish('user:login');\n    }\n\n    /**\n     * Logout\n     */\n    public logout(): void {\n        localStorage.removeItem(this.tokenName);\n\n        this.user = null;\n        this.token = null;\n\n        this.events.publish('user:logout');\n    }\n\n    /**\n     * Is authenticated\n     */\n    public isAuthenticated(): boolean {\n        if (this.token) {\n            return tokenNotExpired(this.tokenName);\n        }\n\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/auth/index.ts","import { Injectable } from '@angular/core';\nimport { App, Events } from 'ionic-angular';\n\n// services\nimport { AuthService } from '../auth/index';\n\n// pages\nimport { LoginPage } from '../../pages/user/login/index'\nimport { UserDisapprovedPage } from '../../pages/user/disapproved/index'\nimport { VerifyEmailCheckCodePage } from \"../../pages/user/verifyEmail/checkCode/index\";\nimport { AppMaintenancePage } from '../../pages/appMaintenance/index'\nimport { CompleteProfilePage } from '../../pages/user/completeProfile/index'\nimport { CompleteAccountTypePage } from '../../pages/user/completeAccountType/index'\nimport { AppConnectionErrorPage } from '../../pages/appConnectionError/index'\nimport { AppErrorPage } from '../../pages/appError/index'\n\n@Injectable()\nexport class HttpErrorHandlerService {\n    private isHandleHttpErrors: boolean = true;\n\n    public static HTTP_ERROR_NO_INTERNET_CONNECTION: number = 0;\n    public static HTTP_ERROR_NOT_AUTHORIZED: number = 401;\n    public static HTTP_ERROR_FORBIDDEN: number = 403;\n\n    // forbidden types\n    public static HTTP_ERROR_FORBIDDEN_DISAPPROVED: string = 'disapproved';\n    public static HTTP_ERROR_FORBIDDEN_SUSPENDED: string = 'suspended';\n    public static HTTP_ERROR_FORBIDDEN_EMAIL_NOT_VERIFIED: string = 'emailNotVerified';\n    public static HTTP_ERROR_FORBIDDEN_MAINTENANCE: string = 'maintenance';\n    public static HTTP_ERROR_FORBIDDEN_PROFILE_NOT_COMPLETED: string = 'profileNotCompleted';\n    public static HTTP_ERROR_FORBIDDEN_ACCOUNT_TYPE_NOT_COMPLETED: string = 'accountTypeNotCompleted';\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private events: Events,\n        private app: App,\n        private auth: AuthService) {}\n\n    /**\n     * Set application handle http errors\n     */\n    setHandleHttpErrors(isHandleHttpErrors: boolean): void {\n        this.isHandleHttpErrors = isHandleHttpErrors;\n    }\n\n    /**\n     * Handle error\n     */\n    public handleError(errorCode: number, errorType?: string, errorDescription?: string, force: boolean = false): void {\n        if (!this.isHandleHttpErrors && !force) {\n            return;\n        }\n\n        this.events.publish('http:error', {\n            errorCode: errorCode,\n            errorType: errorType,\n            errorDescription: errorDescription\n        });\n\n        switch (errorCode) {\n            case HttpErrorHandlerService.HTTP_ERROR_NO_INTERNET_CONNECTION: // 0\n                this.app.getRootNav().setRoot(AppConnectionErrorPage);\n\n                break;\n\n            case HttpErrorHandlerService.HTTP_ERROR_NOT_AUTHORIZED: // 401\n                this.auth.logout();\n                this.app.getRootNav().setRoot(LoginPage);\n\n                break;\n\n            case HttpErrorHandlerService.HTTP_ERROR_FORBIDDEN: // 403\n                switch (errorType) {\n                    case HttpErrorHandlerService.HTTP_ERROR_FORBIDDEN_DISAPPROVED :\n                        this.app.getRootNav().setRoot(UserDisapprovedPage, {\n                            status: 'disapproved',\n                        });\n\n                        break;\n\n                    case HttpErrorHandlerService.HTTP_ERROR_FORBIDDEN_SUSPENDED :\n                        this.app.getRootNav().setRoot(UserDisapprovedPage, {\n                            status: 'suspended',\n                            description: errorDescription\n                        });\n\n                        break;\n\n                    case HttpErrorHandlerService.HTTP_ERROR_FORBIDDEN_EMAIL_NOT_VERIFIED :\n                        this.app.getRootNav().setRoot(VerifyEmailCheckCodePage);\n\n                        break;\n\n                    case HttpErrorHandlerService.HTTP_ERROR_FORBIDDEN_PROFILE_NOT_COMPLETED :\n                        this.app.getRootNav().setRoot(CompleteProfilePage);\n\n                        break;\n\n                    case HttpErrorHandlerService.HTTP_ERROR_FORBIDDEN_ACCOUNT_TYPE_NOT_COMPLETED :\n                        this.app.getRootNav().setRoot(CompleteAccountTypePage);\n\n                        break;\n\n                    case HttpErrorHandlerService.HTTP_ERROR_FORBIDDEN_MAINTENANCE :\n                        this.app.getRootNav().setRoot(AppMaintenancePage);\n\n                        break;\n\n                    default :\n                        this.app.getRootNav().setRoot(AppErrorPage);\n                }\n\n                break;\n\n            default : // 404, 500, etc\n                this.app.getRootNav().setRoot(AppErrorPage);\n        }\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/http/errorHandler.ts","import { Component, Input, OnInit, Inject, forwardRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Http } from '@angular/http';\nimport { NavController, LoadingController, AlertController } from 'ionic-angular';\nimport { TranslateService } from 'ng2-translate';\nimport { DataStore } from 'js-data';\nimport { HttpAdapter } from 'js-data-http';\nimport { parse as urlParse } from 'url';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/timeout';\n\n// import pages\nimport { LoginPage } from '../../pages/user/login/index';\nimport { AppMaintenancePage } from '../../pages/appMaintenance/index';\n\n// import services\nimport { ConfigService } from '../../services/config/index';\nimport { ApplicationService } from '../../services/application/index';\nimport { ServerEventsService } from '../../services/serverEvents/index';\n\n// import questions\nimport { QuestionManager } from '../../services/questions/manager';\nimport { QuestionControlService } from '../../services/questions/control-service';\n\n@Component({\n    selector: 'app-url',\n    templateUrl: 'index.html',\n    providers: [\n        QuestionControlService,\n        QuestionManager\n    ]\n})\n\nexport class AppUrlPage implements OnInit {\n    @Input() private questions = <any>[]; // list of questions\n\n    private form: FormGroup;\n    private isUrlConfigured: boolean = false;\n    private application: ApplicationService;\n    private options: string[] = ['https://', 'https://www.', 'http://', 'http://www.'];\n    private timeout: number = 15000; // connection timeout\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private serverEvents: ServerEventsService,\n        private nav: NavController,\n        private api: DataStore,\n        @Inject(forwardRef(() => ApplicationService)) application: ApplicationService,\n        private questionControl: QuestionControlService,\n        private http: Http,\n        private config: ConfigService,\n        private loadingCtrl: LoadingController,\n        private alert: AlertController,\n        private questionManager: QuestionManager,\n        private translate: TranslateService)\n    {\n        this.application = application;\n\n        if (this.config.getApiUrl()) {\n            this.isUrlConfigured = true;\n        }\n    }\n\n    /**\n     * Component init\n     */\n    ngOnInit(): void {\n        // create form items\n        this.questions = [\n            this.questionManager.getQuestion(QuestionManager.TYPE_TEXT, {\n                value: this.config.getGenericApiUrl(),\n                key: 'url',\n                label: !this.isUrlConfigured\n                    ? '://Site URL'\n                    : this.translate.instant('site_address_input'),\n                validators: [{\n                    name: 'require',\n                    message: !this.isUrlConfigured\n                        ? 'You have to enter your site address'\n                        : this.translate.instant('site_address_input_require_error')\n                }]\n            }, {\n                hideWarning: true\n            })\n        ];\n\n        // register all questions inside a form group\n        this.form = this.questionControl.toFormGroup(this.questions);\n    }\n\n    /**\n     * Submit\n     */\n    async onSubmit(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            await loader.present();\n\n            let url: any = await this.validateApi();\n\n            if (url) {\n                this.serverEvents.stop();\n                this.config.setGenericApiUrl(url);\n\n                // update base path in api adapter\n                let adapter = this.api.getAdapter(HttpAdapter);\n                adapter.basePath = this.config.getApiUrl();\n\n                // refresh application dependencies\n                await this.application.loadDependencies();\n\n                loader.dismiss();\n\n                // redirect to the page\n                if (this.api.get('configs', 'maintenanceMode').value) {\n                    this.nav.setRoot(AppMaintenancePage);\n\n                    return;\n                }\n\n                this.nav.setRoot(LoginPage);\n\n                return;\n            }\n\n            loader.dismiss();\n            this.showErrorPopup();\n        }\n        catch (e) {\n            loader.dismiss();\n            this.showErrorPopup();\n        }\n    }\n\n    private async validateApi(): Promise<any> {\n        let url: string = this.form.value.url;\n        let data: any;\n        if (url.indexOf('://') !== -1){\n            // Convert scheme to lowercase\n            let parts = url.split('://');\n            url = parts[0].toLowerCase() + '://' + parts[1];\n            // Check api\n            try {\n                data = await this.http.get(url + this.config.getApiUri() + '/check-api/')\n                    .timeout(this.timeout)\n                    .map(res => res.json())\n                    .toPromise();\n                if (data.status && data.status == 'ok') {\n                    return url;\n                }\n            } catch (e){}\n            // Api check failed. We will try to remove scheme and check api with another scheme options\n            let parsedUrl = urlParse(url);\n            url = parsedUrl.host + parsedUrl.path;\n        } else {\n            let slashPos = url.indexOf('/');\n            if (slashPos !== -1){\n                // Convert domain to lowercase\n                let domain = url.substring(0, slashPos);\n                url = domain.toLowerCase() + url.substring(slashPos);\n            } else {\n                // There is no path in url. So we may convert whole url to lowercase\n                url = url.toLowerCase();\n            }\n        }\n\n        if (url.indexOf('www.') === 0){\n            // Remove www from url\n            url = url.substr(4);\n        }\n\n        for (let i in this.options) {\n            try{\n                data = await this.http.get(this.options[i] + url + this.config.getApiUri() + '/check-api/')\n                    .timeout(this.timeout)\n                    .map(res => res.json())\n                    .toPromise();\n                if (data.status && data.status == 'ok') {\n                    return this.options[i] + url;\n                }\n            } catch (e){}\n        }\n        return null;\n    }\n\n    /**\n     * Show error popup\n     */\n    private showErrorPopup(): void {\n        let alert = this.alert.create({\n            title: !this.isUrlConfigured ? 'Error Occurred' : this.translate.instant('error_occurred'),\n            subTitle: !this.isUrlConfigured  ? 'Invalid site url' : this.translate.instant('site_address_error'),\n            buttons: [(this.isUrlConfigured ? 'OK' : this.translate.instant('ok'))]\n        });\n\n        alert.present();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/appUrl/index.ts","import { Injectable } from '@angular/core';\nimport { TranslateService } from 'ng2-translate';\n\nimport { RequireValidator } from './require';\nimport { EmailValidator } from './email';\nimport { UrlValidator } from './url';\nimport { UserEmailValidator } from './userEmail';\nimport { UserNameValidator } from './username';\nimport { MinLengthValidator } from './minLength';\nimport { MaxLengthValidator } from './maxLength';\nimport { IValidator } from './interface';\n\n@Injectable()\nexport class Validators {\n    constructor(\n        private urlValidator: UrlValidator,\n        private emailValidator: EmailValidator,\n        private requireValidator: RequireValidator,\n        private userEmailValidator: UserEmailValidator,\n        private userNameValidator: UserNameValidator,\n        private minLengthValidator: MinLengthValidator,\n        private maxLengthValidator: MaxLengthValidator,\n        private translate: TranslateService) {}\n\n    /**\n     * Get validator list\n     */\n    protected getValidatorList(): {} {\n        return {\n            minLength: {\n                isAsyncValidator: false,\n                validator: this.minLengthValidator,\n                defaultMessage: this.translate.instant('min_length_validator_error')\n            },\n            maxLength: {\n                isAsyncValidator: false,\n                validator: this.maxLengthValidator,\n                defaultMessage: this.translate.instant('max_length_validator_error')\n            },\n            email: {\n                isAsyncValidator: false,\n                validator: this.emailValidator,\n                defaultMessage: this.translate.instant('email_validator_error')\n            },\n            url: {\n                isAsyncValidator: false,\n                validator: this.urlValidator,\n                defaultMessage: this.translate.instant('url_validator_error')\n            },\n            require: {\n                isAsyncValidator: false,\n                validator: this.requireValidator,\n                defaultMessage: this.translate.instant('require_validator_error')\n            },\n            userEmail: {\n                isAsyncValidator: true,\n                validator: this.userEmailValidator,\n                defaultMessage: this.translate.instant('user_email_validator_error')\n            },\n            userName: {\n                isAsyncValidator: true,\n                validator: this.userNameValidator,\n                defaultMessage: this.translate.instant('user_name_validator_error')\n            }\n        };\n    }\n\n    /**\n     * Is validator exists\n     */\n    public isValidatorExists(name: string): boolean {\n        return name in this.getValidatorList();\n    }\n\n    /**\n     * Get validator\n     */\n    public getValidator(name: string): IValidator {\n        if (this.isValidatorExists(name)) {\n            return this.getValidatorList()[name].validator;\n        }\n\n        throw new TypeError(`Unsupported validator ${name}`);\n    }\n\n    /**\n     * Get default message\n     */\n    public getDefaultMessage(name: string): string {\n        if (this.isValidatorExists(name)) {\n            return this.getValidatorList()[name].defaultMessage;\n        }\n    }\n\n    /**\n     * Is  async validator\n     */\n    public isAsyncValidator(name: string): boolean {\n        if (this.isValidatorExists(name)) {\n            return this.getValidatorList()[name].isAsyncValidator;\n        }\n\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/questions/validators/index.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { TranslateService } from 'ng2-translate';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/timeout';\n\n// services\nimport { ConfigService } from '../config/index';\nimport { AuthService } from '../auth/index';\nimport { HttpErrorHandlerService } from '../http/errorHandler';\n\n@Injectable()\nexport class SecureHttpService {\n    private timeout: number;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private errorHandler: HttpErrorHandlerService,\n        private http: Http,\n        private config: ConfigService,\n        private auth: AuthService,\n        private translate: TranslateService)\n    {\n        this.timeout = parseInt(this.config.getConfig('connectionTimeout'));\n    }\n\n    /**\n     * Create extra headers\n     */\n    protected createExtraHeaders(headers: Headers): void {\n        if (this.auth.getToken()) {\n            headers.append(this.auth.getAuthHeaderName(), this.auth.getAuthHeaderValue());\n        }\n\n        let language = this.translate.currentLang\n            ? this.translate.currentLang\n            : this.translate.getDefaultLang();\n\n        // add current language\n        headers.append('api-language', language);\n    }\n\n    /**\n     * Get\n     */\n    get(url, forceHandleError: boolean = false) {\n        let headers = new Headers();\n        this.createExtraHeaders(headers);\n        let options = new RequestOptions({\n            headers: headers\n        });\n\n        return this.http.get(url, options)\n            .timeout(this.timeout)\n            .catch((err) => {\n                this.reactOnError(err, forceHandleError);\n\n                return Observable.throw(err);\n        });\n    }\n\n    /**\n     * Put\n     */\n    put(url, data, forceHandleError: boolean = false) {\n        let headers = new Headers();\n        this.createExtraHeaders(headers);\n        let options = new RequestOptions({\n            headers: headers\n        });\n\n        return this.http.put(url, data, options)\n            .timeout(this.timeout)\n            .catch((err) => {\n                this.reactOnError(err, forceHandleError);\n\n                return Observable.throw(err);\n        });\n    }\n\n    /**\n     * Delete\n     */\n    delete(url, forceHandleError: boolean = false) {\n        let headers = new Headers();\n        this.createExtraHeaders(headers);\n        let options = new RequestOptions({\n            headers: headers\n        });\n\n        return this.http.delete(url, options)\n            .timeout(this.timeout)\n            .catch((err) => {\n                this.reactOnError(err, forceHandleError);\n\n                return Observable.throw(err);\n        });\n    }\n\n    /**\n     * Post\n     */\n    post(url, data, forceHandleError: boolean = false) {\n        let headers = new Headers();\n        this.createExtraHeaders(headers);\n        let options = new RequestOptions({\n            headers: headers\n        });\n\n        return this.http.post(url, data, options)\n            .timeout(this.timeout)\n            .catch((err) => {\n                this.reactOnError(err, forceHandleError);\n\n                return Observable.throw(err);\n        });\n    }\n\n    /**\n     * React on error\n     */\n    protected reactOnError(err: any, forceHandleError: boolean = false): void {\n        let errorCode = err.status || 0;\n        let errorType: string = '';\n        let errorDescription: string = '';\n        let errorDetails: any = errorCode ? err.json() : '';\n\n        if (errorDetails) {\n            errorType = errorDetails.type ? errorDetails.type : '';\n            errorDescription = errorDetails.description ? errorDetails.description : '';\n        }\n\n        this.errorHandler.handleError(errorCode, errorType, errorDescription, forceHandleError);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/http/index.ts","import { Injectable } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { BaseValidator } from './baseValidator';\n\n@Injectable()\nexport class RequireValidator extends BaseValidator {\n    /**\n     * Validate\n     */\n    validate(): Function {\n        return (control: FormControl): {[key: string]: any} => {\n            let isValid = this.isValid(control.value);\n\n            return isValid ? null : {\n                require: {\n                    valid: false\n                }\n            };\n        };\n    }\n\n    /**\n     * Is valid\n     */\n     isValid(value: any): boolean {\n        let varType = typeof value;\n        let isValid = false;\n\n        switch (varType) {\n            case 'string' :\n            case 'number' :\n                isValid = value.toString().trim() != '';\n                break;\n\n            case 'boolean' :\n                isValid = value === true;\n                break;\n\n            case 'object' :\n                if (Array.isArray(value)) {\n                    isValid = value.length > 0;\n                } else {\n                    let emptyProperties = false;\n\n                    // check all object's properties\n                    Object.getOwnPropertyNames(value).forEach((propertyName) => {\n                        if (!this.isValid(value[propertyName])) {\n                            emptyProperties = true;\n                        }\n                    });\n\n                    isValid = !emptyProperties;\n                }\n                break;\n\n            default :\n        }\n\n        return isValid;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/questions/validators/require.ts","import { Component } from '@angular/core';\nimport { ViewController, NavParams } from 'ionic-angular';\n\n@Component({\n    selector: 'custom-page',\n    templateUrl: './index.html'\n})\nexport class CustomPageComponent {\n    private title: string;\n    private pageName: string;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private viewCtrl: ViewController,\n        private navParams: NavParams)\n    {\n        this.title = this.navParams.get('title');\n        this.pageName = this.navParams.get('pageName');\n    }\n\n    /**\n     * Close\n     */\n    close(): void {\n        this.viewCtrl.dismiss();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/customPage/index.ts","import { Device as NativeDevice } from '@ionic-native/device';\nimport { Injectable, Inject, forwardRef } from '@angular/core';\nimport { PushObject, Push } from '@ionic-native/push';\nimport { DataStore } from 'js-data';\n\n// services\nimport { AuthService } from '../auth/index'\nimport { ConfigService } from '../../services/config/index';\nimport { SecureHttpService} from '../http/index'\n\n@Injectable()\nexport class PushNotificationsService {\n    private pushObject: PushObject = null;\n    private http: SecureHttpService;\n    private language: string;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private api: DataStore,\n        private auth: AuthService,\n        private config: ConfigService,\n        @Inject(forwardRef(() => SecureHttpService)) http: SecureHttpService,\n        private nativeDevice: NativeDevice,\n        private push: Push)\n    {\n        this.http = http;\n    }\n\n    /**\n     * Init\n     */\n    init(language: string): void {\n        // destroy previously created push object\n        this.clearPushObject();\n\n        this.language = language;\n    }\n\n    /**\n     * Subscribe\n     */\n     subscribe(callback: (notification: any) => void, context: any): void {\n        try {\n            // create a push object\n            if (!this.pushObject) {\n                this.pushObject = this.createPushObject();\n            }\n\n            // notification\n            this.pushObject.on('notification').subscribe((notification: any) => {\n                if (this.pushConfig.enabled) {\n                    let notificationCallback = callback.bind(context);\n\n                    notificationCallback(notification);\n                }\n            });\n\n            // push registration\n            this.pushObject.on('registration').subscribe(async (registration: any): Promise<any> => {\n                try {\n                    let data = {\n                        userId: this.auth.getUserId(),\n                        uuid: this.nativeDevice.uuid,\n                        token: registration['registrationId'],\n                        platform: this.nativeDevice.platform,\n                        properties: {\n                            lang: this.language\n                        }\n                    };\n\n                    await this.http.post(this.config.getApiUrl() + '/device/', data).subscribe();\n                }\n                catch (e) {}\n            });\n        }\n        catch (e) {}\n    }\n\n    /**\n     * Unsubscribe\n     */\n    unsubscribe(): void {\n        this.clearPushObject();\n    }\n\n    /**\n     * Clear push object\n     */\n    private async clearPushObject(): Promise<any> {\n        if (this.pushObject) {\n            await this.pushObject.unregister();\n\n            this.pushObject = null;\n        }\n    }\n\n    /**\n     * Create push object\n     */\n    private createPushObject(): PushObject {\n        return this.push.init({\n            android: {\n                senderID: this.pushConfig.senderID,\n            },\n            ios: {\n                alert: \"true\",\n                badge: \"false\",\n                sound: \"false\"\n            },\n            windows: {}\n        });\n    }\n\n    /**\n     * Get push config\n     */\n    private get pushConfig(): {enabled: boolean, senderID: string} {\n        return this.api.get('configs', 'pushNotificationsConfig').value;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/push/index.ts","import { ChangeDetectorRef } from '@angular/core';\nimport { DataStore } from 'js-data';\nimport { PhotoViewer } from '@ionic-native/photo-viewer';\nimport { Events, LoadingController, AlertController, ToastController, ActionSheetController, NavController } from 'ionic-angular';\nimport { TranslateService } from 'ng2-translate';\n\n// services\nimport { AuthService } from '../../../services/auth/index';\nimport { PermissionsService } from '../../../services/permissions/index';\nimport { SecureHttpService } from '../../../services/http/index';\nimport { ConfigService } from '../../../services/config/index';\nimport { PhotoUploaderService } from '../../../services/photoUploader/index';\n\n// types\nimport { PhotoUploaderSource } from '../../../services/photoUploader/index';\n\n// local types and classes\nexport type PhotoRefreshType = 'add' | 'delete' | 'refresh';\nexport type PhotoUploaderType = 'avatar' | 'photo';\n\nexport class PhotoUnit {\n    id: number;\n    url: string;\n    bigUrl: string;\n    type: string;\n    active: boolean;\n\n    /**\n     * Constructor\n     */\n    constructor(id: number, url: string, bigUrl: string, type: string, active: boolean) {\n        this.id = id;\n        this.url = url;\n        this.bigUrl = bigUrl;\n        this.type = type;\n        this.active = active;\n    }\n}\n\nexport abstract class BasePhotoEdit {\n    protected static staticApi: DataStore;\n    protected static avatarId: number = null;\n    protected static avatarUrl: string = null;\n    protected static bigAvatarUrl: string = null;\n    protected static isAvatarActive: boolean = true;\n    protected static avatarUploaded: boolean = false;\n\n    protected photos = <any>[];\n\n    /**\n     * Constructor\n     */\n    constructor(\n        protected ref: ChangeDetectorRef,\n        protected events: Events,\n        protected photoUploader: PhotoUploaderService,\n        protected config: ConfigService,\n        protected http: SecureHttpService,\n        protected loadingCtrl: LoadingController,\n        protected actionSheetCtrl: ActionSheetController,\n        protected alert: AlertController,\n        protected toast: ToastController,\n        protected permissions: PermissionsService,\n        protected nav: NavController,\n        protected translate: TranslateService,\n        protected api: DataStore,\n        protected auth: AuthService,\n        protected photoViewer: PhotoViewer)\n    {\n        // init configs\n        BasePhotoEdit.staticApi = this.api;\n\n        // init user avatar\n        if (this.currentUser.avatar && this.currentUser.avatar.id) {\n            this.initAvatar(this.currentUser.avatar);\n        }\n    }\n\n    /**\n     * Big default avatar\n     */\n    static get bigDefaultAvatar(): string {\n        return BasePhotoEdit.staticApi.get('configs', 'bigDefaultAvatar').value;\n    }\n\n    /**\n     * Default avatar\n     */\n    static get defaultAvatar(): string {\n        return BasePhotoEdit.staticApi.get('configs', 'defaultAvatar').value;\n    }\n\n    /**\n     * Is avatar required\n     */\n    static get isAvatarRequired(): boolean {\n        return BasePhotoEdit.staticApi.get('configs', 'isAvatarRequired').value;\n    }\n\n    /**\n     * Avatar max upload size\n     */\n    static get avatarMaxUploadSize(): number {\n        return BasePhotoEdit.staticApi.get('configs', 'avatarMaxUploadSize').value;\n    }\n\n    /**\n     * Photo max upload size\n     */\n    static get photoMaxUploadSize(): number {\n        return BasePhotoEdit.staticApi.get('configs', 'photoMaxUploadSize').value;\n    }\n\n    /**\n     * Get toast duration\n     */\n    get toastDuration(): number {\n        return this.api.get('configs', 'toastDuration').value;\n    }\n\n    /**\n     * Get photos per row\n     */\n    get photosPerRow(): number {\n        return this.api.get('configs', 'photosPerRow').value;\n    }\n\n    /**\n     * Get current user\n     */\n    get currentUser(): any {\n        return this.api.get('users', this.auth.getUserId());\n    }\n\n    /**\n     * Tap photo\n     */\n    tapPhoto(row: number, col: number): void {\n        let photo: PhotoUnit = this.photos[row][col];\n\n        switch (photo.type) {\n            case 'more' :\n                this.showPhotoActions(photo);\n                break;\n\n            default :\n                photo.bigUrl\n                    ? this.photoViewer.show(photo.bigUrl) // view photo\n                    : this.showPhotoActions(photo); // show actions\n        }\n    }\n\n    /**\n     * Press photo\n     */\n    pressPhoto(row: number, col: number): void {\n        let photo: PhotoUnit = this.photos[row][col];\n\n        if (photo.bigUrl) { // show actions\n            this.showPhotoActions(photo);\n        }\n    }\n\n    /**\n     * Show all actions\n     */\n    showAllActions(): void {\n        let buttons = <any>[];\n\n        buttons = buttons.concat(this.getAvatarActions());\n        buttons = buttons.concat(this.getPhotoActions());\n\n        buttons.push({\n            text: this.translate.instant('cancel'),\n            role: 'cancel'\n        });\n\n        let actionSheet = this.actionSheetCtrl.create({\n            buttons: buttons,\n            enableBackdropDismiss: false\n        });\n\n        actionSheet.present();\n    }\n\n    /**\n     * Show photo actions\n     */\n    protected showPhotoActions(photo: PhotoUnit): void {\n        let buttons = <any>[];\n\n        switch (photo.type) {\n            case 'photo' :\n                buttons = this.getPhotoActions(photo.id);\n                break;\n\n            case 'avatar' :\n                buttons = this.getAvatarActions(photo.id);\n                break;\n\n            default :\n                buttons = this.getExtraPhotoActions(photo.type, photo.id);\n        }\n\n        if (buttons.length) {\n            buttons.push({\n                text: this.translate.instant('cancel'),\n                role: 'cancel'\n            });\n\n            let actionSheet = this.actionSheetCtrl.create({\n                buttons: buttons,\n                enableBackdropDismiss: false\n            });\n\n            actionSheet.present();\n        }\n    }\n\n    /**\n     * Get extra photo actions\n     */\n    protected getExtraPhotoActions(type: string, id?: number): [any] {\n        let buttons: any = [];\n\n        return buttons;\n    }\n\n    /**\n     * Get avatar actions\n     */\n    protected getAvatarActions(id?: number): [any] {\n        let buttons: any;\n\n        buttons = [{\n            text: this.translate.instant('take_avatar'),\n            handler: () => this.takePhoto('avatar', 'camera')\n        }, {\n            text: this.translate.instant('choose_avatar_from_library'),\n            handler: () => this.takePhoto('avatar', 'library')\n        }];\n\n        if (id && !BasePhotoEdit.isAvatarRequired) {\n            buttons.push({\n                text: this.translate.instant('delete_avatar'),\n                handler: () => {\n                    let avatarButtons: any[] = [];\n\n                    avatarButtons = [{\n                        text: this.translate.instant('no')\n                    }, {\n                        text: this.translate.instant('yes'),\n                        handler: () => this.deleteAvatar()\n                    }];\n\n                    let confirm = this.alert.create({\n                        message: this.translate.instant('delete_avatar_confirmation'),\n                        buttons: avatarButtons\n                    });\n\n                    confirm.present();\n                }\n            });\n        }\n\n        return buttons;\n    }\n\n    /**\n     * Get photo actions\n     */\n    protected getPhotoActions(id?: number): [any] {\n        let buttons: any = [];\n\n        if (this.permissions.isActionAllowed('photo_upload') || this.permissions.isActionPromoted('photo_upload')) {\n            buttons.push({\n                text: this.translate.instant('take_photo'),\n                handler: () => this.permissions.isActionAllowed('photo_upload')\n                    ? this.takePhoto('photo', 'camera')\n                    : this.permissions.showAccessDeniedAlert()\n            });\n\n            buttons.push({\n                text: this.translate.instant('choose_photo_from_library'),\n                handler: () => this.permissions.isActionAllowed('photo_upload')\n                    ? this.takePhoto('photo', 'library')\n                    : this.permissions.showAccessDeniedAlert()\n            });\n        }\n\n        if (id) {\n            buttons.push({\n                text: this.translate.instant('set_avatar'),\n                handler: () => this.setPhotoAsAvatar(id)\n            });\n\n            buttons.push({\n                text: this.translate.instant('delete_photo'),\n                handler: () => {\n                    let photoButtons: any[] = [];\n\n                    photoButtons = [{\n                        text: this.translate.instant('no')\n                    }, {\n                        text: this.translate.instant('yes'),\n                        handler: () => this.deletePhoto(id)\n                    }];\n\n                    let confirm = this.alert.create({\n                        message: this.translate.instant('delete_photo_confirmation'),\n                        buttons: photoButtons\n                    });\n\n                    confirm.present();\n                }\n            });\n        }\n\n        return buttons;\n    }\n\n    /**\n     * Refresh photo list\n     */\n    protected abstract refreshPhotoList(refreshType: PhotoRefreshType): void;\n\n    /**\n     * Delete avatar\n     */\n    protected async deleteAvatar(): Promise<any> {\n        if (this.currentUser.avatar && this.currentUser.avatar.id) {\n            let loader = this.loadingCtrl.create();\n\n            try {\n                await loader.present();\n                await this.api.destroy('avatars', this.currentUser.avatar.id);\n\n                BasePhotoEdit.avatarId = null;\n                BasePhotoEdit.avatarUrl = null;\n                BasePhotoEdit.bigAvatarUrl = null;\n                BasePhotoEdit.avatarUploaded = false;\n                BasePhotoEdit.isAvatarActive = true;\n\n                this.ref.markForCheck();\n\n                // process photos\n                this.refreshPhotoList('delete');\n                loader.dismiss();\n\n                let toast = this.toast.create({\n                    message: this.translate.instant('avatar_has_been_deleted'),\n                    closeButtonText: this.translate.instant('ok'),\n                    showCloseButton: true,\n                    duration: this.toastDuration\n                });\n\n                toast.present();\n\n                this.events.publish('user:avatarDeleted');\n            }\n            catch (e) {\n                loader.dismiss();\n\n                let alert = this.alert.create({\n                    title: this.translate.instant('error_occurred'),\n                    subTitle: this.translate.instant('delete_avatar_error'),\n                    buttons: [this.translate.instant('ok')]\n                });\n\n                alert.present();\n            }\n        }\n    }\n\n    /**\n     * Delete photo\n     */\n    protected async deletePhoto(id: number): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            await loader.present();\n            await this.api.destroy('photos', id);\n\n            this.ref.markForCheck();\n\n            // process photos\n            this.refreshPhotoList('delete');\n            loader.dismiss();\n\n            let toast = this.toast.create({\n                message: this.translate.instant('photo_has_been_deleted'),\n                closeButtonText: this.translate.instant('ok'),\n                showCloseButton: true,\n                duration: this.toastDuration\n            });\n\n            toast.present();\n        }\n        catch (e) {\n            loader.dismiss();\n\n            let alert = this.alert.create({\n                title: this.translate.instant('error_occurred'),\n                subTitle: this.translate.instant('delete_photo_error'),\n                buttons: [this.translate.instant('ok')]\n            });\n\n            alert.present();\n        }\n    }\n\n    /**\n     * Set photo as avatar\n     */\n    protected async setPhotoAsAvatar(id: number): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            await loader.present();\n            let data = await this.http.put(`${this.config.getApiUrl()}/photos/${id}/setAsAvatar/`, {})\n                .map(res => res.json())\n                .toPromise();\n\n            this.ref.markForCheck();\n\n            this.updateAvatar(data);\n            this.refreshPhotoList('refresh');\n\n            let toast = this.toast.create({\n                message: this.translate.instant('photo_set_avatar'),\n                closeButtonText: this.translate.instant('ok'),\n                showCloseButton: true,\n                duration: this.toastDuration\n            });\n\n            this.ref.markForCheck();\n\n            toast.present();\n            loader.dismiss();\n        }\n        catch (e) {\n            loader.dismiss();\n        }\n    }\n\n    /**\n     * Update avatar\n     */\n    protected updateAvatar(avatar: any): void {\n        BasePhotoEdit.isAvatarActive = avatar.active;\n        BasePhotoEdit.avatarUploaded = true;\n        BasePhotoEdit.avatarId = avatar.id;\n\n        BasePhotoEdit.avatarUrl = avatar.pendingUrl;\n        BasePhotoEdit.bigAvatarUrl = avatar.pendingBigUrl;\n\n        this.ref.markForCheck();\n\n        // update avatars collection\n        this.api.removeAll('avatars', {\n            userId: this.auth.getUserId()\n        });\n\n        this.api.add('avatars', {\n            id: avatar.id,\n            userId: avatar.userId,\n            url: avatar.url,\n            pendingUrl: avatar.pendingUrl,\n            bigUrl: avatar.bigUrl,\n            pendingBigUrl: avatar.pendingBigUrl,\n            active: avatar.active\n        });\n\n        this.ref.markForCheck();\n\n        this.events.publish('user:avatarUpdated');\n    }\n\n    /**\n     * Take photo\n     */\n    protected async takePhoto(type: PhotoUploaderType, source: PhotoUploaderSource): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            await loader.present();\n\n            // init photo uploader\n            if (type == 'avatar') {\n                this.photoUploader.url = this.config.getApiUrl() + '/avatars/me/';\n                this.photoUploader.maxFileSizeMb = BasePhotoEdit.avatarMaxUploadSize;\n            }\n            else  {\n                this.photoUploader.url = this.config.getApiUrl() + '/photos/';\n                this.photoUploader.maxFileSizeMb = BasePhotoEdit.photoMaxUploadSize;\n            }\n\n            this.photoUploader.successUploadCallback = (response) => {\n                response = JSON.parse(response);\n\n                // refresh avatar collection\n                if (type == 'avatar') {\n                    this.updateAvatar(response);\n\n                    let toast = this.toast.create({\n                        message: this.translate.instant('avatar_has_been_uploaded'),\n                        closeButtonText: this.translate.instant('ok'),\n                        showCloseButton: true,\n                        duration: this.toastDuration\n                    });\n\n                    toast.present();\n                }\n                else {\n                    this.api.add('photos', response);\n\n                    let toast = this.toast.create({\n                        message: this.translate.instant('photo_has_been_uploaded'),\n                        closeButtonText: this.translate.instant('ok'),\n                        showCloseButton: true,\n                        duration: this.toastDuration\n                    });\n\n                    toast.present();\n                }\n\n                this.refreshPhotoList('add');\n                this.ref.markForCheck();\n\n                loader.dismiss();\n            };\n\n            this.photoUploader.startUploadingCallback = () => loader.present();\n            this.photoUploader.errorUploadCallback = () => loader.dismiss();\n\n            this.photoUploader.takePicture(source);\n        }\n        catch (e) {\n            loader.dismiss()\n        }\n    }\n\n    /**\n     * Init avatar\n     */\n    protected initAvatar(avatar: any): void {\n        BasePhotoEdit.avatarUrl = avatar.pendingUrl;\n        BasePhotoEdit.bigAvatarUrl = avatar.pendingBigUrl;\n        BasePhotoEdit.isAvatarActive = avatar.active;\n        BasePhotoEdit.avatarUploaded = true;\n        BasePhotoEdit.avatarId = avatar.id;\n\n        this.ref.markForCheck();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user/edit/basePhotoEdit.ts","import { Component, Input, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Events, LoadingController, AlertController, ToastController, ActionSheetController, NavController } from 'ionic-angular';\nimport { DataStore } from 'js-data';\nimport { TranslateService } from 'ng2-translate';\nimport { PhotoViewer } from '@ionic-native/photo-viewer';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/map';\n\n// questions\nimport { QuestionControlService } from '../../../../services/questions/control-service';\nimport { QuestionManager } from '../../../../services/questions/manager';\nimport { QuestionBase }  from '../../../../services/questions/questions/base';\n\n// pages\nimport { EditUserPhotosPage } from '../photos/index';\n\n// base classes\nimport { BasePhotoEdit, PhotoRefreshType, PhotoUnit } from '../basePhotoEdit'\n\n// services\nimport { AuthService } from '../../../../services/auth/index';\nimport { PhotoUploaderService } from '../../../../services/photoUploader/index';\nimport { ConfigService } from '../../../../services/config/index';\nimport { PermissionsService } from '../../../../services/permissions/index';\nimport { SecureHttpService } from '../../../../services/http/index';\nimport { ApiUtilsService } from '../../../../services/api/utils';\n\n@Component({\n    selector: 'edit-user-questions',\n    templateUrl: 'index.html',\n    providers: [\n        QuestionControlService,\n        QuestionManager,\n        PhotoUploaderService,\n        ApiUtilsService\n    ]\n})\n\nexport class EditUserQuestionsPage extends BasePhotoEdit implements OnInit {\n    @Input() private questions = <any>[]; // list of questions\n\n    private sections: any = [];\n    private form:FormGroup;\n    private formReady: boolean = false;\n    private updatingUserProfile:boolean = false;\n    private questionsCount: number = 0;\n    private visiblePhotos = 7;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        protected ref: ChangeDetectorRef,\n        protected events: Events,\n        protected photoUploader: PhotoUploaderService,\n        protected config: ConfigService,\n        protected http: SecureHttpService,\n        protected loadingCtrl: LoadingController,\n        protected actionSheetCtrl: ActionSheetController,\n        protected alert: AlertController,\n        protected toast: ToastController,\n        protected permissions: PermissionsService,\n        protected nav: NavController,\n        protected translate: TranslateService,\n        protected photoViewer: PhotoViewer,\n        protected api: DataStore,\n        protected auth:AuthService,\n        private apiUtils:ApiUtilsService,\n        private questionControl:QuestionControlService,\n        private questionManager:QuestionManager)\n    {\n        super(\n            ref,\n            events,\n            photoUploader,\n            config,\n            http,\n            loadingCtrl,\n            actionSheetCtrl,\n            alert,\n            toast,\n            permissions,\n            nav,\n            translate,\n            api,\n            auth,\n            photoViewer);\n    }\n\n    /**\n     * Component init\n     */\n    async ngOnInit(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            await loader.present();\n\n            // clear user cached data\n            this.apiUtils.clearUserData(this.auth.getUserId());\n\n            // load all pages dependencies\n            let [editQuestions] = await Promise.all([\n                this.api.getMapper('editQuestions').findAll({}), // get all edit questions (don't cache items)\n                this.api.findAll('questionsData'), // get all questions data (cache them)\n                this.api.find('users', this.auth.getUserId(), { // get logged user info with relations\n                    params: {\n                        with: ['avatar', 'permissions', 'photos', 'memberships']\n                    }\n                })\n            ]);\n\n            // init user avatar\n            if (this.currentUser.avatar && this.currentUser.avatar.id) {\n                this.initAvatar(this.currentUser.avatar);\n            }\n\n            let questionsData: any = this.api.getAll('questionsData'); // list of questions data\n\n            // process questions\n            if (editQuestions && editQuestions.questions) {\n                editQuestions.questions.forEach((questionData:any) => {\n                    let data = {\n                        section: '',\n                        questions: []\n                    };\n\n                    data.section = questionData.section;\n\n                    questionData.items.forEach((question:any) => {\n                        // get value from question data\n                        let questionValue: any = questionsData.filter((item) => {\n                            return item.name == question.key;\n                        });\n\n                        // create a question\n                        let questionItem:QuestionBase = this.questionManager.getQuestion(question.type, {\n                            key: question.key,\n                            label: question.label,\n                            values: question.values,\n                            value: (questionValue.length ? questionValue[0].value : null)\n                        }, question.params);\n\n                        questionItem.validators = [];\n\n                        // add validators\n                        if (question.validators) {\n                            questionItem.validators = question.validators;\n                        }\n\n                        data.questions.push(questionItem);\n                        this.questions.push(questionItem);\n                    });\n\n                    this.sections.push(data);\n                });\n            }\n\n            // load photos\n            this.loadPhotoList();\n\n            // register all questions inside a form group\n            this.form = this.questionControl.toFormGroup(this.questions);\n            this.formReady = true;\n            this.questionsCount = this.questions.length;\n\n            loader.dismiss();\n        }\n        catch (e) {\n            loader.dismiss();\n        }\n    }\n\n    /**\n     * Is avatar valid\n     */\n    isAvatarValid(): boolean {\n        return !BasePhotoEdit.isAvatarRequired || (BasePhotoEdit.isAvatarRequired && BasePhotoEdit.avatarUploaded);\n    }\n\n    ionViewWillEnter(): void {\n        // refresh photo list\n        this.loadPhotoList();\n    }\n\n    /**\n     * Submit form\n     */\n    async submit(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            await loader.present();\n\n            let questions: any = [];\n\n            // process questions\n            this.questions.forEach((questionData: QuestionBase) => {\n                questions.push({\n                    name: questionData.key,\n                    value: this.form.value[questionData.key],\n                    type: questionData.controlType\n                });\n            });\n\n            this.updatingUserProfile = true;\n\n            // update questions\n            let updatedQuestions: any = await this.api.updateAll('questionsData', questions, {}, {suffix: 'me'});\n\n            // refresh auth token if exist\n            updatedQuestions.forEach((question: any) => {\n                if (question.params && question.params.token) {\n                    this.auth.setAuthenticated(question.params.token);\n                }\n            });\n\n            // clear user cached data\n            this.apiUtils.clearUserData(this.auth.getUserId(), true);\n\n            // refresh current user's data\n            await this.api.find('users', this.auth.getUserId(), {\n                params: {\n                    with: ['avatar', 'permissions', 'photos', 'memberships']\n                }\n            });\n\n            this.updatingUserProfile = false;\n            loader.dismiss();\n\n            let toast = this.toast.create({\n                message: this.translate.instant('profile_updated'),\n                closeButtonText: this.translate.instant('ok'),\n                showCloseButton: true,\n                duration: this.toastDuration\n            });\n\n            toast.present();\n\n            this.events.publish('user:updated');\n        }\n        catch (e) {\n            loader.dismiss();\n            this.updatingUserProfile = false;\n        }\n    }\n\n    /**\n     * Refresh photo list\n     */\n    protected refreshPhotoList(refreshType: PhotoRefreshType): void {\n        this.loadPhotoList();\n    }\n\n    /**\n     * Load photo list\n     */\n    protected loadPhotoList(): void {\n        this.photos = []; // clear current photo list\n        let photos: PhotoUnit[] = [];\n\n        photos.push(new PhotoUnit(\n            BasePhotoEdit.avatarId,\n            BasePhotoEdit.avatarUrl ? BasePhotoEdit.avatarUrl : BasePhotoEdit.defaultAvatar,\n            BasePhotoEdit.bigAvatarUrl ? BasePhotoEdit.bigAvatarUrl : BasePhotoEdit.bigDefaultAvatar,\n            'avatar',\n            BasePhotoEdit.isAvatarActive\n        ));\n\n        // get user photos\n        let apiPhotos = this.api.filter('photos', {\n            where: {\n                userId: this.auth.getUserId()\n            },\n            orderBy: [\n                ['id', 'DESC']\n            ],\n            limit: this.visiblePhotos\n        });\n\n        // process photos\n        for (let i = 0; i < this.visiblePhotos; i++) {\n            let photoDetails = apiPhotos && apiPhotos[i] ? apiPhotos[i] : null;\n\n            photos.push(new PhotoUnit(\n                photoDetails ? photoDetails.id : null,\n                photoDetails ? photoDetails.url : null,\n                photoDetails ? photoDetails.bigUrl : null,\n                'photo',\n                photoDetails ? photoDetails.approved : true\n            ));\n        }\n\n        photos.push(new PhotoUnit(\n            null,\n            null,\n            null,\n            'more',\n            true\n        ));\n\n        // chunk photos\n        for (let i = 0; i < photos.length; i += this.photosPerRow) {\n            this.photos.push(photos.slice(i, i + this.photosPerRow));\n        }\n    }\n\n    /**\n     * Get extra photo actions\n     */\n    protected getExtraPhotoActions(type: string, id?: number): [any] {\n        let buttons = <any>[];\n\n        switch (type) {\n            case 'more' :\n                buttons.push({\n                    text: this.translate.instant('view_all_photos'),\n                    handler: () => this.nav.push(EditUserPhotosPage)\n                });\n\n                if (this.permissions.isActionAllowed('photo_upload')\n                        || this.permissions.isActionPromoted('photo_upload')) {\n\n                    buttons.push({\n                        text: this.translate.instant('take_photo'),\n                        handler: () => this.permissions.isActionAllowed('photo_upload')\n                            ? this.takePhoto('photo', 'camera')\n                            : this.permissions.showAccessDeniedAlert()\n                    });\n\n                    buttons.push({\n                        text: this.translate.instant('choose_photo_from_library'),\n                        handler: () => this.permissions.isActionAllowed('photo_upload')\n                            ? this.takePhoto('photo', 'library')\n                            : this.permissions.showAccessDeniedAlert()\n                    });\n                }\n                break;\n\n            default :\n        }\n\n        return buttons;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user/edit/questions/index.ts","import { Injectable } from '@angular/core';\nimport { InAppPurchase } from '@ionic-native/in-app-purchase';\nimport { Platform } from 'ionic-angular';\n\nimport { SecureHttpService } from '../../services/http/index';\nimport { ConfigService } from '../../services/config/index';\n\n@Injectable()\nexport class InAppsService\n{\n    /**\n     * Constructor\n     */\n    constructor(\n        private iap: InAppPurchase,\n        private http: SecureHttpService,\n        private config: ConfigService,\n        private platform: Platform\n    ){}\n\n    getProducts(data: any[]): any{\n        let ids = [];\n        for (let i in data){\n            ids.push(data[i]['productId'].toLowerCase());\n        }\n        return this.iap.getProducts(ids);\n    }\n\n    async buyProduct(productId: string): Promise<any>{\n        try {\n            let data = await this.iap.buy(productId.toLowerCase());\n            let validationResult = await this.validatePurchase(data);\n\n            if ((validationResult.id != -1) && this.platform.is('android')) {\n                await this.iap.consume(data['productType'], data['receipt'], data['signature'])\n            }\n            return validationResult;\n        } catch (e){}\n    }\n\n    private validatePurchase(data: any): Promise<any>{\n        let platform = 'unknown';\n        if (this.platform.is('android')){\n            platform = 'android';\n        } else if (this.platform.is('ios')){\n            platform = 'ios';\n        }\n        return this.http.post(this.config.getApiUrl() + '/inapps/', JSON.stringify({\n            \"platform\": platform,\n            \"transactionData\": data\n        }))\n            .map(res => res.json())\n            .toPromise();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/inapps/index.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 184;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 184\n// module chunks = 0","import { Injectable } from '@angular/core';\nimport { ModalController } from 'ionic-angular';\n\n// import questions\nimport { QuestionBase, QuestionBaseOptions, QuestionBaseParams } from './questions/base';\nimport { TextQuestion, QuestionTextOptions, QuestionTextParams } from './questions/text';\nimport { SelectQuestion, QuestionSelectOptions, QuestionSelectParams } from './questions/select';\nimport { TextareaQuestion } from './questions/textarea';\nimport { RangeQuestion, QuestionRangeParams } from './questions/range';\nimport { CheckboxQuestion } from './questions/checkbox';\nimport { DateQuestion, QuestionDateParams } from './questions/date';\nimport { DateRangeQuestion } from './questions/dateRange';\nimport { GoogleMapLocationQuestion } from './questions/googlemapLocation';\nimport { ExtendedGoogleMapLocationQuestion, QuestionExtendedGoogleMapLocationParams } from './questions/extendedGooglemapLocation';\n\n@Injectable()\nexport class QuestionManager {\n    // list of available questions\n    public static TYPE_LOCATION: string = 'location';\n    public static TYPE_URL: string = 'url';\n    public static TYPE_TEXT: string = 'text';\n    public static TYPE_EMAIL: string = 'email';\n    public static TYPE_PASSWORD: string = 'password';\n    public static TYPE_MULTISELECT: string = 'multiselect';\n    public static TYPE_SELECT: string = 'select';\n    public static TYPE_FSELECT: string = 'fselect';\n    public static TYPE_RADIO: string = 'radio';\n    public static TYPE_TEXTAREA: string = 'textarea';\n    public static TYPE_RANGE: string = 'range';\n    public static TYPE_CHECKBOX: string = 'checkbox';\n    public static TYPE_DATE: string = 'date';\n    public static TYPE_DATE_RANGE: string = 'date_range';\n    public static TYPE_AGE: string = 'age';\n    public static TYPE_BIRTHDATE: string = 'birthdate';\n    public static TYPE_MULTICHECKBOX: string = 'multicheckbox';\n    public static TYPE_GOOGLEMAP_LOCATION: string = 'googlemap_location';\n    public static TYPE_EXTENDED_GOOGLEMAP_LOCATION: string = 'extended_googlemap_location';\n\n    /**\n     * Constructor\n     */\n    constructor(private modalController: ModalController) {}\n\n    /**\n     * Get config\n     */\n    public getQuestion(type: string, options: any = {}, params: any = {}): QuestionBase {\n        switch (type) {\n            case QuestionManager.TYPE_LOCATION:\n            case QuestionManager.TYPE_URL:\n            case QuestionManager.TYPE_TEXT:\n            case QuestionManager.TYPE_EMAIL:\n            case QuestionManager.TYPE_PASSWORD:\n                let textOptions = new QuestionTextOptions();\n\n                if (options) {\n                    textOptions.value = options.value;\n                    textOptions.values = options.values;\n                    textOptions.key = options.key;\n                    textOptions.label = options.label;\n                    textOptions.type = type != QuestionManager.TYPE_LOCATION ? type : 'text';\n                    textOptions.validators = options.validators;\n                }\n\n                let textParams = new QuestionTextParams();\n\n                if (params) {\n                    textParams.questionClass = params.questionClass;\n                    textParams.hideErrors = params.hideErrors;\n                    textParams.hideWarning = params.hideWarning;\n                    textParams.stacked = params.stacked;\n                }\n\n                return new TextQuestion(textOptions, textParams);\n\n            case QuestionManager.TYPE_RADIO:\n            case QuestionManager.TYPE_SELECT:\n            case QuestionManager.TYPE_FSELECT:\n                let selectOptions = new QuestionSelectOptions();\n\n                if (options) {\n                    selectOptions.value = options.value;\n                    selectOptions.values = options.values;\n                    selectOptions.key = options.key;\n                    selectOptions.label = options.label;\n                    selectOptions.validators = options.validators;\n                }\n\n                let selectParams = new QuestionSelectParams();\n\n                if (params) {\n                    selectParams.questionClass = params.questionClass;\n                    selectParams.hideErrors = params.hideErrors;\n                    selectParams.hideWarning = params.hideWarning;\n                    selectParams.hideEmptyValue = params.hideEmptyValue;\n                }\n\n                return new SelectQuestion(selectOptions, selectParams);\n\n            case QuestionManager.TYPE_MULTISELECT:\n            case QuestionManager.TYPE_MULTICHECKBOX:\n                let multiSelectOptions = new QuestionSelectOptions();\n\n                if (options) {\n                    multiSelectOptions.value = options.value;\n                    multiSelectOptions.values = options.values;\n                    multiSelectOptions.key = options.key;\n                    multiSelectOptions.label = options.label;\n                    multiSelectOptions.multiple = true;\n                    multiSelectOptions.validators = options.validators;\n                }\n\n                let multiSelectParams = new QuestionSelectParams();\n\n                if (params) {\n                    multiSelectParams.questionClass = params.questionClass;\n                    multiSelectParams.hideErrors = params.hideErrors;\n                    multiSelectParams.hideWarning = params.hideWarning;\n                    multiSelectParams.hideEmptyValue = params.hideEmptyValue;\n                }\n\n                return new SelectQuestion(multiSelectOptions, multiSelectParams);\n\n            case QuestionManager.TYPE_TEXTAREA:\n                let textAreaOptions = new QuestionBaseOptions();\n\n                if (options) {\n                    textAreaOptions.value = options.value;\n                    textAreaOptions.values = options.values;\n                    textAreaOptions.key = options.key;\n                    textAreaOptions.label = options.label;\n                    textAreaOptions.validators = options.validators;\n                }\n\n                let textAreaParams = new QuestionBaseParams();\n\n                if (params) {\n                    textAreaParams.questionClass = params.questionClass;\n                    textAreaParams.hideErrors = params.hideErrors;\n                    textAreaParams.hideWarning = params.hideWarning;\n                }\n\n                return new TextareaQuestion(textAreaOptions, textAreaParams);\n\n            case QuestionManager.TYPE_RANGE:\n                let rangeOptions = new QuestionBaseOptions();\n\n                if (options) {\n                    rangeOptions.value = options.value;\n                    rangeOptions.values = options.values;\n                    rangeOptions.key = options.key;\n                    rangeOptions.label = options.label;\n                    rangeOptions.validators = options.validators;\n                }\n\n                let rangeParams = new QuestionRangeParams();\n\n                if (params) {\n                    rangeParams.questionClass = params.questionClass;\n                    rangeParams.hideErrors = params.hideErrors;\n                    rangeParams.hideWarning = params.hideWarning;\n                    rangeParams.min = params.min;\n                    rangeParams.max = params.max;\n                }\n\n                return new RangeQuestion(rangeOptions, rangeParams);\n\n            case QuestionManager.TYPE_CHECKBOX:\n                let checkboxOptions = new QuestionBaseOptions();\n\n                if (options) {\n                    checkboxOptions.value = options.value;\n                    checkboxOptions.values = options.values;\n                    checkboxOptions.key = options.key;\n                    checkboxOptions.label = options.label;\n                    checkboxOptions.validators = options.validators;\n                }\n\n                let checkboxParams = new QuestionBaseParams();\n\n                if (params) {\n                    checkboxParams.questionClass = params.questionClass;\n                    checkboxParams.hideErrors = params.hideErrors;\n                    checkboxParams.hideWarning = params.hideWarning;\n                }\n\n                return new CheckboxQuestion(checkboxOptions, checkboxParams);\n\n            case QuestionManager.TYPE_GOOGLEMAP_LOCATION:\n                let googleMapLocationOptions = new QuestionBaseOptions();\n\n                if (options) {\n                    googleMapLocationOptions.value = options.value;\n                    googleMapLocationOptions.values = options.values;\n                    googleMapLocationOptions.key = options.key;\n                    googleMapLocationOptions.label = options.label;\n                    googleMapLocationOptions.validators = options.validators;\n                }\n\n                let googleMapLocationParams = new QuestionRangeParams();\n\n                if (params) {\n                    googleMapLocationParams.questionClass = params.questionClass;\n                    googleMapLocationParams.hideErrors = params.hideErrors;\n                    googleMapLocationParams.hideWarning = params.hideWarning;\n                }\n\n                let locationQuestion:GoogleMapLocationQuestion = new GoogleMapLocationQuestion(googleMapLocationOptions, googleMapLocationParams);\n                locationQuestion.setModal(this.modalController);\n\n                return locationQuestion;\n\n            case QuestionManager.TYPE_EXTENDED_GOOGLEMAP_LOCATION:\n                let extendedGoogleMapLocationOptions = new QuestionBaseOptions();\n\n                if (options) {\n                    extendedGoogleMapLocationOptions.value = options.value;\n                    extendedGoogleMapLocationOptions.values = options.values;\n                    extendedGoogleMapLocationOptions.key = options.key;\n                    extendedGoogleMapLocationOptions.label = options.label;\n                    extendedGoogleMapLocationOptions.validators = options.validators;\n                }\n\n                let extendedGoogleMapLocationParams = new QuestionExtendedGoogleMapLocationParams();\n\n                if (params) {\n                    extendedGoogleMapLocationParams.questionClass = params.questionClass;\n                    extendedGoogleMapLocationParams.hideErrors = params.hideErrors;\n                    extendedGoogleMapLocationParams.hideWarning = params.hideWarning;\n                    extendedGoogleMapLocationParams.min = params.min;\n                    extendedGoogleMapLocationParams.max = params.max;\n                    extendedGoogleMapLocationParams.step = params.step;\n                    extendedGoogleMapLocationParams.unit = params.unit;\n                }\n\n                let extendedLocationQuestion:ExtendedGoogleMapLocationQuestion =\n                    new ExtendedGoogleMapLocationQuestion(extendedGoogleMapLocationOptions, extendedGoogleMapLocationParams);\n\n                extendedLocationQuestion.setModal(this.modalController);\n\n                return extendedLocationQuestion;\n\n            case QuestionManager.TYPE_DATE_RANGE:\n                let dateRangeOptions = new QuestionBaseOptions();\n\n                if (options) {\n                    dateRangeOptions.value = options.value;\n                    dateRangeOptions.values = options.values;\n                    dateRangeOptions.key = options.key;\n                    dateRangeOptions.label = options.label;\n                    dateRangeOptions.validators = options.validators;\n                }\n\n                let dateRangeParams = new QuestionDateParams();\n\n                if (params) {\n                    dateRangeParams.questionClass = params.questionClass;\n                    dateRangeParams.hideErrors = params.hideErrors;\n                    dateRangeParams.hideWarning = params.hideWarning;\n                    dateRangeParams.minDate = params.minDate;\n                    dateRangeParams.maxDate = params.maxDate;\n                    dateRangeParams.displayFormat = params.displayFormat;\n                }\n\n                return new DateRangeQuestion(dateRangeOptions, dateRangeParams);\n\n            case QuestionManager.TYPE_DATE:\n            case QuestionManager.TYPE_AGE:\n            case QuestionManager.TYPE_BIRTHDATE:\n                let dateOptions = new QuestionBaseOptions();\n\n                if (options) {\n                    dateOptions.value = options.value;\n                    dateOptions.values = options.values;\n                    dateOptions.key = options.key;\n                    dateOptions.label = options.label;\n                    dateOptions.validators = options.validators;\n                }\n\n                let dateParams = new QuestionDateParams();\n\n                if (params) {\n                    dateParams.questionClass = params.questionClass;\n                    dateParams.hideErrors = params.hideErrors;\n                    dateParams.hideWarning = params.hideWarning;\n                    dateParams.minDate = params.minDate;\n                    dateParams.maxDate = params.maxDate;\n                    dateParams.displayFormat = params.displayFormat;\n                }\n\n                return new DateQuestion(dateOptions, dateParams);\n\n            default:\n                throw new TypeError(`Unsupported type ${type}`);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/questions/manager.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 235;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 235\n// module chunks = 0","import { Injectable} from '@angular/core';\nimport { ServerEventsChannel } from '../index';\nimport { DataStore } from 'js-data';\nimport { Events } from 'ionic-angular';\n\n@Injectable()\nexport class ConfigsChannelService implements ServerEventsChannel {\n    /**\n     * Constructor\n     */\n    constructor(\n        private events: Events,\n        private api: DataStore) {}\n\n    /**\n     * Get channel name\n     */\n    getChannelName(): string {\n        return 'configs'\n    }\n\n    /**\n     * Apply changes\n     */\n    applyChanges(data: any[]): void {\n        let updatedConfigs: string[] = [];\n\n        // update configs\n        data.forEach((config: any) => {\n            this.api.add('configs', config);\n            updatedConfigs.push(config.id);\n        });\n\n        // remove not updated configs\n        this.api.removeAll('configs', {\n            where: {\n                id: {\n                    'notIn': updatedConfigs\n                }\n            }\n        });\n\n        this.events.publish('configs:updated');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/serverEvents/channels/configs.ts","import { Injectable } from '@angular/core';\nimport { ServerEventsChannel } from '../index';\nimport { DataStore } from 'js-data';\nimport { Events } from 'ionic-angular';\n\n@Injectable()\nexport class PermissionsChannelService implements ServerEventsChannel {\n    /**\n     * Constructor\n     */\n    constructor(\n        private events: Events,\n        private api: DataStore) {}\n\n    /**\n     * Get channel name\n     */\n    getChannelName(): string {\n        return 'permissions'\n    }\n\n    /**\n     * Apply changes\n     */\n    applyChanges(data: any[]): void {\n        let updatedUserPermissions: string[] = [];\n\n        // update user permissions\n        data.forEach((permission: any) => {\n            this.api.add('permissions', permission);\n            updatedUserPermissions.push(permission.id);\n        });\n\n        // remove not updated permissions\n        this.api.removeAll('permissions', {\n            where: {\n                id: {\n                    'notIn': updatedUserPermissions\n                }\n            }\n        });\n\n        this.events.publish('permissions:updated');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/serverEvents/channels/permissions.ts","import { Injectable } from '@angular/core';\nimport { ServerEventsChannel } from '../index';\nimport { Events } from 'ionic-angular';\nimport { DataStore } from 'js-data';\n\n@Injectable()\nexport class ConversationsChannelService implements ServerEventsChannel {\n    /**\n     * Constructor\n     */\n    constructor(\n        private events: Events,\n        private api: DataStore) {}\n\n    /**\n     * Get channel name\n     */\n    getChannelName(): string {\n        return 'conversations'\n    }\n\n    /**\n     * Apply changes\n     */\n    applyChanges(data: any[]): void {\n        let updatedConversations: number[] = [];\n\n        // update conversations\n        data.forEach((conversation: any) => {\n            this.api.add('conversations', conversation);\n            updatedConversations.push(conversation.id);\n        });\n\n        // remove not updated conversations\n        this.api.removeAll('conversations', {\n            where: {\n                id: {\n                    'notIn': updatedConversations\n                }\n            }\n        });\n\n        // remove messages\n        this.api.removeAll('messages', {\n            where: {\n                conversationId: {\n                    'notIn': updatedConversations\n                }\n            }\n        });\n\n        this.events.publish('conversations:updated');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/serverEvents/channels/conversations.ts","import { Injectable } from '@angular/core';\nimport { ServerEventsChannel } from '../index';\nimport { Events } from 'ionic-angular';\nimport { DataStore } from 'js-data';\n\n@Injectable()\nexport class MatchedUsersChannelService implements ServerEventsChannel {\n    /**\n     * Constructor\n     */\n    constructor(\n        private events: Events,\n        private api: DataStore) {}\n\n    /**\n     * Get channel name\n     */\n    getChannelName(): string {\n        return 'matchedUsers'\n    }\n\n    /**\n     * Apply changes\n     */\n    applyChanges(data: any[]): void {\n        let updatedMatches: number[] = [];\n\n        // update matched users\n        data.forEach((match: any) => {\n            this.api.add('matchedUsers', match);\n            updatedMatches.push(match.id);\n        });\n\n        // remove not updated matches\n        this.api.removeAll('matchedUsers', {\n            where: {\n                id: {\n                    'notIn': updatedMatches\n                }\n            }\n        });\n\n        this.events.publish('matchedUsers:updated');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/serverEvents/channels/matchedUsers.ts","import { Injectable } from '@angular/core';\nimport { ServerEventsChannel } from '../index';\nimport { Events } from 'ionic-angular';\nimport { DataStore } from 'js-data';\n\n@Injectable()\nexport class MessagesChannelService implements ServerEventsChannel {\n    /**\n     * Constructor\n     */\n    constructor(\n        private events: Events,\n        private api: DataStore) {}\n\n\n    /**\n     * Get channel name\n     */\n    getChannelName(): string {\n        return 'messages'\n    }\n\n    /**\n     * Apply changes\n     */\n    applyChanges(data: any[]): void {\n        if (data.length) {\n            let updatedMessages: any = {\n                newMessages: [],\n                updatedMessages: []\n            };\n\n            data.forEach((message: any) => {\n                let oldMessage: any = this.api.filter('messages', {where: {\n                    id: message.id\n                }});\n\n                let messageInfo: any = {\n                    id: message.id,\n                    conversationId: message.conversationId\n                };\n\n                oldMessage.length\n                    ? updatedMessages.updatedMessages.push(messageInfo)\n                    : updatedMessages.newMessages.push(messageInfo);\n\n                this.api.add('messages', message);\n            });\n\n            this.events.publish('messages:updated', updatedMessages);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/serverEvents/channels/messages.ts","import { Injectable } from '@angular/core';\nimport { ServerEventsChannel } from '../index';\nimport { DataStore } from 'js-data';\nimport { Events } from 'ionic-angular';\n\n@Injectable()\nexport class GuestsChannelService implements ServerEventsChannel {\n    /**\n     * Constructor\n     */\n    constructor(\n        private events: Events,\n        private api: DataStore) {}\n\n    /**\n     * Get channel name\n     */\n    getChannelName(): string {\n        return 'guests'\n    }\n\n    /**\n     * Apply changes\n     */\n    applyChanges(data: any[]): void {\n        let updatedGuests: number[] = [];\n\n        // update guests\n        data.forEach((guest: any) => {\n            this.api.add('guests', guest);\n            updatedGuests.push(guest.id);\n        });\n\n        // remove not updated guests\n        this.api.removeAll('guests', {\n            where: {\n                id: {\n                    'notIn': updatedGuests\n                }\n            }\n        });\n\n        this.events.publish('guests:updated');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/serverEvents/channels/guests.ts","import { Injectable } from '@angular/core';\nimport { ServerEventsChannel } from '../index';\nimport { DataStore } from 'js-data';\nimport { Events } from 'ionic-angular';\n\n@Injectable()\nexport class HotListChannelService implements ServerEventsChannel {\n    /**\n     * Constructor\n     */\n    constructor(\n        private events: Events,\n        private api: DataStore) {}\n\n    /**\n     * Get channel name\n     */\n    getChannelName(): string {\n        return 'hotList'\n    }\n\n    /**\n     * Apply changes\n     */\n    applyChanges(data: any[]): void {\n        let updatedUsers: number[] = [];\n\n        // update users\n        data.forEach((hotListUser: any) => {\n            this.api.add('hotListUsers', hotListUser);\n            updatedUsers.push(hotListUser.id);\n        });\n\n        // remove not updated users\n        this.api.removeAll('hotListUsers', {\n            where: {\n                id: {\n                    'notIn': updatedUsers\n                }\n            }\n        });\n\n        this.events.publish('hotList:updated');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/serverEvents/channels/hotList.ts","import { Injectable } from '@angular/core';\nimport { QuestionBase, QuestionBaseOptions, QuestionBaseParams } from './base';\n\nexport class QuestionDateParams extends QuestionBaseParams {\n    questionClass: string;\n    hideErrors: boolean;\n    hideWarning: boolean;\n    minDate: string;\n    maxDate: string;\n    displayFormat: string;\n};\n\n@Injectable()\nexport class DateQuestion extends QuestionBase {\n    public controlType = 'date';\n    public displayFormat: string = 'MMM DD, YYYY';\n    public minDate: string;\n    public maxDate: string;\n\n    /**\n     * Constructor\n     */\n    constructor(options: QuestionBaseOptions, params?: QuestionDateParams) {\n\n        super(options, params);\n\n        // init default max and min date range\n        let currentTime = new Date();\n        this.maxDate = currentTime.getFullYear().toString();\n        this.minDate = (currentTime.getFullYear() - 100).toString();\n\n        // init extra prams\n        if (params) {\n            params.displayFormat\n                ? this.displayFormat = params.displayFormat\n                : null;\n\n            params.minDate\n                ? this.minDate = params.minDate\n                : null;\n\n            params.maxDate\n                ? this.maxDate = params.maxDate\n                : null;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/questions/questions/date.ts","import { Injectable } from '@angular/core';\nimport { QuestionBase, QuestionBaseOptions, QuestionBaseParams } from './base';\nimport { ModalController } from 'ionic-angular';\n\n// import shared components\nimport { LocationAutocompleteComponent } from '../../../shared/components/locationAutocomplete/index';\n\n@Injectable()\nexport class GoogleMapLocationQuestion extends QuestionBase {\n    public controlType = 'googlemap_location';\n    protected questionChanged = false;\n    protected modalController: ModalController;\n\n    /**\n     * Constructor\n     */\n    constructor(options: QuestionBaseOptions, params?: QuestionBaseParams) {\n        super(options, params);\n\n        if (!this.value) {\n            this.value = '';\n        }\n    }\n\n    /**\n     * Set modal\n     */\n    setModal(modalController: ModalController): void {\n        this.modalController = modalController;\n    }\n\n    /**\n     * Show address modal\n     */\n    showAddressModal(): void {\n        let modal = this.modalController.create(LocationAutocompleteComponent, {\n            q: this.getValue()\n        });\n\n        modal.onDidDismiss(location => {\n            this.setValue(location);\n\n            if (!this.questionChanged) {\n                this.controlView.markAsDirty();\n                this.controlView.markAsTouched();\n                this.questionChanged = true;\n            }\n\n            // trigger manually about update in the question\n            this.controlView.updateValueAndValidity();\n        });\n\n        modal.present();\n    }\n\n    /**\n     * Get value\n     */\n    protected getValue(): any {\n        return this.value;\n    }\n\n    /**\n     * Set value\n     */\n    protected setValue(location: string): void {\n        this.value = location;\n        this.controlView.setValue(location);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/questions/questions/googlemapLocation.ts","import { Component, OnInit, Inject, forwardRef } from '@angular/core';\nimport { ViewController, AlertController, NavParams } from 'ionic-angular';\nimport 'rxjs/add/operator/map';\n\n// services\nimport { SecureHttpService } from '../../../services/http/index';\nimport { ConfigService } from '../../../services/config/index';\nimport { TranslateService } from 'ng2-translate';\n\n@Component({\n    selector: 'location-autocomplete',\n    templateUrl: './index.html',\n    providers: [\n        forwardRef(() => SecureHttpService)\n    ]\n})\nexport class LocationAutocompleteComponent implements OnInit {\n    private searchQuery: string;\n    private autocompleteItems = [];\n    private autocompleteLoading = false;\n    private http: SecureHttpService;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private viewCtrl: ViewController,\n        @Inject(forwardRef(() => SecureHttpService)) http: SecureHttpService,\n        private config: ConfigService,\n        private navParams: NavParams,\n        private alert: AlertController,\n        private translate: TranslateService)\n    {\n        this.searchQuery = this.navParams.get('q');\n        this.http = http;\n    }\n\n    /**\n     * Component init\n     */\n    ngOnInit(): void {\n        this.updateSearch();\n    }\n\n    /**\n     * Dismiss\n     */\n    dismiss() {\n        this.viewCtrl.dismiss('');\n    }\n\n    /**\n     * Choose item\n     */\n    chooseItem(location: string) {\n        this.viewCtrl.dismiss(location);\n    }\n\n    /**\n     * Update search\n     */\n    updateSearch() {\n        if (!this.searchQuery) {\n            this.autocompleteItems = [];\n\n            return;\n        }\n\n        this.autocompleteLoading = true;\n        this.http.get(this.config.getApiUrl() + '/location-autocomplete/?q=' + this.searchQuery)\n            .map(res => res.json())\n            .subscribe(\n                predictions => {\n                    this.autocompleteLoading = false;\n                    this.autocompleteItems = predictions;\n                },\n                () => {\n                    this.autocompleteLoading = false;\n                    this.viewCtrl.dismiss('');\n\n                    let alert = this.alert.create({\n                        title: this.translate.instant('error_occurred'),\n                        subTitle: this.translate.instant('couldnt_complete_request'),\n                        buttons: [this.translate.instant('ok')]\n                    });\n\n                    alert.present();\n                }\n            );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/locationAutocomplete/index.ts","import { NavController, Slides, NavParams, ModalController } from 'ionic-angular';\nimport { Component, OnInit, OnDestroy,  ViewChild, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { DataStore } from 'js-data';\n\n// services\nimport { ApplicationService } from '../../services/application/index';\nimport { PushNotificationsService } from '../../services/push/index';\nimport { AuthService } from '../../services/auth/index';\nimport { ServerEventsService } from '../../services/serverEvents/index';\n\n// pages\nimport { MessagesPage } from '../messages/index';\n\n// components\nimport { MatchedUserPageComponent } from './components/matchedUser/index';\n\n@Component({\n    selector: 'dashboard',\n    templateUrl: 'index.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DashboardPage implements OnInit, OnDestroy {\n    @ViewChild('componentsSlider') slider: Slides = null;\n\n    private static PUSH_NOTIFICATION_MESSAGE: string = 'message';\n    private static PUSH_NOTIFICATION_MATCHED_USER: string = 'matchedUser';\n\n    private isDashboardActive: boolean = true;\n    private pageReady: boolean = false;\n    private activeComponent: string;\n    private activeSubComponent: string;\n    private newMatchedUsersHandler: any;\n\n    private components: string[] = [\n        'profile',\n        'search',\n        'conversations'\n    ];\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private modalCtrl: ModalController,\n        private ref: ChangeDetectorRef,\n        private application: ApplicationService,\n        private nav: NavController,\n        private pushNotifications: PushNotificationsService,\n        private navParams: NavParams,\n        private serverEvents: ServerEventsService,\n        private auth: AuthService,\n        private api: DataStore) {}\n\n    /**\n     * Component init\n     */\n    async ngOnInit(): Promise<any> {\n        try {\n            // load all page dependencies\n            await Promise.all([\n                this.api.find('users', this.auth.getUserId(), { // get logged user data\n                    params: {\n                        with: ['avatar', 'permissions', 'photos', 'memberships']\n                    }\n                })\n            ]);\n\n            // init push notifications\n            this.pushNotifications.subscribe(this.processPushNotification, this);\n\n            // init server events\n            this.serverEvents.restart();\n\n            // new matched users\n            this.newMatchedUsersHandler = setInterval(() => this.showNewMatchedUserPopup(), this.newMatchedUsersCheckDelay);\n\n            this.pageReady = true;\n            this.ref.markForCheck();\n        }\n        catch (e) {}\n    }\n\n    /**\n     * New matched users check delay\n     */\n    get newMatchedUsersCheckDelay(): number {\n        return this.api.get('configs', 'newMatchedUsersCheckDelay').value;\n    }\n\n    /**\n     * Component did active\n     */\n    ionViewDidEnter(): void {\n        // define active component\n        if (this.navParams.get('component')) {\n            this.activeComponent = this.navParams.get('component');\n        }\n        else {\n            this.activeComponent = this.application.getAppSetting('active_component') !== null\n                ? this.application.getAppSetting('active_component')\n                : this.components[0];\n        }\n\n        // define sub component\n        this.activeSubComponent = this.application.getAppSetting('active_sub_component');\n        this.ref.markForCheck();\n\n        this.changeComponent({\n            componentName: this.activeComponent,\n            subComponentName: this.activeSubComponent\n        });\n    }\n\n    /**\n     * Component destroy\n     */\n    ngOnDestroy(): void {\n        this.pushNotifications.unsubscribe();\n        clearInterval(this.newMatchedUsersHandler);\n    }\n\n    /**\n     * Component will active\n     */\n    ionViewWillEnter(): void {\n        this.isDashboardActive = true;\n        this.ref.markForCheck();\n    }\n\n    /**\n     * Component will not active\n     */\n    ionViewWillLeave(): void {\n        this.isDashboardActive = false;\n        this.ref.markForCheck();\n    }\n\n    /**\n     * Show new matched user popup\n     */\n    showNewMatchedUserPopup(): void {\n        if (this.isDashboardActive) {\n            // find a new match\n            let matchedUser: any[] = this.api.filter('matchedUsers', {\n                where: {\n                    isNew: true,\n                    isRead: false\n                },\n                orderBy: [\n                    ['isNew', 'DESC'], // newest first\n                    ['createStamp', 'DESC']\n                ],\n                limit: 1});\n\n            if (matchedUser.length) {\n                clearInterval(this.newMatchedUsersHandler);\n\n                let modal = this.modalCtrl.create(MatchedUserPageComponent, {\n                    user: matchedUser[0]\n                });\n\n                modal.onDidDismiss((result: any) => {\n                    this.newMatchedUsersHandler = setInterval(() => this.showNewMatchedUserPopup(), this.newMatchedUsersCheckDelay);\n\n                    if (result && result.showChat) {\n                        this.nav.push(MessagesPage, {\n                            userId: matchedUser[0].userId\n                        });\n                    }\n                });\n\n                modal.present();\n            }\n        }\n    }\n\n    /**\n     * Change component\n     */\n    changeComponent(component: {componentName: string, subComponentName?: string}): void {\n        let componentIndex = this.components.indexOf(component.componentName);\n\n        if (componentIndex > -1) {\n            // save the last user's choice\n            this.application.setAppSetting('active_component', component.componentName);\n            this.activeComponent = component.componentName;\n\n            if (component.subComponentName) {\n                this.application.setAppSetting('active_sub_component', component.subComponentName);\n                this.activeSubComponent = component.subComponentName;\n            }\n\n            this.ref.markForCheck();\n            this.slider.slideTo(componentIndex);\n\n            return;\n        }\n    }\n\n    /**\n     * Slider did change\n     */\n    sliderDidChange(): void {\n        this.activeComponent = this.components[this.slider.getActiveIndex()];\n\n        // save the last user's choice\n        this.application.setAppSetting('active_component', this.activeComponent);\n        this.ref.markForCheck();\n    }\n\n    /**\n     * Process notification\n     */\n    private async processPushNotification(notification: any): Promise<any> {\n        if (notification.additionalData && notification.additionalData.uuid != this.application.getAppSetting('push_uuid') && !notification.additionalData.foreground) {\n            this.application.setAppSetting('push_uuid', notification.additionalData.uuid);\n            switch (notification.additionalData.type) {\n                // redirect to chat page\n                case DashboardPage.PUSH_NOTIFICATION_MESSAGE :\n                    if (notification.additionalData.senderId && notification.additionalData.conversationId) {\n                        this.nav.push(MessagesPage, {\n                            userId: notification.additionalData.senderId,\n                            conversationId: notification.additionalData.conversationId\n                        });\n                    }\n                    break;\n\n                case DashboardPage.PUSH_NOTIFICATION_MATCHED_USER :\n                    try {\n                        this.changeComponent({\n                            componentName: 'conversations'\n                        });\n\n                        // mark matched user\n                        await this.api.update('matchedUsers', notification.additionalData.id, {\n                            isRead: true\n                        });\n                    }\n                    catch (e) {}\n                    break;\n\n                default:\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/dashboard/index.ts","import { Injectable } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { BaseValidator } from './baseValidator';\nimport { DataStore } from 'js-data';\n\n@Injectable()\nexport class EmailValidator extends BaseValidator {\n    protected baseRegexp: RegExp = /^([\\w\\-\\.\\+\\%]*[\\w])@((?:[A-Za-z0-9\\-]+\\.)+[A-Za-z]{2,})$/;\n\n    /**\n     * Constructor\n     */\n    constructor(private api: DataStore) {\n        super();\n    }\n\n    /**\n     * Validate\n     */\n    validate(): Function {\n        return (control: FormControl): {[key: string]: any} => {\n            return this.getRegexp().test(control.value) || !control.value.trim() ? null : {\n                email: {\n                    valid: false\n                }\n            };\n        };\n    }\n\n    /**\n     * Get regexp\n     */\n    protected getRegexp(): RegExp {\n        let apiRegexp: any = this.api.get('configs', 'emailRegexp');\n        let emailRegexp: RegExp = apiRegexp\n            ? new RegExp(apiRegexp.value)\n            : this.baseRegexp;\n\n        return emailRegexp;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/questions/validators/email.ts","import { Injectable } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { BaseValidator } from './baseValidator';\nimport { DataStore } from 'js-data';\n\n@Injectable()\nexport class UrlValidator extends BaseValidator {\n    protected baseRegexp: RegExp = /^(http(s)?:\\/\\/)?((\\d+\\.\\d+\\.\\d+\\.\\d+)|(([\\w-]+\\.)+([a-z,A-Z][\\w-]*)))(:[1-9][0-9]*)?(\\/?([\\w-.\\,\\/:%+@&*=~]+[\\w- \\,.\\/?:%+@&=*|]*)?)?(#(.*))?$/i;\n\n    /**\n     * Constructor\n     */\n    constructor(private api: DataStore) {\n        super();\n    }\n\n    /**\n     * Validate\n     */\n    validate(): Function {\n        return (control: FormControl): {[key: string]: any} => {\n            return this.getRegexp().test(control.value) || !control.value.trim() ? null : {\n                url: {\n                    valid: false\n                }\n            };\n        };\n    }\n\n    /**\n     * Get regexp\n     */\n    protected getRegexp(): RegExp {\n        let apiRegexp: any = this.api.get('configs', 'urlRegexp');\n        let urlRegexp: RegExp = apiRegexp\n            ? new RegExp(apiRegexp.value, 'i')\n            : this.baseRegexp;\n\n        return urlRegexp;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/questions/validators/url.ts","import { Injectable, Inject, forwardRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { DataStore } from 'js-data';\nimport { Events } from 'ionic-angular';\nimport 'rxjs/add/operator/map';\n\n// import services\nimport { ConfigService } from '../../../services/config/index';\nimport { AuthService } from '../../../services/auth/index';\nimport { SecureHttpService } from '../../../services/http/index';\n\n// import base async validator\nimport { BaseAsyncValidator } from './baseAsyncValidator';\n\n@Injectable()\nexport class UserEmailValidator extends BaseAsyncValidator {\n    /**\n     * Constructor\n     */\n    constructor(\n        @Inject(forwardRef(() => SecureHttpService)) http: SecureHttpService,\n        protected config: ConfigService,\n        protected auth: AuthService,\n        protected api: DataStore,\n        protected events: Events)\n    {\n        super(api, http, events);\n    }\n\n    /**\n     * Validate\n     */\n    validate(): Function {\n        return (control: FormControl): {[key: string]: any} => {\n            clearTimeout(this.timer);\n\n            return new Promise((resolve) => {\n                this.timer = setTimeout(() => {\n\n                    if (control.value.trim()) {\n                        let email: string = control.value;\n                        let options = this.auth.isAuthenticated()\n                            ? {email: email, user: this.auth.getUser()['name']}\n                            : {email: email};\n\n                        this.http.post(this.config.getApiUrl() + '/validators/user-email/', JSON.stringify(options))\n                            .map(res => res.json())\n                            .subscribe(data => {\n                                if (!data.valid || control.value != email) {\n                                    this.fireEvent('userEmail', control.value, false);\n                                    resolve({'userEmail': true});\n\n                                    return;\n                                }\n\n                                this.fireEvent('userEmail', control.value, true);\n                                resolve(null);\n                            }, () => {\n                                this.fireEvent('userEmail', control.value, false);\n                                resolve({'userEmail': true});\n                            });\n                    }\n                    else {\n                        this.fireEvent('userEmail', control.value, false);\n                        resolve({'userEmail': true}); // user email cannot be empty\n                    }\n\n                }, this.getValidationDelay());\n            });\n\n        };\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/questions/validators/userEmail.ts","import { BaseValidator } from './baseValidator';\nimport { Events } from 'ionic-angular';\nimport { DataStore } from 'js-data';\n\n// import services\nimport { SecureHttpService } from '../../../services/http/index';\n\nexport abstract class BaseAsyncValidator extends BaseValidator {\n    protected timer: any;\n    protected baseValidationDelay: number = 1000;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        protected api: DataStore,\n        protected http: SecureHttpService,\n        protected events: Events)\n    {\n        super();\n    }\n\n    /**\n     * Fire event\n     */\n    protected fireEvent(validatorName: string, value: string, isValid: boolean): void {\n        this.events.publish('asyncValidator:finished', {\n            name: validatorName,\n            value: value,\n            isValid: isValid\n        });\n    }\n\n    /**\n     * Get validation delay\n     */\n    protected getValidationDelay(): number {\n        let apiValidationDelay: any = this.api.get('configs', 'validationDelay');\n        let validationDelay: number = apiValidationDelay\n            ? parseInt(apiValidationDelay.value)\n            : this.baseValidationDelay;\n\n        return validationDelay;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/questions/validators/baseAsyncValidator.ts","import { Injectable, Inject, forwardRef } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { DataStore } from 'js-data';\nimport { Events } from 'ionic-angular';\nimport 'rxjs/add/operator/map';\n\n// import services\nimport { SecureHttpService } from '../../../services/http/index';\nimport { ConfigService } from '../../../services/config/index';\nimport { AuthService } from '../../../services/auth/index';\n\n// import base async validator\nimport { BaseAsyncValidator } from './baseAsyncValidator';\n\n@Injectable()\nexport class UserNameValidator extends BaseAsyncValidator {\n    /**\n     * Constructor\n     */\n    constructor(\n        @Inject(forwardRef(() => SecureHttpService)) http: SecureHttpService,\n        protected config: ConfigService,\n        protected auth: AuthService,\n        protected api: DataStore,\n        protected events: Events)\n    {\n        super(api, http, events);\n    }\n\n    /**\n     * Validate\n     */\n    validate(): Function {\n        return (control: FormControl): {[key: string]: any} => {\n            clearTimeout(this.timer);\n\n            return new Promise((resolve) => {\n                this.timer = setTimeout(() => {\n\n                    if (control.value.trim()) {\n                        let username: string = control.value;\n                        let options = this.auth.isAuthenticated()\n                            ? {userName: username, oldUserName: this.auth.getUser()['name']}\n                            : {userName: username};\n\n                        this.http.post(this.config.getApiUrl() + '/validators/user-name/', JSON.stringify(options))\n                            .map(res => res.json())\n                            .subscribe(data => {\n                                if (!data.valid || control.value != username) {\n                                    this.fireEvent('userName', control.value, false);\n                                    resolve({'userName': true});\n\n                                    return;\n                                }\n\n                                this.fireEvent('userName', control.value, true);\n                                resolve(null);\n                            }, () => {\n                                this.fireEvent('userName', control.value, false);\n                                resolve({'userName': true});\n                            });\n                    }\n                    else {\n                        this.fireEvent('userName', control.value, false);\n                        resolve({'userName': true}); // username cannot be empty\n                    }\n\n                }, this.getValidationDelay());\n            });\n\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/questions/validators/username.ts","import { Injectable } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { BaseValidator } from './baseValidator';\n\n@Injectable()\nexport class MinLengthValidator extends BaseValidator {\n    /**\n     * Validate\n     */\n    validate(): Function {\n        return (control: FormControl): {[key: string]: any} => {\n            let params: any = this.params;\n\n            return control.value.length >= params.length ? null : {\n                minLength: {\n                    valid: false\n                }\n            };\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/questions/validators/minLength.ts","import { Injectable } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { BaseValidator } from './baseValidator';\n\n@Injectable()\nexport class MaxLengthValidator extends BaseValidator {\n    /**\n     * Validate\n     */\n    validate(): Function {\n        return (control: FormControl): {[key: string]: any} => {\n            let params: any = this.params;\n\n            return control.value.length <= params.length ? null : {\n                maxLength: {\n                    valid: false\n                }\n            };\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/questions/validators/maxLength.ts","import { Component, Input, OnInit, Inject, forwardRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { TranslateService } from 'ng2-translate';\nimport { LoadingController, AlertController, Nav } from 'ionic-angular';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/map';\n\n// questions\nimport { QuestionManager } from '../../../../services/questions/manager';\nimport { QuestionControlService } from '../../../../services/questions/control-service';\n\n// pages\nimport { ForgotPasswordCheckCodePage } from '../checkCode/index';\n\n// services\nimport { SecureHttpService } from '../../../../services/http/index';\nimport { ConfigService } from '../../../../services/config/index';\n\n@Component({\n    selector: 'forgot-password-check-email',\n    templateUrl: 'index.html',\n    providers: [\n        QuestionControlService,\n        QuestionManager\n    ]\n})\nexport class ForgotPasswordCheckEmailPage implements OnInit {\n    @Input() questions = <any>[]; // list of questions\n\n    private form: FormGroup;\n    private http: SecureHttpService;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private navCtrl: Nav,\n        private alert: AlertController,\n        private config: ConfigService,\n        @Inject(forwardRef(() => SecureHttpService)) http: SecureHttpService,\n        private loadingCtrl: LoadingController,\n        private questionControl: QuestionControlService,\n        private translate: TranslateService,\n        private questionManager: QuestionManager)\n    {\n        this.http = http;\n    }\n\n    /**\n     * Component init\n     */\n    ngOnInit(): void {\n        // create form items\n        this.questions = [\n            this.questionManager.getQuestion(QuestionManager.TYPE_EMAIL, {\n                key: 'email',\n                label: this.translate.instant('forgot_password_email_input'),\n                validators: [\n                    {name: 'require'}\n                ]\n            })\n        ];\n\n        // register all questions inside a form group\n        this.form = this.questionControl.toFormGroup(this.questions);\n    }\n\n    /**\n     * Submit form\n     */\n    async submit(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            await loader.present();\n\n            // try to send verification email\n            let data = await this.http.post(this.config.getApiUrl() + '/forgot-password/', JSON.stringify({email: this.form.value['email']}))\n                .map(res => res.json())\n                .toPromise();\n\n            loader.dismiss();\n\n            if (data.success == true) {\n                this.navCtrl.push(ForgotPasswordCheckCodePage, {\n                    email: this.form.value['email']\n                });\n\n                return;\n            }\n\n            let alert = this.alert.create({\n                title: this.translate.instant('error_occurred'),\n                subTitle: data.message,\n                buttons: [this.translate.instant('ok')]\n            });\n\n            alert.present();\n        }\n        catch (e) {\n            loader.dismiss();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user/forgotPassword/checkEmail/index.ts","import { Component, Input, OnInit, Inject, forwardRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { TranslateService } from 'ng2-translate';\nimport { LoadingController, AlertController, Nav, NavParams } from 'ionic-angular';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/map';\n\n// questions\nimport { QuestionManager } from '../../../../services/questions/manager';\nimport { QuestionControlService } from '../../../../services/questions/control-service';\n\n// pages\nimport { ForgotPasswordNewPasswordPage } from '../newPassword/index';\n\n// services\nimport { SecureHttpService } from '../../../../services/http/index';\nimport { ConfigService } from '../../../../services/config/index';\n\n@Component({\n    selector: 'forgot-password-check-code',\n    templateUrl: 'index.html',\n    providers: [\n        QuestionControlService,\n        QuestionManager\n    ]\n})\nexport class ForgotPasswordCheckCodePage implements OnInit {\n    @Input() questions = <any>[]; // list of questions\n\n    private form: FormGroup;\n    private email: string;\n    private http: SecureHttpService;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private navParams: NavParams,\n        private navCtrl: Nav,\n        private alert: AlertController,\n        private config: ConfigService,\n        @Inject(forwardRef(() => SecureHttpService)) http: SecureHttpService,\n        private loadingCtrl: LoadingController,\n        private questionControl: QuestionControlService,\n        private translate: TranslateService,\n        private questionManager: QuestionManager)\n    {\n        this.http = http;\n        this.email = this.navParams.get('email');\n    }\n\n    /**\n     * Component init\n     */\n    ngOnInit(): void {\n        // create form items\n        this.questions = [\n            this.questionManager.getQuestion(QuestionManager.TYPE_TEXT, {\n                key: 'code',\n                label: this.translate.instant('forgot_password_code_input'),\n                validators: [\n                    {name: 'require'}\n                ]\n            })\n        ];\n\n        // register all questions inside a form group\n        this.form = this.questionControl.toFormGroup(this.questions);\n    }\n\n    /**\n     * Submit form\n     */\n    async submit(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            await loader.present();\n\n            let data = await this.http.post(this.config.getApiUrl() + '/validators/forgot-password-code/', JSON.stringify({code: this.form.value['code']}))\n                .map(res => res.json())\n                .toPromise();\n\n            loader.dismiss();\n\n            if (data.valid) {\n                this.navCtrl.push(ForgotPasswordNewPasswordPage, {\n                    code: this.form.value['code'],\n                    email: this.email\n                });\n\n                return;\n            }\n\n            let alert = this.alert.create({\n                title: this.translate.instant('error_occurred'),\n                subTitle: this.translate.instant('forgot_password_code_invalid'),\n                buttons: [this.translate.instant('ok')]\n            });\n\n            alert.present();\n        }\n        catch (e) {\n            loader.dismiss();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user/forgotPassword/checkCode/index.ts","import { Component, Input, OnInit, Inject, forwardRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { TranslateService } from 'ng2-translate';\nimport { LoadingController, AlertController, NavParams, Nav, ToastController } from 'ionic-angular';\nimport { DataStore } from 'js-data';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/map';\n\n// questions\nimport { QuestionManager } from '../../../../services/questions/manager';\nimport { QuestionControlService } from '../../../../services/questions/control-service';\n\n// pages\nimport { LoginPage } from '../../login/index';\n\n// services\nimport { SecureHttpService } from '../../../../services/http/index';\nimport { ConfigService } from '../../../../services/config/index';\n\n@Component({\n    selector: 'forgot-password-new-password',\n    templateUrl: 'index.html',\n    providers: [\n        QuestionControlService,\n        QuestionManager\n    ]\n})\nexport class ForgotPasswordNewPasswordPage implements OnInit {\n    @Input() questions = <any>[]; // list of questions\n\n    private http: SecureHttpService;\n    private form: FormGroup;\n    private code: string;\n    private email: string;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private toast: ToastController,\n        private navCtrl: Nav,\n        private navParams: NavParams,\n        private api: DataStore,\n        private alert: AlertController,\n        private config: ConfigService,\n        @Inject(forwardRef(() => SecureHttpService)) http: SecureHttpService,\n        private loadingCtrl: LoadingController,\n        private questionControl: QuestionControlService,\n        private translate: TranslateService,\n        private questionManager: QuestionManager)\n    {\n        this.http = http;\n        this.code = this.navParams.get('code');\n        this.email = this.navParams.get('email');\n    }\n\n    /**\n     * Get toast duration\n     */\n    get toastDuration(): number {\n        return this.api.get('configs', 'toastDuration').value;\n    }\n\n    /**\n     * Component init\n     */\n    ngOnInit(): void {\n        // create form items\n        this.questions = [\n            this.questionManager.getQuestion(QuestionManager.TYPE_PASSWORD, {\n                key: 'password',\n                label: this.translate.instant('password_input'),\n                validators: [\n                    {name: 'require'},\n                    {\n                        name: 'minLength',\n                        message: this.translate.instant('password_min_length_validator_error', {\n                            length: this.api.get('configs', 'minPasswordLength').value\n                        }),\n                        params: {\n                            length: this.api.get('configs', 'minPasswordLength').value\n                        }\n                    },\n                    {\n                        name: 'maxLength',\n                        message: this.translate.instant('password_max_length_validator_error', {\n                            length: this.api.get('configs', 'maxPasswordLength').value\n                        }),\n                        params: {\n                            length: this.api.get('configs', 'maxPasswordLength').value\n                        }\n                    },\n                ]\n            }),\n            this.questionManager.getQuestion(QuestionManager.TYPE_PASSWORD, {\n                key: 'repeatPassword',\n                label: this.translate.instant('password_repeat_input'),\n                validators: [\n                    {name: 'require'}\n                ]\n            })\n        ];\n\n        // register all questions inside a form group\n        this.form = this.questionControl.toFormGroup(this.questions, (formGroup: FormGroup) => {\n            if (formGroup.get('password').value === formGroup.get('repeatPassword').value) {\n                return null;\n            }\n\n            return {\n                message: this.translate.instant('password_repeat_validator_error'),\n                question: 'repeatPassword'\n            };\n        });\n    }\n\n    /**\n     * Submit form\n     */\n    async submit(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            await loader.present();\n\n            // try to update password\n            let data = await this.http.put(this.config.getApiUrl() + '/forgot-password/' + this.code + '/', JSON.stringify({email: this.email, password: this.form.value['password']}))\n                .map(res => res.json())\n                .toPromise();\n\n            loader.dismiss();\n\n            if (data.success == true) {\n                let toast = this.toast.create({\n                    message: this.translate.instant('forgot_password_reset_successful'),\n                    closeButtonText: this.translate.instant('ok'),\n                    showCloseButton: true,\n                    duration: this.toastDuration\n                });\n\n                toast.present();\n\n                this.navCtrl.setRoot(LoginPage);\n\n                return;\n            }\n\n            let alert = this.alert.create({\n                title: this.translate.instant('error_occurred'),\n                subTitle: data.message,\n                buttons: [this.translate.instant('ok')]\n            });\n\n            alert.present();\n        }\n        catch (e) {\n            loader.dismiss()\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user/forgotPassword/newPassword/index.ts","import { Component, Input, OnInit }  from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { LoadingController, ActionSheetController, Nav } from 'ionic-angular';\nimport { DataStore } from 'js-data';\nimport { TranslateService } from 'ng2-translate';\n\n// pages\nimport { JoinQuestionsPage } from '../questions/index';\n\n// services\nimport { ConfigService } from '../../../../services/config/index';\nimport { PhotoUploaderService } from '../../../../services/photoUploader/index';\n\n// questions\nimport { QuestionControlService } from '../../../../services/questions/control-service';\nimport { QuestionManager } from '../../../../services/questions/manager';\nimport { QuestionBase }  from '../../../../services/questions/questions/base';\n\n@Component({\n    selector: 'join-initial',\n    templateUrl: 'index.html',\n    providers: [\n        QuestionControlService,\n        QuestionManager,\n        PhotoUploaderService\n    ]\n})\nexport class JoinInitialPage implements OnInit {\n    @Input() private questions = <any>[]; // list of questions\n    private sections: any = [];\n    private form: FormGroup;\n    private formReady: boolean = false;\n    private avatarUrl: string = null;\n    private avatarKey: string = null;\n    private avatarUploaded: boolean = false;\n    public avatarUploadInProgress: boolean = false;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private loadingCtrl: LoadingController,\n        private api: DataStore,\n        private questionControl: QuestionControlService,\n        private actionSheetCtrl: ActionSheetController,\n        private photoUploader: PhotoUploaderService,\n        private config: ConfigService,\n        private translate: TranslateService,\n        private navCtrl: Nav,\n        private questionManager: QuestionManager)\n    {\n        // init photo uploader\n        this.photoUploader.url = this.config.getApiUrl() + '/avatars/';\n        this.photoUploader.maxFileSizeMb = this.avatarMaxUploadSize;\n        this.photoUploader.successUploadCallback = (response) => {\n            response = JSON.parse(response);\n\n            this.avatarUrl = response.url;\n            this.avatarKey = response.key;\n            this.avatarUploaded = true;\n            this.avatarUploadInProgress = false;\n        };\n\n        this.photoUploader.startUploadingCallback = () => this.avatarUploadInProgress = true;\n        this.photoUploader.errorUploadCallback = () => this.avatarUploadInProgress = false;\n    }\n\n    /**\n     * Avatar max upload size\n     */\n    get avatarMaxUploadSize(): number {\n        return this.api.get('configs', 'avatarMaxUploadSize').value;\n    }\n\n    /**\n     * Is avatar hidden\n     */\n    get isAvatarHidden(): boolean {\n        return this.api.get('configs', 'isAvatarHidden').value;\n    }\n\n    /**\n     * Is avatar required\n     */\n    get isAvatarRequired(): boolean {\n        return this.api.get('configs', 'isAvatarRequired').value;\n    }\n\n    /**\n     * Component init\n     */\n    async ngOnInit(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        // load genders\n        try {\n            await loader.present();\n            let genders: any = await this.api.findAll('userGenders');\n\n            // process genders\n            let genderList = [];\n            genders.forEach((gender) => genderList.push({\n                value: gender.id,\n                title: gender.name\n            }));\n\n            // questions list\n            let questions = [\n                {\n                    section: '',\n                    questions: [\n                        {\n                            type: QuestionManager.TYPE_TEXT,\n                            key: 'userName',\n                            label: this.translate.instant('username_input'),\n                            validators: [\n                                {name: 'require'},\n                                {name: 'userName'}\n                            ],\n                            params: {\n                                stacked: true\n                            }\n                        },\n                        {\n                            type: QuestionManager.TYPE_PASSWORD,\n                            key: 'password',\n                            label: this.translate.instant('password_input'),\n                            validators: [\n                                {name: 'require'},\n                                {\n                                    name: 'minLength',\n                                    message: this.translate.instant('password_min_length_validator_error', {\n                                        length: this.api.get('configs', 'minPasswordLength').value\n                                    }),\n                                    params: {\n                                        length: this.api.get('configs', 'minPasswordLength').value\n                                    }\n                                },\n                                {\n                                    name: 'maxLength',\n                                    message: this.translate.instant('password_max_length_validator_error', {\n                                        length: this.api.get('configs', 'maxPasswordLength').value\n                                    }),\n                                    params: {\n                                        length: this.api.get('configs', 'maxPasswordLength').value\n                                    }\n                                },\n                            ],\n                            params: {\n                                stacked: true\n                            }\n                        },\n                        {\n                            type: QuestionManager.TYPE_PASSWORD,\n                            key: 'repeatPassword',\n                            label: this.translate.instant('password_repeat_input'),\n                            validators: [\n                                {name: 'require'}\n                            ],\n                            params: {\n                                stacked: true\n                            }\n                        }\n                    ]\n                },\n                {\n                    section: this.translate.instant('base_input_section'),\n                    questions: [\n                        {\n                            type: QuestionManager.TYPE_EMAIL,\n                            key: 'email',\n                            label: this.translate.instant('email_input'),\n                            validators: [\n                                {name: 'require'},\n                                {name: 'userEmail'},\n                            ],\n                            params: {\n                                stacked: true\n                            }\n                        },\n                        {\n                            type: QuestionManager.TYPE_SELECT,\n                            key: 'sex',\n                            label: this.translate.instant('gender_input'),\n                            values: genderList,\n                            validators: [\n                                {name: 'require'}\n                            ]\n                        },\n                        {\n                            type: QuestionManager.TYPE_MULTICHECKBOX,\n                            key: 'lookingFor',\n                            label: this.translate.instant('looking_for_input'),\n                            values: genderList,\n                            validators: [\n                                {name: 'require'}\n                            ]\n                        }\n                    ]\n                }\n            ];\n\n            // process questions\n            questions.forEach((questionData: any) => {\n                let data = {\n                    section: '',\n                    questions: []\n                };\n\n                data.section = questionData.section;\n\n                questionData.questions.forEach((question: any) => {\n                    let params: any = question.params ? question.params : {};\n\n                    let questionItem: QuestionBase = this.questionManager.getQuestion(question.type, {\n                        key: question.key,\n                        label: question.label,\n                        values: question.values,\n                        value: question.value\n                    }, params);\n\n                    // add validators\n                    if (question.validators) {\n                        questionItem.validators = question.validators;\n                    }\n\n                    data.questions.push(questionItem);\n                    this.questions.push(questionItem);\n                });\n\n                this.sections.push(data);\n            });\n\n            // register all questions inside a form group\n            this.form = this.questionControl.toFormGroup(this.questions, (formGroup: FormGroup) => {\n                if (formGroup.get('password').value === formGroup.get('repeatPassword').value) {\n                    return null;\n                }\n\n                return {\n                    message: this.translate.instant('password_repeat_validator_error'),\n                    question: 'repeatPassword'\n                };\n            });\n\n            this.formReady = true;\n            loader.dismiss();\n        }\n        catch (e) {\n            loader.dismiss();\n        }\n    }\n\n    /**\n     * Is avatar valid\n     */\n    get isAvatarValid(): boolean {\n        return this.isAvatarHidden || !this.isAvatarRequired || (this.avatarUploaded && !this.avatarUploadInProgress);\n    }\n\n    /**\n     * Ask for image source\n     */\n    askForImageSource(): void {\n        if (!this.avatarUploadInProgress) {\n            let buttons: any = [\n                {\n                    text: this.translate.instant('take_avatar'),\n                    handler: () => this.photoUploader.takePicture('camera')\n                },\n                {\n                    text: this.translate.instant('choose_avatar_from_library'),\n                    role: 'choose',\n                    handler: () => this.photoUploader.takePicture('library')\n                },\n                {\n                    text: this.translate.instant('cancel'),\n                    role: 'cancel'\n                }\n            ];\n\n            let actionSheet = this.actionSheetCtrl.create({\n                title: this.translate.instant('upload_avatar'),\n                buttons: buttons\n            });\n\n            actionSheet.present();\n        }\n    }\n\n    /**\n     * Submit form\n     */\n    submit(): void {\n        let initialData = Object.assign({}, this.form.value, {\n            avatarKey: this.avatarKey\n        });\n\n        this.navCtrl.push(JoinQuestionsPage, {\n            initial: initialData\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user/join/initial/index.ts","import { Component, Input, OnInit }  from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { NavController, LoadingController, NavParams, AlertController, ModalController } from 'ionic-angular';\nimport { DataStore } from 'js-data';\nimport { TranslateService } from 'ng2-translate';\n\n// questions\nimport { QuestionControlService } from '../../../../services/questions/control-service';\nimport { QuestionManager } from '../../../../services/questions/manager';\nimport { QuestionBase }  from '../../../../services/questions/questions/base';\n\n// pages\nimport { DashboardPage } from '../../../dashboard/index';\n\n// services\nimport { AuthService } from '../../../../services/auth/index';\n\n// shared components\nimport { CustomPageComponent } from '../../../../shared/components/customPage/index';\n\n@Component({\n    selector: 'join-questions',\n    templateUrl: 'index.html',\n    providers: [\n        QuestionControlService,\n        QuestionManager\n    ]\n})\nexport class JoinQuestionsPage implements OnInit {\n    @Input() private questions = <any>[]; // list of questions\n    private sections: any = [];\n    private form: FormGroup;\n    private formReady: boolean = false;\n    private currentGender: number;\n    private creatingUserProfile = false;\n    private initialData: any;\n    private tosValue: boolean = false;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private nav: NavController,\n        private loadingCtrl: LoadingController,\n        private api: DataStore,\n        private questionControl: QuestionControlService,\n        private navParams: NavParams,\n        private questionManager: QuestionManager,\n        private translate: TranslateService,\n        private alert: AlertController,\n        private auth: AuthService,\n        private modalCtrl: ModalController)\n    {\n        this.initialData = this.navParams.get('initial');\n        this.currentGender = this.initialData.sex;\n    }\n\n    /**\n     * Is TOS active\n     */\n    get isTosActive(): boolean {\n        return this.api.get('configs', 'isTosActive').value;\n    }\n\n    /**\n     * Component init\n     */\n    async ngOnInit(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        // load questions\n        try {\n            await loader.present();\n            let data: any = await this.api.getMapper('joinQuestions').find(this.currentGender); // don't cache items\n\n            // process questions\n            data.questions.forEach((questionData: any) => {\n                let data = {\n                    section: '',\n                    questions: []\n                };\n\n                data.section = questionData.section;\n\n                questionData.items.forEach((question: any) => {\n                    let questionItem: QuestionBase = this.questionManager.getQuestion(question.type, {\n                        key: question.key,\n                        label: question.label,\n                        values: question.values,\n                        value: question.value\n                    }, question.params);\n\n                    // add validators\n                    if (question.validators) {\n                        questionItem.validators = question.validators;\n                    }\n\n                    data.questions.push(questionItem);\n                    this.questions.push(questionItem);\n                });\n\n                this.sections.push(data);\n            });\n\n            // register all questions inside a form group\n            this.form = this.questionControl.toFormGroup(this.questions);\n            this.formReady = true;\n\n            loader.dismiss();\n        }\n        catch (e) {\n            loader.dismiss();\n        }\n    }\n\n    /**\n     * Is tos valid\n     */\n    isTosValid(): boolean {\n        return this.isTosActive && this.tosValue || !this.isTosActive;\n    }\n\n    /**\n     * Show tos modal\n     */\n    showTosModal(): void {\n        let modal = this.modalCtrl.create(CustomPageComponent, {\n            title: this.translate.instant('tos_page_header'),\n            pageName: 'tos_page_content'\n        });\n\n        modal.present();\n    }\n\n    /**\n     * Submit form\n     */\n    async submit(): Promise<any> {\n        // show loader\n        this.creatingUserProfile = true;\n        let loader = this.loadingCtrl.create();\n\n        try {\n            await loader.present();\n\n            // create user profile\n            let userData: any = await this.api.getMapper('users').create({\n                userName: this.initialData.userName,\n                email: this.initialData.email,\n                password: this.initialData.password,\n                sex: this.initialData.sex,\n                avatarKey: this.initialData.avatarKey\n            });\n\n            // set user authenticated\n            this.auth.setAuthenticated(userData.token);\n\n            // create questions\n            let processedQuestions = [];\n            this.questions.forEach((questionData: QuestionBase) => {\n                processedQuestions.push({\n                    name: questionData.key,\n                    value: this.form.value[questionData.key],\n                    type: questionData.controlType\n                });\n            });\n\n            // add match sex\n            processedQuestions.push({\n                name: 'match_sex',\n                value: this.initialData.lookingFor,\n                type: QuestionManager.TYPE_MULTICHECKBOX\n            });\n\n            // create questions\n            await this.api.createMany('questionsData', processedQuestions);\n\n            loader.dismiss();\n            this.nav.setRoot(DashboardPage);\n        }\n        catch (e) {\n            loader.dismiss();\n            this.creatingUserProfile = false;\n\n            let alert = this.alert.create({\n                title: this.translate.instant('error_occurred'),\n                subTitle: this.translate.instant('profile_create_error'),\n                buttons: [this.translate.instant('ok')]\n            });\n\n            alert.present();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user/join/questions/index.ts","import { Component }  from '@angular/core';\nimport { NavParams } from 'ionic-angular';\nimport { DataStore } from 'js-data';\nimport { Events, NavController } from 'ionic-angular';\n\n// services\nimport { AuthService } from '../../../services/auth/index';\n\n// import pages\nimport { DashboardPage } from '../../../pages/dashboard/index';\nimport { LoginPage } from '../../../pages/user/login/index';\n\n@Component({\n    selector: 'user-disaproved',\n    templateUrl: 'index.html'\n})\nexport class UserDisapprovedPage  {\n    private status: string;\n    private description: string;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private navParams: NavParams,\n        private auth: AuthService,\n        private api: DataStore,\n        private events: Events,\n        private nav: NavController)\n    {\n        this.status = this.navParams.get('status');\n        this.description = this.navParams.get('description');\n    }\n\n    /**\n     * Is suspended\n     */\n    isSuspended(): boolean {\n        return this.status == 'suspended';\n    }\n\n    /**\n     * Logout user\n     */\n    logout(): void {\n        this.auth.logout();\n        this.nav.setRoot(LoginPage);\n    }\n\n    /**\n     * Do refresh\n     */\n    async doRefresh(refresher): Promise<any> {\n        // get user info\n        try {\n            await this.api.find('users', this.auth.getUserId(), {force: true});\n\n            refresher.complete();\n\n            this.events.publish('user:status_restore');\n            this.nav.setRoot(!this.auth.isAuthenticated() ? LoginPage : DashboardPage);\n        }\n        catch (e) {\n            refresher.complete();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user/disapproved/index.ts","import { Component, Input, OnInit, forwardRef, Inject } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { TranslateService } from 'ng2-translate';\nimport { LoadingController, AlertController, Nav, ToastController, NavParams } from 'ionic-angular';\nimport { DataStore } from 'js-data';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/map';\n\n// questions\nimport { QuestionManager } from '../../../../services/questions/manager';\nimport { QuestionControlService } from '../../../../services/questions/control-service';\n\n// services\nimport { SecureHttpService } from '../../../../services/http/index';\nimport { ConfigService } from '../../../../services/config/index';\nimport { AuthService } from \"../../../../services/auth/index\";\n\n//pages\nimport { LoginPage } from '../../login/index';\nimport { DashboardPage } from '../../../dashboard/index';\nimport { VerifyEmailCheckEmailPage } from \"../checkEmail/index\";\n\n@Component({\n    selector: 'verify-email-check-code',\n    templateUrl: 'index.html',\n    providers: [\n        QuestionControlService,\n        QuestionManager\n    ]\n})\nexport class VerifyEmailCheckCodePage implements OnInit {\n    @Input() questions = <any>[]; // list of questions\n\n    private form: FormGroup;\n    private http: SecureHttpService;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private navParams: NavParams,\n        private toast: ToastController,\n        private api: DataStore,\n        private navCtrl: Nav,\n        private auth: AuthService,\n        private alert: AlertController,\n        private config: ConfigService,\n        private loadingCtrl: LoadingController,\n        private questionControl: QuestionControlService,\n        private translate: TranslateService,\n        private questionManager: QuestionManager,\n        @Inject(forwardRef(() => SecureHttpService)) http: SecureHttpService)\n    {\n        this.http = http;\n    }\n\n    /**\n     * Get toast duration\n     */\n    get toastDuration(): number {\n        return this.api.get('configs', 'toastDuration').value;\n    }\n\n    /**\n     * Component init\n     */\n    ngOnInit(): void {\n        // create form items\n        this.questions = [\n            this.questionManager.getQuestion(QuestionManager.TYPE_TEXT, {\n                key: 'code',\n                label: this.translate.instant('verify_email_code_input'),\n                validators: [\n                    {name: 'require'}\n                ]\n            }, {\n                hideWarning: true\n            })\n        ];\n\n        // register all questions inside a form group\n        this.form = this.questionControl.toFormGroup(this.questions);\n    }\n\n    /**\n     * Open check code page\n     */\n    openCheckCodePage(): void {\n        this.navCtrl.push(VerifyEmailCheckEmailPage);\n    }\n\n    /**\n     * Open login page\n     */\n    openLoginPage(): void {\n        this.auth.logout();\n        this.navCtrl.setRoot(LoginPage);\n    }\n\n    /**\n     * Submit form\n     */\n    async submit(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            await loader.present();\n\n            let data = await this.http.post(this.config.getApiUrl() + '/validators/verify-email-code/', JSON.stringify({code: this.form.value['code']}))\n                .map(res => res.json())\n                .toPromise();\n\n            loader.dismiss();\n\n            if (data.valid) {\n                let toast = this.toast.create({\n                    message: this.translate.instant('verify_email_verification_successful'),\n                    closeButtonText: this.translate.instant('ok'),\n                    showCloseButton: true,\n                    duration: this.toastDuration\n                });\n\n                toast.present();\n\n                this.navCtrl.setRoot(DashboardPage);\n\n                return;\n            }\n\n            let alert = this.alert.create({\n                title: this.translate.instant('error_occurred'),\n                subTitle: this.translate.instant('verify_email_invalid_code'),\n                buttons: [this.translate.instant('ok')]\n            });\n\n            alert.present();\n        }\n        catch (e) {\n            loader.dismiss()\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user/verifyEmail/checkCode/index.ts","import { Component, Input, OnInit, forwardRef, Inject } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { TranslateService } from 'ng2-translate';\nimport { LoadingController, AlertController, Nav, ToastController, ViewController } from 'ionic-angular';\nimport { DataStore } from 'js-data';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/map';\n\n// questions\nimport { QuestionManager } from '../../../../services/questions/manager';\nimport { QuestionControlService } from '../../../../services/questions/control-service';\n\n// pages\nimport { LoginPage } from '../../login/index';\n\n// services\nimport { SecureHttpService } from '../../../../services/http/index';\nimport { ConfigService } from '../../../../services/config/index';\nimport { AuthService } from '../../../../services/auth/index';\n\n@Component({\n    selector: 'verify-email-check-email',\n    templateUrl: 'index.html',\n    providers: [\n        QuestionControlService,\n        QuestionManager\n    ]\n})\nexport class VerifyEmailCheckEmailPage implements OnInit {\n    @Input() questions = <any>[]; // list of questions\n\n    private form: FormGroup;\n    private http: SecureHttpService;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private navCtrl: Nav,\n        private viewCtrl: ViewController,\n        private alert: AlertController,\n        private toast: ToastController,\n        private config: ConfigService,\n        private api: DataStore,\n        private auth: AuthService,\n        private loadingCtrl: LoadingController,\n        private questionControl: QuestionControlService,\n        private questionManager: QuestionManager,\n        private translate: TranslateService,\n        @Inject(forwardRef(() => SecureHttpService)) http: SecureHttpService\n    )\n    {\n        this.http = http;\n    }\n\n    /**\n     * Get toast duration\n     */\n    get toastDuration(): number {\n        return this.api.get('configs', 'toastDuration').value;\n    }\n\n    /**\n     * Component init\n     */\n    ngOnInit(): void {\n        // create form items\n        this.questions = [\n            this.questionManager.getQuestion(QuestionManager.TYPE_EMAIL, {\n                key: 'email',\n                value: this.auth.getUser().email,\n                label: this.translate.instant('verify_email_email_input'),\n                validators: [\n                    {name: 'require'},\n                    {name: 'userEmail'}\n                ]\n            }, {\n                hideWarning: true\n            })\n        ];\n\n        // register all questions inside a form group\n        this.form = this.questionControl.toFormGroup(this.questions);\n    }\n\n    /**\n     * Open login page\n     */\n    openLoginPage(): void {\n        this.auth.logout();\n        this.navCtrl.setRoot(LoginPage);\n    }\n\n    /**\n     * Resend mail\n     */\n    async submit(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            let currentEmail = this.auth.getUser().email;\n            let newEmail = this.form.value['email'];\n            let success: boolean = true;\n            let message: string = \"\";\n\n            await loader.present();\n\n            if (currentEmail !== newEmail) {\n                await this.updateUserEmail();\n            }\n            else {\n                let data = await this.sendVerificationCode();\n\n                success = data.success;\n                message = data.message;\n            }\n\n            loader.dismiss();\n\n            if (success) {\n                let toast = this.toast.create({\n                    message: this.translate.instant('verify_email_mail_sent', {\n                        email: this.form.value['email']\n                    }),\n                    closeButtonText: this.translate.instant('ok'),\n                    showCloseButton: true,\n                    duration: this.toastDuration\n                });\n\n                toast.present();\n\n                this.navCtrl.pop();\n\n                return;\n            }\n\n            let alert = this.alert.create({\n                title: this.translate.instant('error_occurred'),\n                subTitle: message,\n                buttons: [this.translate.instant('ok')]\n            });\n\n            alert.present();\n        }\n        catch (e) {\n            loader.dismiss();\n        }\n    }\n\n    /**\n     * Update user email if it's changed\n     */\n    protected async updateUserEmail(): Promise<any> {\n        try {\n            // try to update user email\n            let userData = await this.api.update('users', this.auth.getUserId(), {\n                email: this.form.value['email']\n            });\n\n            this.auth.setAuthenticated(userData.token);\n        }\n        catch (e) {}\n    }\n\n    /**\n     * Send verification code\n     */\n    protected async sendVerificationCode(): Promise<any> {\n        // try to send verification email\n        return await this.http.post(this.config.getApiUrl() + '/verify-email/', JSON.stringify({email: this.form.value['email']}))\n            .map(res => res.json())\n            .toPromise();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user/verifyEmail/checkEmail/index.ts","import { Inject, forwardRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { NavController, LoadingController, ToastController } from 'ionic-angular';\nimport { DataStore } from 'js-data';\nimport { TranslateService } from 'ng2-translate';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/map';\n\n// questions\nimport { QuestionControlService } from '../../../services/questions/control-service';\nimport { QuestionManager } from '../../../services/questions/manager';\nimport { QuestionBase }  from '../../../services/questions/questions/base';\n\n// pages\nimport { DashboardPage } from '../../dashboard/index';\n\n// import services\nimport { AuthService } from '../../../services/auth/index';\nimport { ConfigService } from '../../../services/config/index';\nimport { SecureHttpService } from '../../../services/http/index';\nimport { ApiUtilsService } from '../../../services/api/utils';\n\n@Component({\n    selector: 'complete-profile',\n    templateUrl: 'index.html',\n    providers: [\n        QuestionControlService,\n        QuestionManager,\n        ApiUtilsService\n    ]\n})\nexport class CompleteProfilePage implements OnInit  {\n    @Input() private questions = <any>[]; // list of questions\n    private sections: any = [];\n    private form: FormGroup;\n    private formReady: boolean = false;\n    private updatingUserProfile: boolean = false;\n    private http: SecureHttpService;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private auth:AuthService,\n        private nav: NavController,\n        private loadingCtrl: LoadingController,\n        private config: ConfigService,\n        private api:DataStore,\n        private apiUtils:ApiUtilsService,\n        private toast: ToastController,\n        private translate: TranslateService,\n        private questionControl: QuestionControlService,\n        private questionManager: QuestionManager,\n        @Inject(forwardRef(() => SecureHttpService)) http: SecureHttpService)\n    {\n        this.http = http;\n    }\n\n    /**\n     * Get toast duration\n     */\n    get toastDuration(): number {\n        return this.api.get('configs', 'toastDuration').value;\n    }\n\n    /**\n     * Component init\n     */\n    async ngOnInit(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            await loader.present();\n\n            let response = await this.http.get(this.config.getApiUrl() + '/complete-profile-questions/')\n                .map(res => res.json())\n                .toPromise();\n\n            // process questions sections\n            response.forEach((questionData: any) => {\n                let data = {\n                    section: '',\n                    questions: []\n                };\n\n                data.section = questionData.section;\n\n                // process questions\n                questionData.items.forEach((question: any) => {\n                    // create a question\n                    let questionItem:QuestionBase = this.questionManager.getQuestion(question.type, {\n                        key: question.key,\n                        label: question.label,\n                        values: question.values,\n                        value: question.value\n                    }, question.params);\n\n                    questionItem.validators = [];\n\n                    // add validators\n                    if (question.validators) {\n                        questionItem.validators = question.validators;\n                    }\n\n                    data.questions.push(questionItem);\n                    this.questions.push(questionItem);\n                });\n\n                this.sections.push(data);\n            });\n\n            // register all questions inside a form group\n            this.form = this.questionControl.toFormGroup(this.questions);\n            this.formReady = true;\n\n            loader.dismiss();\n        }\n        catch (e) {\n            loader.dismiss();\n        }\n    }\n\n    /**\n     * Submit form\n     */\n    async submit(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            await loader.present();\n\n            // process questions\n            let questions: any = [];\n            this.questions.forEach((questionData: QuestionBase) => {\n                questions.push({\n                    name: questionData.key,\n                    value: this.form.value[questionData.key],\n                    type: questionData.controlType\n                });\n            });\n\n            this.updatingUserProfile = true;\n\n            // update questions\n            let updatedQuestions: any = await this.api.updateAll('questionsData', questions, {}, {\n                suffix: 'me',\n                params: {\n                    mode: 'completeRequiredQuestions'\n                }\n            });\n\n            // refresh auth token if exist\n            updatedQuestions.forEach((question: any) => {\n                if (question.params && question.params.token) {\n                    this.auth.setAuthenticated(question.params.token);\n                }\n            });\n\n            // clear user cached data\n            this.apiUtils.clearUserData(this.auth.getUserId(), true);\n\n            // refresh current user's data\n            await this.api.find('users', this.auth.getUserId(), {\n                params: {\n                    with: ['avatar', 'permissions', 'photos', 'memberships']\n                }\n            });\n\n            loader.dismiss();\n\n            // load dashboard\n            this.nav.setRoot(DashboardPage);\n\n            let toast = this.toast.create({\n                message: this.translate.instant('profile_updated'),\n                closeButtonText: this.translate.instant('ok'),\n                showCloseButton: true,\n                duration: this.toastDuration\n            });\n\n            toast.present();\n        }\n        catch (e) {\n            loader.dismiss();\n            this.updatingUserProfile = false;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user/completeProfile/index.ts","import { Inject, forwardRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Component, Input, OnInit} from '@angular/core';\nimport { LoadingController, NavController, ToastController } from 'ionic-angular';\nimport { DataStore } from 'js-data';\nimport { TranslateService } from 'ng2-translate';\n\n// services\nimport { AuthService } from '../../../services/auth/index';\nimport { ApiUtilsService } from '../../../services/api/utils';\n\n// questions\nimport { QuestionControlService } from '../../../services/questions/control-service';\nimport { QuestionManager } from '../../../services/questions/manager';\nimport { QuestionBase }  from '../../../services/questions/questions/base';\n\n// pages\nimport { DashboardPage } from '../../dashboard/index';\n\n@Component({\n    selector: 'complete-account-type',\n    templateUrl: 'index.html',\n    providers: [\n        forwardRef(() => QuestionControlService),\n        forwardRef(() => QuestionManager),\n        ApiUtilsService\n    ]\n})\nexport class CompleteAccountTypePage implements OnInit  {\n    @Input() private questions = <any>[]; // list of questions\n    private sections: any = [];\n    private form: FormGroup;\n    private formReady: boolean = false;\n    private updatingUserProfile: boolean = false;\n    private questionControl: QuestionControlService;\n    private questionManager: QuestionManager;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private loadingCtrl: LoadingController,\n        private auth:AuthService,\n        private api:DataStore,\n        private apiUtils:ApiUtilsService,\n        private nav: NavController,\n        private toast: ToastController,\n        private translate: TranslateService,\n        @Inject(forwardRef(() => QuestionControlService)) questionControl: QuestionControlService,\n        @Inject(forwardRef(() => QuestionManager)) questionManager: QuestionManager)\n    {\n        this.questionControl = questionControl;\n        this.questionManager = questionManager;\n    }\n\n    /**\n     * Get toast duration\n     */\n    get toastDuration(): number {\n        return this.api.get('configs', 'toastDuration').value;\n    }\n\n    /**\n     * Component init\n     */\n    async ngOnInit(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            await loader.present();\n            let genders: any = await this.api.findAll('userGenders');\n\n            // process genders\n            let genderList = [];\n            genders.forEach((gender) => {\n                genderList.push({\n                    value: gender.id,\n                    title: gender.name\n                });\n            });\n\n            // questions list\n            let questions = [\n                {\n                    section: '',\n                    questions: [\n                        {\n                            type: QuestionManager.TYPE_SELECT,\n                            key: 'accountType',\n                            label: this.translate.instant('gender_input'),\n                            values: genderList,\n                            validators: [\n                                {name: 'require'}\n                            ]\n                        }\n                    ]\n                }\n            ];\n\n            // process questions\n            questions.forEach((questionData: any) => {\n                let data = {\n                    section: '',\n                    questions: []\n                };\n\n                data.section = questionData.section;\n\n                questionData.questions.forEach((question: any) => {\n                    let questionItem: QuestionBase = this.questionManager.getQuestion(question.type, {\n                        key: question.key,\n                        label: question.label,\n                        values: question.values\n                    });\n\n                    // add validators\n                    if (question.validators) {\n                        questionItem.validators = question.validators;\n                    }\n\n                    data.questions.push(questionItem);\n                    this.questions.push(questionItem);\n                });\n\n                this.sections.push(data);\n\n                // register all questions inside a form group\n                this.form = this.questionControl.toFormGroup(this.questions);\n                this.formReady = true;\n\n                loader.dismiss();\n            });\n        }\n        catch (e) {\n            loader.dismiss();\n        }\n    }\n\n    /**\n     * Submit form\n     */\n    async submit(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            await loader.present();\n\n            this.updatingUserProfile = true;\n\n            // update questions\n            await this.api.update('users', this.auth.getUserId(), {\n                accountType: this.form.value['accountType']\n            }, {\n                params: {\n                    mode: 'completeAccountType'\n                }\n            });\n\n            // clear user cached data\n            this.apiUtils.clearUserData(this.auth.getUserId(), true);\n\n            // refresh current user's data\n            await this.api.find('users', this.auth.getUserId(), {\n                params: {\n                    with: ['avatar', 'permissions', 'photos', 'memberships']\n                }\n            });\n\n            loader.dismiss();\n\n            // load dashboard\n            this.nav.setRoot(DashboardPage);\n\n            let toast = this.toast.create({\n                message: this.translate.instant('profile_updated'),\n                closeButtonText: this.translate.instant('ok'),\n                showCloseButton: true,\n                duration: this.toastDuration\n            });\n\n            toast.present();\n        }\n        catch (e) {\n            loader.dismiss();\n            this.updatingUserProfile = false;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user/completeAccountType/index.ts","import { Component, Inject, forwardRef } from '@angular/core';\nimport { TranslateService } from 'ng2-translate';\nimport { DataStore } from 'js-data';\nimport { NavController } from 'ionic-angular';\n\n// import pages\nimport { LoginPage } from '../../pages/user/login/index';\nimport { AppMaintenancePage } from '../../pages/appMaintenance/index';\nimport { DashboardPage } from '../../pages/dashboard/index';\n\n// import services\nimport { ApplicationService } from '../../services/application/index';\nimport { AuthService } from '../../services/auth/index';\n\n@Component({\n    selector: 'app-connection-error',\n    templateUrl: 'index.html',\n    providers: [\n    ]\n})\n\nexport class AppConnectionErrorPage {\n    private pageHeader: string = 'No server connection';\n    private application: ApplicationService;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private auth: AuthService,\n        private nav: NavController,\n        private api: DataStore,\n        @Inject(forwardRef(() => ApplicationService)) application: ApplicationService,\n        private translate: TranslateService)\n    {\n        this.application = application;\n\n        // do we have translations?\n        if (this.translate.getDefaultLang()) {\n            this.pageHeader = this.translate.instant('app_conection_error_page_header');\n        }\n    }\n\n    /**\n     * Do refresh\n     */\n    async doRefresh(refresher): Promise<any> {\n        try {\n            // refresh application dependencies\n            await this.application.loadDependencies(false);\n            refresher.complete();\n\n            // redirect to the page\n            if (this.api.get('configs', 'maintenanceMode').value) {\n                this.nav.setRoot(AppMaintenancePage);\n\n                return;\n            }\n\n            this.nav.setRoot(!this.auth.isAuthenticated() ? LoginPage : DashboardPage);\n        }\n        catch (e) {\n            refresher.complete();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/appConnectionError/index.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n// pages\nimport { DashboardPage } from '../dashboard/index';\nimport { LoginPage } from '../user/login/index';\n\n// services\nimport { AuthService } from '../../services/auth/index';\n\n@Component({\n    selector: 'app-error',\n    templateUrl: 'index.html',\n    providers: [\n    ]\n})\n\nexport class AppErrorPage {\n    /**\n     * Constructor\n     */\n    constructor(\n        private auth: AuthService,\n        private nav: NavController) {}\n\n    /**\n     * Refresh\n     */\n    refresh(): void {\n        this.nav.setRoot(!this.auth.isAuthenticated() ? LoginPage : DashboardPage);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/appError/index.ts","import { Injectable } from '@angular/core';\nimport { App, Events } from 'ionic-angular';\nimport { AdMob, AdMobOptions, AdSize } from '@ionic-native/admob';\nimport { DataStore } from 'js-data';\n\nimport { PermissionsService } from '../../services/permissions/index';\n\n@Injectable()\nexport class AdMobService\n{\n    private bannerCreated: boolean = false;\n    private eventSubscribed: boolean = false;\n    private isBannerVisible: boolean = false;\n    private lastViewName: string = '';\n    private configsUpdatedHandler: () => void;\n    private permissionsUpdatedHandler: () => void;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private api: DataStore,\n        private app: App,\n        private adMob: AdMob,\n        private events: Events,\n        private permissions: PermissionsService\n    ) {\n\n        this.configsUpdatedHandler = (): void => {\n            if (this.config.enabled){\n                this.checkView(this.lastViewName);\n            } else {\n                this.hideBanner();\n            }\n        };\n\n        this.permissionsUpdatedHandler = (): void => {\n            if (this.permissions.isActionAllowed('ads_hide_ads'))\n            {\n                this.hideBanner();\n            } else {\n                this.checkView(this.lastViewName);\n            }\n        };\n\n    }\n\n    /**\n     * Init\n     */\n    init(): void {\n        if (this.bannerCreated) {\n            this.hideBanner();\n            this.adMob.removeBanner();\n        }\n\n        let nav = this.app.getRootNav();\n        this.bannerCreated = false;\n\n        this.events.subscribe('permissions:updated', this.permissionsUpdatedHandler);\n        this.events.subscribe('configs:updated', this.configsUpdatedHandler);\n\n        if (!this.eventSubscribed) {\n            nav.viewDidEnter.subscribe((view) => {\n                this.checkView(view.instance.constructor.name);\n            });\n\n            this.eventSubscribed = true;\n        }\n    }\n\n    /**\n     * Check view\n     */\n    async checkView(viewName): Promise<any> {\n        this.lastViewName = viewName;\n        if (this.config.enabled && this.config.adId) {\n            if (!this.bannerCreated) {\n                await this.createBanner();\n\n                this.bannerCreated = true;\n                this.checkView(viewName);\n\n                return;\n            }\n\n            if (this.config.availableViews.includes(viewName)) {\n                this.showBanner();\n\n                return;\n            }\n\n            this.hideBanner();\n\n            return;\n        }\n    }\n\n    /**\n     * Create banner\n     */\n    private createBanner(): Promise<any> {\n        let options: AdMobOptions = {\n            adId: this.config.adId,\n            overlap: false,\n            position: this.adMob.AD_POSITION.BOTTOM_CENTER,\n            adSize: <AdSize> 'SMART_BANNER',\n            autoShow: false\n        };\n\n        return this.adMob.createBanner(options);\n    }\n\n    /**\n     * Show banner\n     */\n    private showBanner(): void {\n        if (!this.isBannerVisible) {\n            this.adMob.showBanner(this.adMob.AD_POSITION.BOTTOM_CENTER);\n            this.isBannerVisible = true;\n        }\n    }\n\n    /**\n     * Hide banner\n     */\n    private hideBanner(): void {\n        if (this.isBannerVisible) {\n            this.adMob.hideBanner();\n            this.isBannerVisible = false;\n        }\n    }\n\n    /**\n     * Config\n     */\n    private get config(): any {\n        return this.api.get('configs', 'adMobConfig').value;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/admob/index.ts","import { Injectable }   from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { QuestionBase } from './questions/base';\nimport { QuestionManager } from './manager';\n\n// import validators\nimport { Validators } from './validators/index';\n\n@Injectable()\nexport class QuestionControlService {\n    constructor(private validators: Validators) { }\n\n    /**\n     * Assign questions to a group\n     */\n    toFormGroup(questions: QuestionBase[], groupValidator?: any): FormGroup {\n        let group: any = {};\n\n        // process questions\n        questions.forEach(question => {\n            let validators = [];\n            let asyncValidators = [];\n            let hardCodedValidators: {name: string, message?: string, params?: {}}[] = [];\n\n            switch (question.getType()) {\n                case QuestionManager.TYPE_URL:\n                    hardCodedValidators.push(\n                        {name: 'url'}\n                    );\n                    break;\n\n                case QuestionManager.TYPE_EMAIL:\n                    hardCodedValidators.push(\n                        {name: 'email'}\n                    );\n                    break;\n            }\n\n            // add hardcoded validators\n            if (hardCodedValidators.length) {\n                let allValidators: {name: string, message?: string, params?: {}}[] = question.validators\n                    ? question.validators.concat(hardCodedValidators)\n                    : hardCodedValidators;\n\n                question.setValidators(allValidators);\n            }\n\n            // add validators\n            if (question.validators) {\n                question.validators.forEach((validatorData) => {\n                    if (!this.validators.isValidatorExists(validatorData.name)) {\n                        throw new TypeError(`Unsupported validator ${validatorData.name}`);\n                    }\n\n                    let validator = this.validators.getValidator(validatorData.name);\n\n                    // add params inside validator\n                    if (validatorData.params) {\n                        validator.addParams(validatorData.params);\n                    }\n\n                    this.validators.isAsyncValidator(validatorData.name)\n                        ? asyncValidators.push(validator.validate())\n                        : validators.push(validator.validate());\n                });\n            }\n\n            let control = new FormControl((question.value != null ? question.value : ''), validators, asyncValidators);\n            question.setControl(control);\n\n            group[question.key] = control;\n        });\n\n        return new FormGroup(group, groupValidator);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/questions/control-service.ts","import { Component, ViewChild, OnInit, AfterViewChecked, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { NavParams, InfiniteScroll, LoadingController, Events } from 'ionic-angular';\nimport { DataStore } from 'js-data';\nimport { PhotoViewer } from '@ionic-native/photo-viewer';\n\nimport { PhotoUnit } from '../../user/edit/basePhotoEdit'\n\n// services\nimport { PermissionsService } from '../../../services/permissions/index';\n\n// pages\nimport { InappsPage } from '../../inapps/index';\n\n@Component({\n    selector: 'profile-photos',\n    templateUrl: 'index.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class ProfilePhotosPage implements OnInit, AfterViewChecked {\n    @ViewChild(InfiniteScroll) infiniteScroll: InfiniteScroll = null;\n\n    private inappsPage = InappsPage;\n    private user: any;\n    private userId: number;\n    private photosLimit: number;\n    private freeSlots: number = 0;\n    private pageReady: boolean = false;\n    private infiniteScrollNeedComplete: boolean = false;\n    private apiPhotos: any[] = [];\n    private photos: any[] = [];\n    private trackedPhotos: number[] = [];\n    private permissionsUpdatedHandler: () => void;\n    private configsUpdatedHandler: () => void;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private ref: ChangeDetectorRef,\n        private events: Events,\n        private photoViewer: PhotoViewer,\n        private permissions: PermissionsService,\n        private api: DataStore,\n        private loadingCtrl: LoadingController,\n        private navParams: NavParams)\n    {\n        this.userId = this.navParams.get('userId');\n        this.photosLimit = this.api.get('configs', 'photosLimit').value;\n\n        // -- init callbacks --//\n\n        // permissions updated handler\n        this.permissionsUpdatedHandler = (): void => {\n            // user has not been loaded\n            if (this.isViewPhotoAllowed && !this.user) {\n                this.loadUserData();\n                this.ref.markForCheck();\n\n                return;\n            }\n\n            this.ref.markForCheck();\n        };\n\n        // configs updated handler\n        this.configsUpdatedHandler = (): void => {\n            this.ref.markForCheck();\n        };\n    }\n\n    /**\n     * Get photos per row\n     */\n    get photosPerRow(): number {\n        return this.api.get('configs', 'photosPerRow').value;\n    }\n\n    /**\n     * Get min photos\n     */\n    get minPhotos(): number {\n        return this.api.get('configs', 'minPhotos').value;\n    }\n\n    /**\n     * Get big default avatar\n     */\n    get bigDefaultAvatar(): string {\n        return this.api.get('configs', 'bigDefaultAvatar').value;\n    }\n\n    /**\n     * Get default avatar\n     */\n    get defaultAvatar(): string {\n        return this.api.get('configs', 'defaultAvatar').value;\n    }\n\n    /**\n     * Is view photo allowed\n     */\n    get isViewPhotoAllowed(): boolean {\n        return this.permissions.isActionAllowed('photo_view');\n    }\n\n    /**\n     * View rendered\n     */\n    ngAfterViewChecked() {\n        if (this.infiniteScrollNeedComplete) {\n            this.infiniteScrollNeedComplete = false;\n\n            setTimeout(() => {\n                this.infiniteScroll.complete();\n            });\n        }\n    }\n\n    /**\n     * Component init\n     */\n    ngOnInit(): void {\n        this.loadUserData();\n    }\n\n\n    /**\n     * Page will enter\n     */\n    ionViewWillEnter(): any {\n        // load user data\n        this.events.subscribe('permissions:updated', this.permissionsUpdatedHandler);\n\n        // config updated\n        this.events.subscribe('configs:updated', this.configsUpdatedHandler);\n    }\n\n    /**\n     * Page will leave\n     */\n    ionViewWillLeave(): void {\n        this.events.unsubscribe('permissions:updated', this.permissionsUpdatedHandler);\n        this.events.unsubscribe('configs:updated', this.configsUpdatedHandler);\n    }\n\n    /**\n     * View photo\n     */\n    viewPhoto(row: number, col: number): void {\n        let photo: PhotoUnit = this.photos[row][col];\n\n        switch (photo.type) {\n            default :\n                // track action\n                if (photo.type == 'photo' && !this.trackedPhotos.includes(photo.id)) {\n                    this.permissions.trackAction('photo', 'view');\n                    this.trackedPhotos.push(photo.id);\n                }\n\n                // show photo\n                this.photoViewer.show(photo.bigUrl);\n        }\n    }\n\n    /**\n     * Load more photos\n     */\n    loadMorePhotos(): void {\n        if (this.getPhotoCount() + 1 > this.photosLimit) { // include avatar\n            this.photosLimit += this.photosPerRow;\n\n            this.loadPhotoList(this.photosLimit);\n            this.infiniteScrollNeedComplete = true;\n            this.ref.markForCheck();\n\n            return;\n        }\n\n        this.infiniteScroll.enabled = false; //don't show scroll any more\n        this.infiniteScroll.complete();\n        this.ref.markForCheck();\n    }\n\n    /**\n     * Load photo list\n     */\n    private loadPhotoList(limit: number): void {\n        this.photos = []; // clear current photo list\n        let photos: PhotoUnit[] = [];\n        this.freeSlots = 0;\n\n        // add avatar to the photo list\n        photos.push(new PhotoUnit(\n            null,\n            this.user.avatar.url ? this.user.avatar.url : this.defaultAvatar,\n            this.user.avatar.bigUrl ? this.user.avatar.bigUrl : this.bigDefaultAvatar,\n            'avatar',\n            true\n        ));\n\n        // get user photos\n        let apiPhotos = this.apiPhotos.slice(0, limit - 1); // exclude avatar\n\n        // check count of photos\n        let visiblePhotos = this.getPhotoCount() + 1 >= this.minPhotos // include avatar\n            ? limit\n            : this.minPhotos;\n\n        // process photos\n        for (let i = 1; i < visiblePhotos; i++) {\n            let photoDetails = apiPhotos && apiPhotos[i - 1] ? apiPhotos[i - 1] : null;\n\n            photos.push(new PhotoUnit(\n                photoDetails ? photoDetails.id : null,\n                photoDetails ? photoDetails.url : null,\n                photoDetails ? photoDetails.bigUrl : null,\n                'photo',\n                photoDetails ? photoDetails.approved : true\n            ));\n\n            if (!photoDetails) {\n                this.freeSlots++;\n            }\n        }\n\n        // chunk photos\n        for (let i = 0; i < photos.length; i += this.photosPerRow) {\n            this.photos.push(photos.slice(i, i + this.photosPerRow));\n        }\n\n        this.ref.markForCheck();\n    }\n\n\n    /**\n     * Get photo count\n     */\n    private getPhotoCount(): number {\n        return this.apiPhotos.length;\n    }\n\n    /**\n     * Load user data\n     */\n    private async loadUserData(): Promise<any>  {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            this.pageReady = false;\n            this.ref.markForCheck();\n\n            await loader.present();\n\n            if (this.isViewPhotoAllowed) {\n                // load all pages dependencies\n                this.user = await this.api.getMapper('users').find(this.userId, {\n                    params: {\n                        with: ['avatar', 'photos']\n                    }\n                });\n\n                this.user.photos.forEach((photo) => {\n                    if (photo.approved) {\n                        this.apiPhotos.push(photo);\n                    }\n                });\n\n                // load photos\n                this.loadPhotoList(this.photosLimit);\n                this.pageReady = true;\n            }\n\n            this.ref.markForCheck();\n            loader.dismiss();\n        }\n        catch (e) {\n            loader.dismiss();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/profile/photos/index.ts","import { Component, OnInit, Input } from '@angular/core';\nimport { TranslateService } from 'ng2-translate';\nimport { FormGroup } from '@angular/forms';\nimport { NavParams, ViewController } from 'ionic-angular';\n\n// questions\nimport { QuestionManager } from '../../../services/questions/manager';\nimport { QuestionControlService } from '../../../services/questions/control-service';\nimport { QuestionBase }  from '../../../services/questions/questions/base';\n\n// services\nimport { SecureHttpService } from '../../../services/http/index';\nimport { ConfigService } from '../../../services/config/index';\n\n@Component({\n    selector: 'flag',\n    templateUrl: './index.html',\n    providers: [\n        QuestionControlService,\n        QuestionManager\n    ]\n})\nexport class FlagComponent implements OnInit {\n    @Input() private questions = <any>[]; // list of questions\n\n    private identityId: number;\n    private entityType: string;\n    private sections: any = [];\n    private form: FormGroup;\n    private formReady: boolean = false;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private config: ConfigService,\n        private http: SecureHttpService,\n        private viewCtrl: ViewController,\n        private navParams: NavParams,\n        private translate: TranslateService,\n        private questionControl: QuestionControlService,\n        private questionManager: QuestionManager)\n    {\n        this.identityId = this.navParams.get('identityId');\n        this.entityType = this.navParams.get('entityType');\n    }\n\n    /**\n     * Component init\n     */\n    ngOnInit(): void {\n        // questions list\n        let questions = [\n            {\n                section: '',\n                questions: [\n                    {\n                        type: QuestionManager.TYPE_SELECT,\n                        key: 'reason',\n                        label: this.translate.instant('flag_input'),\n                        values: [{\n                            value: 'spam',\n                            title: this.translate.instant('flag_as_spam')\n                        },\n                        {\n                            value: 'offence',\n                            title: this.translate.instant('flag_as_offence')\n                        },\n                        {\n                            value: 'illegal',\n                            title: this.translate.instant('flag_as_illegal')\n                        }],\n                        validators: [\n                            {name: 'require'}\n                        ]\n                    }\n                ]\n            }\n        ];\n\n        // process questions\n        questions.forEach((questionData: any) => {\n            let data = {\n                section: '',\n                questions: []\n            };\n\n            data.section = questionData.section;\n\n            questionData.questions.forEach((question: any) => {\n                let questionItem: QuestionBase = this.questionManager.getQuestion(question.type, {\n                    key: question.key,\n                    label: question.label,\n                    values: question.values\n                });\n\n                // add validators\n                if (question.validators) {\n                    questionItem.validators = question.validators;\n                }\n\n                data.questions.push(questionItem);\n                this.questions.push(questionItem);\n            });\n\n            this.sections.push(data);\n\n            // register all questions inside a form group\n            this.form = this.questionControl.toFormGroup(this.questions);\n            this.formReady = true;\n        });\n    }\n\n    /**\n     * Return back\n     */\n    returnBack(): void {\n        this.viewCtrl.dismiss({\n            reported: false\n        });\n    }\n\n    /**\n     * Submit form\n     */\n    submit(): void {\n        try {\n            let flagData = Object.assign({}, this.form.value, {\n                identityId: this.identityId,\n                entityType: this.entityType\n            });\n\n            this.http.post(this.config.getApiUrl() + '/flags/', JSON.stringify(flagData))\n                .toPromise();\n\n            this.viewCtrl.dismiss({\n                reported: true\n            });\n        }\n        catch (e) {\n            this.viewCtrl.dismiss({\n                reported: false\n            });\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/flag/index.ts","import { Component, OnInit } from '@angular/core';\nimport { ViewController, NavParams, NavController } from 'ionic-angular';\nimport { DataStore } from 'js-data';\n\n// services\nimport { AuthService } from '../../../../services/auth/index';\n\n@Component({\n    selector: 'matched-user',\n    templateUrl: './index.html'\n})\nexport class MatchedUserPageComponent implements OnInit {\n    private matchedUser: any;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private auth: AuthService,\n        private api: DataStore,\n        private viewCtrl: ViewController,\n        private navParams: NavParams)\n    {\n        this.matchedUser = this.navParams.get('user');\n    }\n \n    /**\n     * Component init\n     */\n    async ngOnInit(): Promise<any> {\n        try {\n            // mark matched user\n            await this.api.update('matchedUsers', this.matchedUser.id, {\n                isRead: true\n            });\n        }\n        catch (e) {\n            this.viewCtrl.dismiss();\n        }\n    }\n\n    /**\n     * Current user\n     */\n    get currentUser(): any {\n        return this.api.get('users', this.auth.getUserId()); // get logged user data\n    }\n\n    /**\n     * Close\n     */\n    close(): void {\n        this.viewCtrl.dismiss();\n    }\n\n    /**\n     * Show chat\n     */\n     showChat(): void {\n        this.viewCtrl.dismiss({\n            showChat: true\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/dashboard/components/matchedUser/index.ts","import { Component, Input, OnInit, Inject, forwardRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { NavController, AlertController, LoadingController } from 'ionic-angular';\nimport { Facebook, FacebookLoginResponse } from '@ionic-native/facebook'\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/map';\n\n// services\nimport { AuthService } from '../../../services/auth/index';\nimport { ConfigService } from '../../../services/config/index';\nimport { TranslateService } from 'ng2-translate';\nimport { SecureHttpService } from '../../../services/http/index';\nimport { ServerEventsService } from '../../../services/serverEvents/index';\n\n// pages\nimport { AppUrlPage } from '../../appUrl/index';\nimport { DashboardPage } from '../../dashboard/index';\nimport { ForgotPasswordCheckEmailPage } from '../forgotPassword/checkEmail/index';\nimport { JoinInitialPage } from '../join/initial/index';\n\n// questions\nimport { QuestionManager } from '../../../services/questions/manager';\nimport { QuestionControlService } from '../../../services/questions/control-service';\n\n@Component({\n    selector: 'login',\n    templateUrl: 'index.html',\n    providers: [\n        QuestionControlService,\n        QuestionManager\n    ]\n})\nexport class LoginPage implements OnInit {\n    @Input() questions = <any>[]; // list of questions\n\n    private form: FormGroup;\n    private appUrlPage = AppUrlPage;\n    private joinPage = JoinInitialPage;\n    private forgotPasswordPage = ForgotPasswordCheckEmailPage;\n    private loginInProcessing: boolean = false;\n    private isGenericSiteUrl: boolean = false;\n    private showFacebookLoginButton: boolean = false;\n    private http: SecureHttpService;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private serverEvents: ServerEventsService,\n        private config: ConfigService,\n        private fb: Facebook,\n        @Inject(forwardRef(() => SecureHttpService)) http: SecureHttpService,\n        private auth: AuthService,\n        private loadingCtrl: LoadingController,\n        private nav: NavController,\n        private questionControl: QuestionControlService,\n        private translate: TranslateService,\n        private alert: AlertController,\n        private questionManager: QuestionManager)\n    {\n        this.http = http;\n\n        if (this.config.getGenericApiUrl()) {\n            this.isGenericSiteUrl = true;\n        }\n\n        if (this.config.getConfig('facebookAppId')){\n            this.showFacebookLoginButton = true;\n        }\n    }\n\n    /**\n     * Component init\n     */\n    ngOnInit(): void {\n        this.serverEvents.restart();\n\n        // create form items\n        this.questions = [\n            this.questionManager.getQuestion(QuestionManager.TYPE_TEXT, {\n                key: 'login',\n                label: this.translate.instant('login_input'),\n                validators: [\n                    {name: 'require'}\n                ]\n            }, {\n                questionClass: 'sk-name',\n                hideErrors: true,\n                hideWarning: true\n            }),\n            this.questionManager.getQuestion(QuestionManager.TYPE_PASSWORD, {\n                key: 'password',\n                label: this.translate.instant('password_input'),\n                validators: [\n                    {name: 'require'}\n                ]\n            }, {\n                questionClass: 'sk-password',\n                hideErrors: true,\n                hideWarning: true\n            })\n        ];\n\n        // register all questions inside a form group\n        this.form = this.questionControl.toFormGroup(this.questions);\n    }\n\n    /**\n     * Login\n     */\n    async login(): Promise<any> {\n        try {\n            this.loginInProcessing = true;\n\n            let data = await this.http.post(this.config.getApiUrl() + '/login/', JSON.stringify({\n                    username: this.form.value.login,\n                    password: this.form.value.password\n                }))\n                .map(res => res.json())\n                .toPromise();\n\n            this.loginInProcessing = false;\n\n            if (data.success == true) {\n                this.auth.setAuthenticated(data.token);\n                this.nav.setRoot(DashboardPage);\n\n                return;\n            }\n\n            this.loginFailed();\n        }\n        catch (e) {\n            this.loginInProcessing = false;\n            this.loginFailed();\n        }\n    }\n\n    /**\n     * Login failed\n     */\n    private loginFailed(): void {\n        let alert = this.alert.create({\n            title: this.translate.instant('error_occurred'),\n            subTitle: this.translate.instant('login_failed'),\n            buttons: [this.translate.instant('ok')]\n        });\n\n        alert.present();\n    }\n\n    async facebookLogin(): Promise<any> {\n        let permissions = ['public_profile', 'email'];\n        let loader = this.loadingCtrl.create();\n\n        await loader.present();\n\n        try {\n            let facebookResponse: FacebookLoginResponse = await this.fb.login(permissions);\n            let result = await this.http.post(\n                    this.config.getApiUrl() + '/facebook-connect/',\n                JSON.stringify(facebookResponse))\n                .map(res => res.json())\n                .toPromise();\n\n            loader.dismiss();\n\n            if (result.success == true) {\n                this.auth.setAuthenticated(result.token);\n                this.nav.setRoot(DashboardPage);\n                return;\n            }\n\n            let alert = this.alert.create({\n                message: result.error,\n                buttons: [this.translate.instant('ok')]\n            });\n            alert.present();\n\n        }\n        catch(e) {\n            loader.dismiss();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user/login/index.ts","import { Injectable, Inject, forwardRef } from '@angular/core';\nimport { DataStore } from 'js-data';\nimport { TranslateService } from 'ng2-translate';\nimport { Platform, Config as AppConfig } from 'ionic-angular';\nimport 'rxjs/add/operator/toPromise';\n\n// import services\nimport { SecureHttpService } from '../../services/http/index';\nimport { ConfigService } from '../../services/config/index';\nimport { AdMobService } from '../../services/admob/index';\nimport { PushNotificationsService } from '../../services/push/index';\n\n@Injectable()\nexport class ApplicationService {\n    private appLanguage = 'en';\n    private appLocation: {latitude: number, longitude: number} = null;\n    private http: SecureHttpService;\n    private pushNotifications: PushNotificationsService;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        @Inject(forwardRef(() => PushNotificationsService)) pushNotifications: PushNotificationsService,\n        private adMobService: AdMobService,\n        private platform: Platform,\n        private appConfig: AppConfig,\n        private translate: TranslateService,\n        private api: DataStore,\n        @Inject(forwardRef(() => SecureHttpService)) http: SecureHttpService,\n        private config: ConfigService)\n    {\n        this.http = http;\n        this.pushNotifications = pushNotifications;\n    }\n\n    /**\n     * Set app location\n     */\n    setAppLocation(latitude: number, longitude: number): void {\n        this.appLocation = {\n            latitude: latitude,\n            longitude: longitude,\n        };\n    }\n\n    /**\n     * Get app location\n     */\n    getAppLocation(): {latitude: number, longitude: number} {\n        return this.appLocation;\n    }\n\n    /**\n     * Set app language\n     */\n    setAppLanguage(language: string): void {\n        this.appLanguage = language;\n    }\n\n    /**\n     * Get app language\n     */\n    getAppLanguage(): string {\n        return this.appLanguage;\n    }\n\n    /**\n     * Get app setting\n     */\n    getAppSetting(name: string, defaultValue: any = null): any {\n        let value: any = localStorage.getItem(`app_setting_${name}`);\n\n        if (value === null && defaultValue !== null) {\n            return defaultValue;\n        }\n\n        return value;\n    }\n\n    /**\n     * Set app setting\n     */\n    setAppSetting(name: string, value: any): void {\n        localStorage.setItem(`app_setting_${name}`, value);\n    }\n\n    /**\n     * Load dependencies\n     */\n    loadDependencies(clearOldData: boolean = true): Promise<any> {\n        // clear old data\n        if (clearOldData) {\n            this.api.removeAll('configs');\n            this.translate.resetLang(this.appLanguage);\n        }\n\n        let promises = [];\n\n        // load configs\n        promises.push(this.api.findAll('configs', {}, {force: true}));\n\n        // load translations\n        promises.push(this.http.get(this.config.getApiUrl() + '/i18n/' + this.appLanguage + '/')\n            .toPromise()\n            .then(res => this.translate.setTranslation(this.appLanguage, res.json()))\n        );\n\n        return new Promise((resolve, reject) => {\n            // load dependencies\n            Promise.all(promises).then(() => {\n                // init translations\n                this.translate.use(this.appLanguage);\n\n                // translate navigation items\n                this.appConfig.set('backButtonText', this.translate.instant('back'));\n\n                if (this.platform.is('cordova')) {\n                    // init admob banners\n                    this.adMobService.init();\n\n                    // init push notifications\n                    this.pushNotifications.init(this.appLanguage);\n                }\n\n                resolve();\n            }).catch(() => {\n                reject();\n            });\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/application/index.ts","import { Injectable } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nexport class QuestionBaseOptions {\n    value: any;\n    values: {value: string | number, title: string}[];\n    key: string;\n    label: string;\n    controlType: string;\n    validators: {name: string, message?: string, params?: {}}[];\n};\n\nexport class QuestionBaseParams {\n    questionClass: string;\n    hideErrors: boolean;\n    hideWarning: boolean;\n};\n\n@Injectable()\nexport class QuestionBase {\n    public controlView: AbstractControl;\n    public value: any;\n    public values: {value: string | number, title: string}[];\n    public key: string;\n    public label: string;\n    public controlType: string;\n    public validators: {name: string, message?: string, params?: {}}[];\n    public params: {questionClass?: string, hideErrors?: boolean, hideWarning?: boolean};\n\n    /**\n     * Constructor\n     */\n    constructor(options: QuestionBaseOptions, params: QuestionBaseParams) {\n\n        this.value = options.value;\n        this.values = options.values || null;\n        this.key = options.key || '';\n        this.label = options.label || '';\n        this.controlType = options.controlType || '';\n        this.validators = options.validators || null;\n        this.params = params;\n    }\n\n    /**\n     * Set control\n     */\n    setControl(controlView: AbstractControl): void {\n        this.controlView = controlView;\n    }\n\n    /**\n     * Set validators\n     */\n    setValidators(validators: {name: string, message?: string, params?: {}}[]) {\n        this.validators = validators;\n    }\n\n    /**\n     * Get type\n     */\n    getType(): string {\n        return this.controlType;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/questions/questions/base.ts","import { Injectable } from '@angular/core';\nimport { DataStore } from 'js-data';\nimport { AlertController, App } from 'ionic-angular';\nimport { TranslateService } from 'ng2-translate';\n\n// pages\nimport { InappsPage } from '../../pages/inapps/index';\n\n// services\nimport { AuthService } from '../auth/index';\nimport { SecureHttpService } from '../../services/http/index';\nimport { ConfigService } from '../../services/config/index';\n\n@Injectable()\nexport class PermissionsService {\n    /**\n     * Constructor\n     */\n    constructor(\n        private config: ConfigService,\n        private http: SecureHttpService,\n        private app: App,\n        private translate: TranslateService,\n        private alert: AlertController,\n        private api: DataStore,\n        private auth: AuthService) {}\n\n    /**\n     * Is action allowed\n     */\n    isActionAllowed(action, userId?: number): boolean {\n        let currentUser: number = !userId ? this.auth.getUserId() : userId;\n\n        let permission: any[] = this.api.filter('permissions', {\n            where: {\n                userId: currentUser,\n                permission: action,\n                isAllowed: true\n            }\n        });\n\n        return permission.length > 0;\n    }\n\n    /**\n     * Is action allowed after tracking\n     */\n    isAllowedAfterTracking(action, userId?: number): boolean {\n        let currentUser: number = !userId ? this.auth.getUserId() : userId;\n\n        let permission: any[] = this.api.filter('permissions', {\n            where: {\n                userId: currentUser,\n                permission: action,\n                isAllowedAfterTracking: true\n            }\n        });\n\n        return permission.length > 0;\n    }\n\n    /**\n     * Is action promoted\n     */\n    isActionPromoted(action, userId?: number): boolean {\n        let currentUser: number = !userId ? this.auth.getUserId() : userId;\n\n        let permission: any[] = this.api.filter('permissions', {\n            where: {\n                userId: currentUser,\n                permission: action,\n                isPromoted: true\n            }\n        });\n\n        return permission.length > 0;\n    }\n\n    /**\n     * Get action price\n     */\n    getActionPrice(action, userId?: number): number {\n        let currentUser: number = !userId ? this.auth.getUserId() : userId;\n\n        let permission: any[] = this.api.filter('permissions', {\n            where: {\n                userId: currentUser,\n                permission: action,\n                authorizedByCredits: true\n            }\n        });\n\n        if (permission.length) {\n            return permission[0].creditsCost;\n        }\n    }\n\n    /**\n     * Show access denied alert\n     */\n    showAccessDeniedAlert(): void {\n        let confirm = this.alert.create({\n            title: this.translate.instant('permission_denied_alert_title'),\n            message: this.translate.instant('permission_denied_alert_message'),\n            buttons: [\n                {\n                    text: this.translate.instant('cancel')\n                },\n                {\n                    text: this.translate.instant('purchase'),\n                    handler: () => {\n                        this.app.getRootNav().push(InappsPage);\n                    }\n                }\n            ]\n        });\n\n        confirm.present();\n    }\n\n    /**\n     * Track action\n     */\n    async trackAction(groupName: string, actionName: string): Promise<any> {\n        try {\n            await this.http.post(`${this.config.getApiUrl()}/permissions/track-action/`, {\n                    groupName: groupName,\n                    actionName: actionName\n                })\n                .map(res => res.json())\n                .toPromise();\n        }\n        catch (e){}\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/permissions/index.ts","import { Component, forwardRef, Inject } from '@angular/core';\nimport { Nav, ModalController, ActionSheetController, LoadingController } from 'ionic-angular';\nimport { TranslateService } from \"ng2-translate\";\nimport { DataStore } from \"js-data\";\n\n// pages\nimport { LoginPage } from '../user/login/index';\nimport { CustomPageComponent } from \"../../shared/components/customPage/index\";\n\n// services\nimport { SecureHttpService } from '../../services/http/index';\nimport { AuthService } from '../../services/auth/index';\n\n@Component({\n    selector: 'app-settings',\n    templateUrl: 'index.html',\n    providers: [\n    ]\n})\n\nexport class AppSettingsPage {\n    private http: SecureHttpService;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private navCtrl: Nav,\n        private api: DataStore,\n        private auth: AuthService,\n        private translate: TranslateService,\n        private modalCtrl: ModalController,\n        protected loadingCtrl: LoadingController,\n        private actionSheetCtrl: ActionSheetController,\n        @Inject(forwardRef(() => SecureHttpService)) http: SecureHttpService)\n    {\n        this.http = http;\n    }\n\n    /**\n     * User\n     */\n    get user(): any {\n        return this.api.get('users', this.auth.getUserId());\n    }\n\n    /**\n     * Show privacy policy modal\n     */\n    showPrivacyPolicyModal(): void {\n        let modal = this.modalCtrl.create(CustomPageComponent, {\n            title: this.translate.instant('privacy_policy_page_header'),\n            pageName: 'privacy_policy_page_content'\n        });\n\n        modal.present();\n    }\n\n    /**\n     * Show terms of use modal\n     */\n    showTermsOfUseModal(): void {\n        let modal = this.modalCtrl.create(CustomPageComponent, {\n            title: this.translate.instant('tos_page_header'),\n            pageName: 'tos_page_content'\n        });\n\n        modal.present();\n    }\n\n    /**\n     * Delete account confirmation\n     */\n    deleteAccountConfirmation(): void {\n        let actionSheet = this.actionSheetCtrl.create({\n            title: this.translate.instant('app_settings_delete_account_confirmation'),\n            buttons: [\n                {\n                    text: this.translate.instant('app_settings_delete_account_button'),\n                    handler: () => {\n                        this.deleteAccount()\n                    }\n                },\n                {\n                    text: this.translate.instant('cancel')\n                }\n            ]\n        });\n\n        actionSheet.present();\n    }\n\n    /**\n     * Logout user\n     */\n    logout(): void {\n        this.auth.logout();\n        this.navCtrl.setRoot(LoginPage);\n    }\n\n    /**\n     * Delete user account\n     */\n    protected async deleteAccount(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            await loader.present();\n\n            await this.api.destroy('users', this.auth.getUserId());\n\n            loader.dismiss();\n\n            this.navCtrl.setRoot(LoginPage);\n        }\n        catch(e)\n        {\n            loader.dismiss();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/appSettings/index.ts","import { Component, OnInit, AfterViewChecked, ViewChild, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { List, AlertController, LoadingController, NavController, InfiniteScroll, ToastController, Events } from 'ionic-angular';\nimport { DataStore } from 'js-data';\nimport { TranslateService } from 'ng2-translate';\n\n// services\nimport { SecureHttpService } from '../../../services/http/index';\nimport { ConfigService } from '../../../services/config/index';\nimport { ApplicationService } from '../../../services/application/index';\n\n// pages\nimport { ProfileViewPage } from '../../profile/view/index';\nimport { MessagesPage } from '../../messages/index';\n\n@Component({\n    selector: 'bookmarks',\n    templateUrl: 'index.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class BookmarksPage implements OnInit, AfterViewChecked {\n    @ViewChild(InfiniteScroll) infiniteScroll: InfiniteScroll = null;\n    @ViewChild(List) bookmarkList: List;\n\n    private bookmarks: any[] = [];\n    private pageReady: boolean = false;\n    private currentLocalLimit: number;\n    private infiniteScrollNeedComplete: boolean = false;\n    private bookmarkUpdatedHandler: () => void;\n    private configsUpdatedHandler: () => void;\n    private profileLikedHandler: (event: {userId: number, type: string}) => void;\n    private profileDislikedHandler: (event: {userId: number}) => void;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private application: ApplicationService,\n        private events: Events,\n        private config: ConfigService,\n        private http: SecureHttpService,\n        private alert: AlertController,\n        private translate: TranslateService,\n        private toast: ToastController,\n        private ref: ChangeDetectorRef,\n        private nav: NavController,\n        private loadingCtrl: LoadingController,\n        private api: DataStore)\n    {\n        // -- init callbacks --//\n\n        // configs updated handler\n        this.configsUpdatedHandler = (): void => {\n            this.ref.markForCheck();\n        };\n\n        // profile liked\n        this.profileLikedHandler = (event: {userId: number, type: string}): void =>  {\n            let bookmark = this.bookmarks.find((bookmark: any) => bookmark.markUserId == event.userId);\n\n            if (bookmark) {\n                if (event.type == 'like') {\n                    bookmark.matchActions.type = 'like';\n                }\n                else {\n                    bookmark.matchActions = {};\n                }\n\n                this.ref.markForCheck();\n            }\n        };\n\n        // profile disliked\n        this.profileDislikedHandler = (event: {userId: number}): void => {\n            let bookmark = this.bookmarks.find((bookmark: any) => bookmark.markUserId == event.userId);\n\n            if (bookmark) {\n                bookmark.matchActions.type = 'dislike';\n                this.ref.markForCheck();\n            }\n        };\n\n        // bookmark updated\n        this.bookmarkUpdatedHandler = (): void => {\n            this.searchBookmarks();\n        };\n    }\n\n    /**\n     * Component init\n     */\n     ngOnInit(): void {\n        this.events.subscribe('configs:updated', this.configsUpdatedHandler);\n        this.events.subscribe('profileView:like', this.profileLikedHandler);\n        this.events.subscribe('profileView:dislike', this.profileDislikedHandler);\n        this.events.subscribe('profileView:bookmarkUpdated', this.bookmarkUpdatedHandler);\n\n        this.searchBookmarks();\n    }\n\n    /**\n     * Component destroy\n     */\n    ngOnDestroy(): void {\n        this.events.unsubscribe('configs:updated', this.configsUpdatedHandler);\n        this.events.unsubscribe('profileView:like', this.profileLikedHandler);\n        this.events.unsubscribe('profileView:dislike', this.profileDislikedHandler);\n        this.events.unsubscribe('profileView:bookmarkUpdated', this.bookmarkUpdatedHandler);\n    }\n\n    /**\n     * View rendered\n     */\n    ngAfterViewChecked() {\n        if (this.infiniteScrollNeedComplete) {\n            this.infiniteScrollNeedComplete = false;\n\n            setTimeout(() => {\n                this.infiniteScroll.complete();\n            });\n        }\n    }\n\n    /**\n     * Default local limit\n     */\n    get defaultLocalLimit(): number {\n        return this.api.get('configs', 'bookmarksLocalLimit').value;\n    }\n\n    /**\n     * Get toast duration\n     */\n    get toastDuration(): number {\n        return this.api.get('configs', 'toastDuration').value;\n    }\n\n    /**\n     * Get bookmark list\n     */\n    getBookmarkList(): any[] {\n        return this.bookmarks.slice(0, this.currentLocalLimit);\n    }\n\n    /**\n     * Load more bookmarks\n     */\n    loadMoreBookmarks(): void {\n        if (this.bookmarks.length > this.currentLocalLimit) {\n            this.currentLocalLimit += this.defaultLocalLimit;\n            this.ref.markForCheck();\n            this.infiniteScrollNeedComplete = true;\n\n            return;\n        }\n\n        this.infiniteScroll.enabled = false; //don't show scroll any more\n        this.infiniteScroll.complete();\n    }\n\n    /**\n     * Like user\n     */\n    likeUser(bookmark): void {\n        // show a confirmation window\n        if (!this.application.getAppSetting('user_like_pressed', false)) {\n            let confirm = this.alert.create({\n                enableBackdropDismiss: false,\n                message: this.translate.instant('like_confirmation', {name: bookmark.displayName ? bookmark.displayName : bookmark.userName}),\n                buttons: [{\n                    text: this.translate.instant('cancel'),\n                    handler: () => {\n                        this.application.setAppSetting('user_like_pressed', true);\n                    }\n                },\n                    {\n                        text: this.translate.instant('like'),\n                        handler: () => {\n                            this.application.setAppSetting('user_like_pressed', true);\n                            this.sendLikeRequest(bookmark);\n                        }\n                    }\n                ]\n            });\n\n            confirm.present();\n\n            return;\n        }\n\n        this.sendLikeRequest(bookmark);\n    }\n\n    /**\n     * Unmark\n     */\n     unmark(userId: number): void {\n        let buttons: any[] = [{\n            text: this.translate.instant('no'),\n            handler: () => this.bookmarkList.closeSlidingItems()\n        }, {\n            text: this.translate.instant('yes'),\n            handler: () => this.deleteBookmark(userId)\n        }];\n\n        let confirm = this.alert.create({\n            message: this.translate.instant('delete_bookmark_confirmation'),\n            buttons: buttons\n        });\n\n        confirm.present();\n    }\n\n\n    /**\n     * View profile\n     */\n    viewProfile(userId: number): void {\n        this.nav.push(ProfileViewPage, {\n            userId: userId\n        });\n    }\n\n    /**\n     * Show chat\n     */\n    showChat(userId: number): void {\n        this.nav.push(MessagesPage, {\n            userId: userId\n        });\n    }\n\n    /**\n     * Delete bookmark\n     */\n    private async deleteBookmark(userId: number): Promise<any> {\n        try {\n            // refresh bookmarks array\n            this.bookmarks = this.bookmarks.filter((bookmark: any) => bookmark.markUserId != userId);\n            this.ref.markForCheck();\n\n            let toast = this.toast.create({\n                message: this.translate.instant('profile_removed_from_bookmarks'),\n                closeButtonText: this.translate.instant('ok'),\n                showCloseButton: true,\n                duration: this.toastDuration\n            });\n\n            toast.present();\n\n            await this.http.delete(`${this.config.getApiUrl()}/bookmarks/${userId}/`)\n                .map(res => res.json())\n                .toPromise();\n        }\n        catch (e) {}\n    }\n\n    /**\n     * Send like request\n     */\n    private async sendLikeRequest(bookmark: any): Promise<any> {\n        try {\n            this.bookmarkList.closeSlidingItems();\n\n            let likeParam = {\n                userId: bookmark.markUserId,\n                type: 'like'\n            };\n\n            bookmark.matchActions = likeParam;\n            this.ref.markForCheck();\n\n            // create a new like\n            await this.api.getMapper('matchActions').create(likeParam);\n        }\n        catch (e) {}\n    }\n\n    /**\n     * Search bookmarks\n     */\n    private async searchBookmarks(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            this.pageReady = false;\n            await loader.present();\n\n            let urlParams: string = '?';\n\n            urlParams += 'with[]=avatar&';\n            urlParams += 'with[]=displayName&';\n            urlParams += 'with[]=userName&';\n            urlParams += 'with[]=matchActions';\n\n            // load all bookmarks\n            this.bookmarks = await this.http.get(this.config.getApiUrl() + '/bookmarks/' + urlParams)\n                .map(res => res.json())\n                .toPromise();\n\n            this.currentLocalLimit = this.defaultLocalLimit;\n            this.pageReady = true;\n            this.ref.markForCheck();\n\n            loader.dismiss();\n        }\n        catch (e) {\n            loader.dismiss();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user/bookmarks/index.ts","import { Component, ChangeDetectionStrategy, OnInit, OnDestroy, ChangeDetectorRef, ViewChild, AfterViewChecked } from '@angular/core';\nimport { DataStore } from 'js-data';\nimport { ToastController, List, AlertController, InfiniteScroll, NavController, LoadingController, Events } from 'ionic-angular';\nimport { TranslateService } from 'ng2-translate';\n\n// services\nimport { SecureHttpService } from '../../../services/http/index';\nimport { ConfigService } from '../../../services/config/index';\nimport { ApplicationService } from '../../../services/application/index';\n\n// pages\nimport { ProfileViewPage } from '../../profile/view/index';\nimport { MessagesPage } from '../../messages/index';\n\n@Component({\n    selector: 'guests',\n    templateUrl: 'index.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class GuestsPage implements OnInit, OnDestroy, AfterViewChecked {\n    @ViewChild(InfiniteScroll) infiniteScroll: InfiniteScroll = null;\n    @ViewChild(List) guestList: List;\n\n    private deletedGuests: number[] = [];\n    private pageReady: boolean = false;\n    private guests: any[] = [];\n    private currentLocalLimit: number;\n    private infiniteScrollNeedComplete: boolean = false;\n    private guestsUpdatedHandler: () => void;\n    private profileLikedHandler: (event: {userId: number, type: string}) => void;\n    private profileDislikedHandler: (event: {userId: number}) => void;\n    private configsUpdatedHandler: () => void;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private toast: ToastController,\n        private translate: TranslateService,\n        private alert: AlertController,\n        private application: ApplicationService,\n        private events: Events,\n        private config: ConfigService,\n        private http: SecureHttpService,\n        private nav: NavController,\n        private ref: ChangeDetectorRef,\n        private api: DataStore,\n        private loadingCtrl: LoadingController)\n    {\n        // -- init callbacks --//\n\n        // configs updated handler\n        this.configsUpdatedHandler = (): void => {\n            this.ref.markForCheck();\n        };\n\n        // guests updated handler\n        this.guestsUpdatedHandler = (): void => {\n            this.guests = this.api.filter('guests', {\n                where: {\n                    id: {\n                        'notIn': this.deletedGuests\n                    }\n                },\n                orderBy: [\n                    ['visitTimestamp', 'DESC'],\n                    ['id', 'ASC']\n                ]\n            });\n\n            this.markGuestsAsViewed();\n            this.ref.markForCheck();\n        };\n\n        // profile liked\n        this.profileLikedHandler = (event: {userId: number, type: string}): void =>  {\n            let guest = this.guests.find((guest: any) => guest.guestId == event.userId);\n\n            if (guest) {\n                if (event.type == 'like') {\n                    guest.matchActions.type = 'like';\n                }\n                else {\n                    guest.matchActions = {};\n                }\n\n                this.ref.markForCheck();\n            }\n        };\n\n        // profile disliked\n        this.profileDislikedHandler = (event: {userId: number}): void => {\n            let guest = this.guests.find((guest: any) => guest.guestId == event.userId);\n\n            if (guest) {\n                guest.matchActions.type = 'dislike';\n                this.ref.markForCheck();\n            }\n        };\n    }\n\n    /**\n     * Component init\n     */\n    async ngOnInit(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            this.events.subscribe('configs:updated', this.configsUpdatedHandler);\n            this.events.subscribe('guests:updated', this.guestsUpdatedHandler);\n            this.events.subscribe('profileView:like', this.profileLikedHandler);\n            this.events.subscribe('profileView:dislike', this.profileDislikedHandler);\n\n            await loader.present();\n            this.guests = await this.api.findAll('guests');\n\n            this.currentLocalLimit = this.defaultLocalLimit;\n            this.pageReady = true;\n            this.markGuestsAsViewed();\n\n            this.ref.markForCheck();\n\n            loader.dismiss();\n        }\n        catch (e) {\n            loader.dismiss();\n        }\n    }\n\n    /**\n     * Component destroy\n     */\n    ngOnDestroy(): void {\n        this.events.unsubscribe('configs:updated', this.configsUpdatedHandler);\n        this.events.unsubscribe('guests:updated', this.guestsUpdatedHandler);\n        this.events.unsubscribe('profileView:like', this.profileLikedHandler);\n        this.events.unsubscribe('profileView:dislike', this.profileDislikedHandler);\n    }\n\n    /**\n     * View rendered\n     */\n    ngAfterViewChecked() {\n        if (this.infiniteScrollNeedComplete) {\n            this.infiniteScrollNeedComplete = false;\n\n            setTimeout(() => {\n                this.infiniteScroll.complete();\n            });\n        }\n    }\n\n    /**\n     * Get toast duration\n     */\n    get toastDuration(): number {\n        return this.api.get('configs', 'toastDuration').value;\n    }\n\n    /**\n     * Default local limit\n     */\n    get defaultLocalLimit(): number {\n        return this.api.get('configs', 'guestsLocalLimit').value;\n    }\n\n    /**\n     * Get guest list\n     */\n    getGuestList(): any[] {\n        return this.guests.slice(0, this.currentLocalLimit);\n    }\n\n    /**\n     * Load more guests\n     */\n    loadMoreGuests(): void {\n        if (this.guests.length > this.currentLocalLimit) {\n            this.currentLocalLimit += this.defaultLocalLimit;\n            this.markGuestsAsViewed();\n\n            this.ref.markForCheck();\n            this.infiniteScrollNeedComplete = true;\n\n            return;\n        }\n\n        this.infiniteScroll.enabled = false; //don't show scroll any more\n        this.infiniteScroll.complete();\n    }\n\n    /**\n     * Remove guest confirmation\n     */\n    removeGuestConfirmation(id: number): void {\n        let buttons: any[] = [{\n            text: this.translate.instant('no'),\n            handler: () => this.guestList.closeSlidingItems()\n        }, {\n            text: this.translate.instant('yes'),\n            handler: () => this.deleteGuest(id)\n        }];\n\n        let confirm = this.alert.create({\n            message: this.translate.instant('delete_guest_confirmation'),\n            buttons: buttons\n        });\n\n        confirm.present();\n    }\n\n    /**\n     * View profile\n     */\n    viewProfile(userId: number): void {\n        this.nav.push(ProfileViewPage, {\n            userId: userId\n        });\n    }\n\n    /**\n     * Show chat\n     */\n    showChat(userId: number): void {\n        this.nav.push(MessagesPage, {\n            userId: userId\n        });\n    }\n\n    /**\n     * Like user\n     */\n    likeUser(guest): void {\n        // show a confirmation window\n        if (!this.application.getAppSetting('user_like_pressed', false)) {\n            let confirm = this.alert.create({\n                enableBackdropDismiss: false,\n                message: this.translate.instant('like_confirmation', {name: guest.displayName ? guest.displayName : guest.userName}),\n                buttons: [{\n                    text: this.translate.instant('cancel'),\n                    handler: () => {\n                        this.application.setAppSetting('user_like_pressed', true);\n                    }\n                },\n                    {\n                        text: this.translate.instant('like'),\n                        handler: () => {\n                            this.application.setAppSetting('user_like_pressed', true);\n                            this.sendLikeRequest(guest);\n                        }\n                    }\n                ]\n            });\n\n            confirm.present();\n\n            return;\n        }\n\n        this.sendLikeRequest(guest);\n    }\n\n    /**\n     * Delete guest\n     */\n    private async deleteGuest(id: number): Promise<any> {\n        try {\n            // refresh guests array\n            this.deletedGuests.push(id);\n            this.api.remove('guests', id);\n            this.guests = this.api.filter('guests', {\n                where: {\n                    id: {\n                        'notIn': this.deletedGuests\n                    }\n                },\n                orderBy: [\n                    ['visitTimestamp', 'DESC'],\n                    ['id', 'ASC']\n                ]\n            });\n\n            this.ref.markForCheck();\n\n            let toast = this.toast.create({\n                message: this.translate.instant('profile_removed_from_guests'),\n                closeButtonText: this.translate.instant('ok'),\n                showCloseButton: true,\n                duration: this.toastDuration\n            });\n\n            toast.present();\n\n            await this.api.destroy('guests', id);\n        }\n        catch (e) {}\n    }\n\n    /**\n     * Send like request\n     */\n    private async sendLikeRequest(guest: any): Promise<any> {\n        try {\n            this.guestList.closeSlidingItems();\n\n            let likeParam = {\n                userId: guest.guestId,\n                type: 'like'\n            };\n\n            guest.matchActions = likeParam;\n            this.ref.markForCheck();\n\n            // create a new like\n            await this.api.getMapper('matchActions').create(likeParam);\n        }\n        catch (e) {}\n    }\n\n    /**\n     * Mark guests as viewed\n     */\n    private async markGuestsAsViewed(): Promise<any> {\n        try {\n            let guestsIds: number[] = [];\n\n            this.getGuestList().forEach((guest:any) => {\n                if (!guest.viewed) {\n                    guest.viewed = true;\n                    guestsIds.push(guest.guestId);\n                }\n            });\n\n            if (guestsIds.length) {\n                await this.http.put(`${this.config.getApiUrl()}/guests/`, guestsIds)\n                    .map(res => res.json())\n                    .toPromise();\n            }\n        }\n        catch (e) {}\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user/guests/index.ts","import { Component, OnInit, AfterViewChecked, ViewChild, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { List, AlertController, LoadingController, NavController, InfiniteScroll, Events } from 'ionic-angular';\nimport { DataStore } from 'js-data';\nimport { TranslateService } from 'ng2-translate';\n\n// services\nimport { SecureHttpService } from '../../../services/http/index';\nimport { ConfigService } from '../../../services/config/index';\nimport { ApplicationService } from '../../../services/application/index';\n\n// pages\nimport { ProfileViewPage } from '../../profile/view/index';\nimport { MessagesPage } from '../../messages/index';\n\n@Component({\n    selector: 'compatible-users',\n    templateUrl: 'index.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class CompatibleUsersPage implements OnInit, AfterViewChecked {\n    @ViewChild(InfiniteScroll) infiniteScroll: InfiniteScroll = null;\n    @ViewChild(List) userList: List;\n\n    private users: any[] = [];\n    private pageReady: boolean = false;\n    private currentLocalLimit: number;\n    private infiniteScrollNeedComplete: boolean = false;\n    private configsUpdatedHandler: () => void;\n    private profileLikedHandler: (event: {userId: number, type: string}) => void;\n    private profileDislikedHandler: (event: {userId: number}) => void;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private application: ApplicationService,\n        private events: Events,\n        private config: ConfigService,\n        private http: SecureHttpService,\n        private alert: AlertController,\n        private translate: TranslateService,\n        private ref: ChangeDetectorRef,\n        private nav: NavController,\n        private loadingCtrl: LoadingController,\n        private api: DataStore)\n    {\n        // -- init callbacks --//\n\n        // configs updated handler\n        this.configsUpdatedHandler = (): void => {\n            this.ref.markForCheck();\n        };\n\n        // profile liked\n        this.profileLikedHandler = (event: {userId: number, type: string}): void =>  {\n            console.log('liked');\n            let user = this.users.find((user: any) => user.id == event.userId);\n\n            if (user) {\n                if (event.type == 'like') {\n                    user.matchActions.type = 'like';\n                }\n                else {\n                    user.matchActions = {};\n                }\n\n                this.ref.markForCheck();\n            }\n        };\n\n        // profile disliked\n        this.profileDislikedHandler = (event: {userId: number}): void => {\n            console.log('disliked');\n            let user = this.users.find((user: any) => user.id == event.userId);\n\n            if (user) {\n                user.matchActions.type = 'dislike';\n                this.ref.markForCheck();\n            }\n        };\n    }\n\n    /**\n     * Component init\n     */\n     ngOnInit(): void {\n        this.events.subscribe('configs:updated', this.configsUpdatedHandler);\n        this.events.subscribe('profileView:like', this.profileLikedHandler);\n        this.events.subscribe('profileView:dislike', this.profileDislikedHandler);\n\n        this.searchUsers();\n    }\n\n    /**\n     * Component destroy\n     */\n    ngOnDestroy(): void {\n        this.events.unsubscribe('configs:updated', this.configsUpdatedHandler);\n        this.events.unsubscribe('profileView:like', this.profileLikedHandler);\n        this.events.unsubscribe('profileView:dislike', this.profileDislikedHandler);\n    }\n\n    /**\n     * View rendered\n     */\n    ngAfterViewChecked() {\n        if (this.infiniteScrollNeedComplete) {\n            this.infiniteScrollNeedComplete = false;\n\n            setTimeout(() => {\n                this.infiniteScroll.complete();\n            });\n        }\n    }\n\n    /**\n     * Default local limit\n     */\n    get defaultLocalLimit(): number {\n        return this.api.get('configs', 'compatibleUsersLocalLimit').value;\n    }\n\n    /**\n     * Get user list\n     */\n    getUserList(): any[] {\n        return this.users.slice(0, this.currentLocalLimit);\n    }\n\n    /**\n     * Load more user\n     */\n    loadMoreUsers(): void {\n        if (this.users.length > this.currentLocalLimit) {\n            this.currentLocalLimit += this.defaultLocalLimit;\n            this.ref.markForCheck();\n            this.infiniteScrollNeedComplete = true;\n\n            return;\n        }\n\n        this.infiniteScroll.enabled = false; //don't show scroll any more\n        this.infiniteScroll.complete();\n    }\n\n    /**\n     * View profile\n     */\n    viewProfile(userId: number): void {\n        this.nav.push(ProfileViewPage, {\n            userId: userId\n        });\n    }\n\n    /**\n     * Show chat\n     */\n    showChat(userId: number): void {\n        this.nav.push(MessagesPage, {\n            userId: userId\n        });\n    }\n\n    /**\n     * Like user\n     */\n    likeUser(user): void {\n        // show a confirmation window\n        if (!this.application.getAppSetting('user_like_pressed', false)) {\n            let confirm = this.alert.create({\n                enableBackdropDismiss: false,\n                message: this.translate.instant('like_confirmation', {name: user.displayName ? user.displayName : user.userName}),\n                buttons: [{\n                    text: this.translate.instant('cancel'),\n                    handler: () => {\n                        this.application.setAppSetting('user_like_pressed', true);\n                    }\n                },\n                    {\n                        text: this.translate.instant('like'),\n                        handler: () => {\n                            this.application.setAppSetting('user_like_pressed', true);\n                            this.sendLikeRequest(user);\n                        }\n                    }\n                ]\n            });\n\n            confirm.present();\n\n            return;\n        }\n\n        this.sendLikeRequest(user);\n    }\n\n    /**\n     * Send like request\n     */\n    private async sendLikeRequest(user: any): Promise<any> {\n        try {\n            this.userList.closeSlidingItems();\n\n            let likeParam = {\n                userId: user.id,\n                type: 'like'\n            };\n\n            user.matchActions = likeParam;\n            this.ref.markForCheck();\n\n            // create a new like\n            await this.api.getMapper('matchActions').create(likeParam);\n        }\n        catch (e) {}\n    }\n\n    /**\n     * Search users\n     */\n    private async searchUsers(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            this.pageReady = false;\n            await loader.present();\n\n            let urlParams: string = '?';\n\n            urlParams += 'with[]=avatar&';\n            urlParams += 'with[]=displayName&';\n            urlParams += 'with[]=userName&';\n            urlParams += 'with[]=matchActions';\n\n            // load all users\n            this.users = await this.http.get(this.config.getApiUrl() + '/compatible-users/' + urlParams)\n                .map(res => res.json())\n                .toPromise();\n\n            this.currentLocalLimit = this.defaultLocalLimit;\n            this.pageReady = true;\n            this.ref.markForCheck();\n\n            loader.dismiss();\n        }\n        catch (e) {\n            loader.dismiss();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user/compatibleUsers/index.ts","import { Component, Input, OnInit } from '@angular/core';\nimport { ViewController, LoadingController, NavParams } from 'ionic-angular';\nimport { FormGroup } from '@angular/forms';\nimport { DataStore } from 'js-data';\nimport { TranslateService } from 'ng2-translate';\n\n// questions\nimport { QuestionControlService } from '../../../../../../services/questions/control-service';\nimport { QuestionManager } from '../../../../../../services/questions/manager';\nimport { QuestionBase }  from '../../../../../../services/questions/questions/base';\n\n@Component({\n    selector: 'user-search-filter',\n    templateUrl: 'index.html',\n    providers: [\n        QuestionControlService,\n        QuestionManager\n    ]\n})\nexport class UserSearchFilterComponent implements OnInit {\n    @Input() private questions = <any>[]; // list of questions\n    private sections: any = [];\n    private form: FormGroup;\n    private formReady: boolean = false;\n    private searchFilter: {} = {};\n    private genderList: any[] = [];\n    private allSearchQuestions: any [];\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private translate: TranslateService,\n        private questionControl: QuestionControlService,\n        private questionManager: QuestionManager,\n        private api: DataStore,\n        private loadingCtrl: LoadingController,\n        private viewCtrl: ViewController,\n        private navParams: NavParams)\n    {\n        let filter: {name: string, value: any, type: string}[] = this.navParams.get('filter');\n\n        if (filter.length) {\n            filter.forEach((question) => {\n                this.searchFilter[question.name] = question.value;\n            });\n        }\n    }\n\n    /**\n     * Is photo question active\n     */\n    get isPhotoQuestionActive(): boolean {\n        return this.api.get('configs', 'showWithPhotoOnlyInSearch').value;\n    }\n\n    /**\n     * Is online question active\n     */\n    get isOnlineQuestionActive(): boolean {\n        return this.api.get('configs', 'showOnlineOnlyInSearch').value;\n    }\n\n    /**\n     * Component init\n     */\n    async ngOnInit(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        // load questions\n        try {\n            await loader.present();\n\n            // load all pages dependencies\n            let [searchQuestions, genders, questionsData] = await Promise.all([\n                this.api.getMapper('searchQuestions').findAll({}), // get all search questions (don't cache items),\n                this.api.findAll('userGenders', {}, {force: true}), // force refresh genders\n                this.api.findAll('questionsData'), // get all questions data (cache them)\n            ]);\n\n            this.allSearchQuestions = searchQuestions;\n\n            // process genders\n            genders.forEach((gender) => this.genderList.push({\n                value: gender.id,\n                title: gender.name\n            }));\n\n            // search default preferred account type\n            if (!this.searchFilter['match_sex']) {\n                let preferredAccountType = questionsData.filter((question) => {\n                    return question.name == 'match_sex';\n                });\n\n                this.searchFilter['match_sex'] = preferredAccountType[0]\n                    ? preferredAccountType[0].value[0]\n                    : '';\n            }\n\n            this.initForm();\n            loader.dismiss();\n        }\n        catch (e) {\n            loader.dismiss();\n            this.viewCtrl.dismiss([]);\n        }\n    }\n\n    /**\n     * Dismiss\n     */\n    dismiss(): void {\n        this.viewCtrl.dismiss([]);\n    }\n\n    /**\n     * Close\n     */\n    close(): void {\n        let processedQuestions = [];\n\n        this.questions.forEach((questionData: QuestionBase) => {\n            processedQuestions.push({\n                name: questionData.key,\n                value: this.form.value[questionData.key],\n                type: questionData.controlType\n            });\n        });\n\n        this.viewCtrl.dismiss(processedQuestions);\n    }\n\n    /**\n     * Init form\n     */\n    protected initForm(): void {\n        this.questions = [];\n        this.sections  = [];\n\n        let hardcodedQuestions = {\n            section: this.translate.instant('advanced_search_input_section'),\n            items: []\n        };\n\n        // hardcoded questions list\n        hardcodedQuestions.items.push({\n            type: QuestionManager.TYPE_SELECT,\n            key: 'match_sex',\n            label: this.translate.instant('looking_for_input'),\n            values: this.genderList,\n            validators: [\n                {name: 'require'}\n            ],\n            params: {\n                hideEmptyValue: true\n            }\n        });\n\n        if (this.isOnlineQuestionActive) {\n            hardcodedQuestions.items.push({\n                type: QuestionManager.TYPE_CHECKBOX,\n                key: 'online',\n                label: this.translate.instant('online_input'),\n                value: false\n            });\n        }\n\n        if (this.isPhotoQuestionActive) {\n            hardcodedQuestions.items.push({\n                type: QuestionManager.TYPE_CHECKBOX,\n                key: 'with_photo',\n                label: this.translate.instant('with_photo_input'),\n                value: false\n            });\n        }\n\n        this.processQuestions([hardcodedQuestions]);\n\n        // process search questions\n        if (this.allSearchQuestions[this.searchFilter['match_sex']]\n                && this.allSearchQuestions[this.searchFilter['match_sex']].length) {\n\n            this.processQuestions(this.allSearchQuestions[this.searchFilter['match_sex']]);\n        }\n\n        // register all questions inside a form group\n        this.form = this.questionControl.toFormGroup(this.questions);\n        this.formReady = true;\n\n        // looking for \"match_sex\" changes\n        this.form.valueChanges.subscribe((question: any) => {\n            if (question.match_sex && question.match_sex != this.searchFilter['match_sex']) {\n                this.searchFilter = Object.assign({}, this.searchFilter, question);\n                this.initForm();\n\n                return;\n            }\n\n            this.searchFilter = Object.assign({}, this.searchFilter, question);\n        });\n    }\n\n    /**\n     * Process questions\n     */\n    protected processQuestions(questions: any[]): void {\n        questions.forEach((questionData: any) => {\n            let data = {\n                section: '',\n                questions: []\n            };\n\n            data.section = questionData.section;\n\n            questionData.items.forEach((question: any) => {\n                let questionItem: QuestionBase = this.questionManager.getQuestion(question.type, {\n                    key: question.key,\n                    label: question.label,\n                    values: question.values,\n                    value: this.searchFilter[question.key] ? this.searchFilter[question.key] : question.value\n                }, question.params);\n\n                // add validators\n                if (question.validators) {\n                    questionItem.validators = question.validators;\n                }\n\n                data.questions.push(questionItem);\n                this.questions.push(questionItem);\n            });\n\n            this.sections.push(data);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/dashboard/components/search/components/searchFilter/index.ts","import { NavController, NavParams, LoadingController } from 'ionic-angular';\nimport { DataStore } from 'js-data';\nimport { Component } from '@angular/core';\n\nimport { SecureHttpService } from '../../../../../services/http/index';\nimport { ConfigService } from '../../../../../services/config/index';\nimport { InAppsService} from '../../../../../services/inapps/index';\nimport { ApiUtilsService } from '../../../../../services/api/utils';\nimport { AuthService } from '../../../../../services/auth/index';\n\nimport { DashboardPage } from '../../../../../pages/dashboard/index';\n\n@Component({\n    selector: 'membership',\n    templateUrl: 'index.html',\n})\nexport class ViewMembershipComponent {\n\n    private membership: any = {};\n    private membershipId: any = null;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private api: DataStore,\n        private apiUtils: ApiUtilsService,\n        private auth: AuthService,\n        private config: ConfigService,\n        private http: SecureHttpService,\n        private iaps: InAppsService,\n        private loadingCtrl: LoadingController,\n        private nav: NavController,\n        private navParams: NavParams\n    ){}\n\n    get currency(): string {\n        return this.api.get('configs', 'billingCurrency').value;\n    }\n\n    ngOnInit(): void {\n        this.membershipId = this.navParams.get('mewmbershipId');\n        this.loadMembership();\n    }\n\n    async loadMembership(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n        await loader.present();\n\n        try{\n            let data = await this.http.get(this.config.getApiUrl() + '/memberships/' + this.membershipId + '/')\n                .map(response => response.json())\n                .toPromise();\n\n            let products = await this.iaps.getProducts(data['plans']);\n\n            data['plans'] = data['plans'].filter((el) => {\n                for (let key in products) {\n                    if (el['productId'].toLowerCase() == products[key]['productId']) {\n                        return true;\n                    }\n                }\n                return false;\n            });\n            this.membership = data;\n        } catch (e){\n            loader.dismiss();\n        }\n\n        loader.dismiss();\n    }\n\n    async buyProduct(productId: string): Promise<any> {\n        let loader = this.loadingCtrl.create();\n        await loader.present();\n        try{\n            let result = await this.iaps.buyProduct(productId);\n            if (result.id != -1){\n                this.apiUtils.clearUserData(this.auth.getUserId(), true);\n                this.nav.push(DashboardPage)\n            }\n            loader.dismiss();\n        } catch(e) {\n            loader.dismiss();\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/inapps/components/memberships/viewMembership/index.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app.module';\nimport 'web-animations-js/web-animations.min';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpModule } from '@angular/http';\nimport { Camera } from '@ionic-native/camera';\nimport { Facebook } from '@ionic-native/facebook';\nimport { Keyboard } from '@ionic-native/keyboard';\nimport { Transfer } from '@ionic-native/transfer';\nimport { File } from '@ionic-native/file';\nimport { FilePath } from '@ionic-native/file-path';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { MyApp } from './app.component';\nimport { TranslateModule, MissingTranslationHandler } from 'ng2-translate/ng2-translate';\nimport { AdMob } from '@ionic-native/admob';\nimport { Push } from '@ionic-native/push';\nimport { Device } from '@ionic-native/device';\nimport { PhotoViewer } from '@ionic-native/photo-viewer';\nimport { InAppPurchase } from '@ionic-native/in-app-purchase';\nimport { SwingModule } from 'angular2-swing';\nimport { Events } from 'ionic-angular';\nimport { TranslateService } from 'ng2-translate';\nimport { DataStore } from 'js-data';\nimport { ModalController } from 'ionic-angular';\nimport { MomentModule } from 'angular2-moment';\n\n// pages\nimport { DashboardPage } from '../pages/dashboard/index';\nimport { LoginPage } from '../pages/user/login/index';\nimport { ForgotPasswordCheckEmailPage } from '../pages/user/forgotPassword/checkEmail/index';\nimport { ForgotPasswordCheckCodePage } from '../pages/user/forgotPassword/checkCode/index';\nimport { ForgotPasswordNewPasswordPage } from '../pages/user/forgotPassword/newPassword/index';\nimport { VerifyEmailCheckEmailPage } from '../pages/user/verifyEmail/checkEmail/index';\nimport { VerifyEmailCheckCodePage } from '../pages/user/verifyEmail/checkCode/index';\nimport { JoinInitialPage } from '../pages/user/join/initial/index';\nimport { JoinQuestionsPage } from '../pages/user/join/questions/index';\nimport { AppUrlPage } from '../pages/appUrl/index';\nimport { UserDisapprovedPage } from '../pages/user/disapproved/index';\nimport { AppMaintenancePage } from '../pages/appMaintenance/index';\nimport { EditUserQuestionsPage } from '../pages/user/edit/questions/index';\nimport { EditUserPhotosPage } from '../pages/user/edit/photos/index';\nimport { CompleteProfilePage } from '../pages/user/completeProfile/index';\nimport { CompleteAccountTypePage } from '../pages/user/completeAccountType/index';\nimport { AppConnectionErrorPage } from '../pages/appConnectionError/index';\nimport { AppErrorPage } from '../pages/appError/index';\nimport { ProfileViewPage } from '../pages/profile/view/index';\nimport { ProfilePhotosPage } from '../pages/profile/photos/index';\nimport { InappsPage } from '../pages/inapps/index';\nimport { MessagesPage } from '../pages/messages/index';\nimport { AppSettingsPage } from '../pages/appSettings/index';\nimport { BookmarksPage } from '../pages/user/bookmarks/index';\nimport { GuestsPage } from '../pages/user/guests/index';\nimport { CompatibleUsersPage } from '../pages/user/compatibleUsers/index';\n\n// messages components\nimport { PlainMessageComponent } from '../pages/messages/components/plainMessage/index';\nimport { WinkMessageComponent } from '../pages/messages/components/winkMessage/index';\n\n// tabs components\nimport { MatchedUserPageComponent } from '../pages/dashboard/components/matchedUser/index';\nimport { HotListComponent } from '../pages/dashboard/components/hotList/index';\nimport { TinderComponent } from '../pages/dashboard/components/tinder/index';\nimport { ProfileComponent } from '../pages/dashboard/components/profile/index';\nimport { ConversationsComponent } from '../pages/dashboard/components/conversations/index';\nimport { SearchComponent } from '../pages/dashboard/components/search/index';\nimport { DashboardTabsComponent } from '../pages/dashboard/components/tabs/index';\nimport { UserSearchFilterComponent } from '../pages/dashboard/components/search/components/searchFilter/index';\n\n// inapps components\nimport { MembershipsComponent } from '../pages/inapps/components/memberships/index';\nimport { ViewMembershipComponent } from '../pages/inapps/components/memberships/viewMembership/index';\nimport { CreditsComponent } from '../pages/inapps/components/credits/index';\n\n// shared components\nimport { QuestionComponent } from '../shared/components/question/index';\nimport { AvatarComponent } from '../shared/components/avatar/index';\nimport { LocationAutocompleteComponent } from '../shared/components/locationAutocomplete/index';\nimport { CustomPageComponent } from '../shared/components/customPage/index';\nimport { FlagComponent } from '../shared/components/flag/index';\n\n// shared directives\nimport { AutosizeDirective } from '../shared/directives/autosize/index';\nimport { ChangeFocusByEnterDirective } from '../shared/directives/changeFocusByEnter/index';\n\n// services\nimport { ApplicationService } from '../services/application/index';\nimport { CustomMissingTranslationHandler } from '../services/i18n/index';\nimport { AuthService } from '../services/auth/index';\nimport { ConfigService } from '../services/config/index';\nimport { SecureHttpService } from '../services/http/index';\nimport { apiFactory } from '../services/api/factory';\nimport { ApiUtilsService } from '../services/api/utils';\nimport { questionManagerFactory } from '../services/questions/factory';\nimport { QuestionManager } from '../services/questions/manager';\nimport { AdMobService } from '../services/admob/index';\nimport { PushNotificationsService } from '../services/push/index';\nimport { PermissionsService } from '../services/permissions/index';\nimport { InAppsService } from '../services/inapps/index';\nimport { HttpErrorHandlerService } from '../services/http/errorHandler';\n\n// validators\nimport { Validators } from '../services/questions/validators/index';\nimport { UserEmailValidator } from '../services/questions/validators/userEmail';\nimport { UserNameValidator } from '../services/questions/validators/username';\nimport { RequireValidator } from '../services/questions/validators/require';\nimport { EmailValidator } from '../services/questions/validators/email';\nimport { UrlValidator } from '../services/questions/validators/url';\nimport { MinLengthValidator } from '../services/questions/validators/minLength';\nimport { MaxLengthValidator } from '../services/questions/validators/maxLength';\n\n// server events\nimport { ServerEventsService } from '../services/serverEvents/index';\nimport { ConfigsChannelService } from '../services/serverEvents/channels/configs';\nimport { PermissionsChannelService } from '../services/serverEvents/channels/permissions';\nimport { ConversationsChannelService } from '../services/serverEvents/channels/conversations';\nimport { MatchedUsersChannelService } from '../services/serverEvents/channels/matchedUsers';\nimport { MessagesChannelService } from '../services/serverEvents/channels/messages';\nimport { GuestsChannelService } from '../services/serverEvents/channels/guests';\nimport { HotListChannelService } from '../services/serverEvents/channels/hotList';\n\n// pipes\nimport { NlbrPipe } from '../shared/pipes/nlbr/index';\n\n@NgModule({\n    declarations: [ // register all components\n        MyApp,\n        CompleteProfilePage,\n        CompleteAccountTypePage,\n        AppConnectionErrorPage,\n        AppErrorPage,\n        AppSettingsPage,\n        ProfileViewPage,\n        ProfilePhotosPage,\n        InappsPage,\n        MessagesPage,\n        BookmarksPage,\n        GuestsPage,\n        CompatibleUsersPage,\n        DashboardPage,\n        LoginPage,\n        ForgotPasswordCheckEmailPage,\n        ForgotPasswordCheckCodePage,\n        ForgotPasswordNewPasswordPage,\n        VerifyEmailCheckEmailPage,\n        VerifyEmailCheckCodePage,\n        JoinInitialPage,\n        JoinQuestionsPage,\n        AppUrlPage,\n        UserDisapprovedPage,\n        AppMaintenancePage,\n        EditUserQuestionsPage,\n        EditUserPhotosPage,\n        QuestionComponent,\n        AvatarComponent,\n        LocationAutocompleteComponent,\n        CustomPageComponent,\n        FlagComponent,\n        ProfileComponent,\n        TinderComponent,\n        HotListComponent,\n        MatchedUserPageComponent,\n        PlainMessageComponent,\n        WinkMessageComponent,\n        DashboardTabsComponent,\n        ConversationsComponent,\n        SearchComponent,\n        UserSearchFilterComponent,\n        MembershipsComponent,\n        ViewMembershipComponent ,\n        CreditsComponent,\n        UserSearchFilterComponent,\n        AutosizeDirective,\n        ChangeFocusByEnterDirective,\n        NlbrPipe\n    ],\n    imports: [\n        MomentModule,\n        BrowserModule,\n        BrowserAnimationsModule,\n        HttpModule,\n        SwingModule,\n        IonicModule.forRoot(MyApp, {\n            scrollAssist: false,\n            autoFocusAssist: false\n        }),\n        TranslateModule.forRoot()\n    ],\n    bootstrap: [IonicApp],\n    entryComponents: [ //  components used in router configurations.\n        MyApp,\n        CompleteProfilePage,\n        CompleteAccountTypePage,\n        AppConnectionErrorPage,\n        AppErrorPage,\n        AppSettingsPage,\n        ProfileViewPage,\n        ProfilePhotosPage,\n        InappsPage,\n        ViewMembershipComponent,\n        MessagesPage,\n        BookmarksPage,\n        GuestsPage,\n        CompatibleUsersPage,\n        DashboardPage,\n        LoginPage,\n        JoinInitialPage,\n        JoinQuestionsPage,\n        AppUrlPage,\n        UserDisapprovedPage,\n        AppMaintenancePage,\n        EditUserQuestionsPage,\n        EditUserPhotosPage,\n        ForgotPasswordCheckEmailPage,\n        ForgotPasswordCheckCodePage,\n        ForgotPasswordNewPasswordPage,\n        VerifyEmailCheckEmailPage,\n        VerifyEmailCheckCodePage,\n        JoinInitialPage,\n        LocationAutocompleteComponent,\n        CustomPageComponent,\n        MatchedUserPageComponent,\n        FlagComponent,\n        UserSearchFilterComponent\n    ],\n    providers: [ // make globally registered\n        Camera,\n        Facebook,\n        Keyboard,\n        Transfer,\n        File,\n        FilePath,\n        ConfigService,\n        ApplicationService,\n        AuthService,\n        SecureHttpService,\n        {\n            provide: DataStore,\n            useFactory: apiFactory,\n            deps: [\n                ConfigService,\n                AuthService,\n                TranslateService,\n                Events,\n                HttpErrorHandlerService\n            ]\n        },\n        ApiUtilsService,\n        SecureHttpService,\n        {\n            provide: QuestionManager,\n            useFactory: questionManagerFactory,\n            deps: [\n                ModalController\n            ]\n        },\n        Validators,\n        UserEmailValidator,\n        UserNameValidator,\n        RequireValidator,\n        EmailValidator,\n        AdMob,\n        AdMobService,\n        Push,\n        Device,\n        PushNotificationsService,\n        InAppPurchase,\n        InAppsService,\n        PhotoViewer,\n        PermissionsService,\n        HttpErrorHandlerService,\n        ServerEventsService,\n        ConfigsChannelService,\n        PermissionsChannelService,\n        ConversationsChannelService,\n        MatchedUsersChannelService,\n        MessagesChannelService,\n        GuestsChannelService,\n        HotListChannelService,\n        MinLengthValidator,\n        MaxLengthValidator,\n        UrlValidator,\n        {\n            provide: ErrorHandler,\n            useClass: IonicErrorHandler\n        },\n        {\n            provide: MissingTranslationHandler,\n            useClass: CustomMissingTranslationHandler\n        }\n    ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, Input, ViewChild } from '@angular/core';\nimport { NavParams, NavController, LoadingController, AlertController, Events, ActionSheetController, ModalController, ToastController, Slides } from 'ionic-angular';\nimport { DataStore } from 'js-data';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { TranslateService } from 'ng2-translate';\nimport { PhotoViewer } from '@ionic-native/photo-viewer';\n\n// services\nimport { PermissionsService } from '../../../services/permissions/index';\nimport { AuthService } from '../../../services/auth/index';\nimport { ApplicationService } from '../../../services/application/index';\nimport { SecureHttpService } from '../../../services/http/index';\nimport { ConfigService } from '../../../services/config/index';\nimport { ApiUtilsService } from '../../../services/api/utils';\n\n// pages\nimport { InappsPage } from '../../inapps/index';\nimport { ProfilePhotosPage } from '../../profile/photos/index';\nimport { EditUserQuestionsPage } from '../../../pages/user/edit/questions/index';\nimport { EditUserPhotosPage } from '../../../pages/user/edit/photos/index';\nimport { MessagesPage } from '../../../pages/messages/index';\n\n// animations\nimport { like as likeAnimation, dislike as dislikeAnimation} from '../../../shared/animations/matchActions';\n\n// import shared components\nimport { FlagComponent } from '../../../shared/components/flag/index';\n\n@Component({\n    selector: 'profile-view',\n    templateUrl: 'index.html',\n    animations: [\n        likeAnimation,\n        dislikeAnimation\n    ]\n})\n\nexport class ProfileViewPage {\n    @ViewChild('photosSlider') slider: Slides = null;\n    @Input() public activeComponent: string;\n\n    private inappsPage = InappsPage;\n    private profilePhotosPage = ProfilePhotosPage;\n    private profilePhotosPageNavParams = {};\n    private editUserPhotosPage = EditUserPhotosPage;\n    private userId: number;\n    private user: any;\n    private trackedPhotos: number[] = [];\n    private userPhotos: any[] = [];\n    private userPhotosFetched: boolean = false;\n    private userPhotosCount: number = 0;\n    private isUserBlockStatusChanged: boolean = false;\n    private isUserBlocked: boolean = false;\n    private isUserBookmarked: boolean = false;\n    private isUserBookmarkStatusChanged: boolean = false;\n    private userLikeStatus: string = 'default';\n    private pageIsReady: boolean;\n    private editUserQuestionsPage = EditUserQuestionsPage;\n    private likeDelayHandler: any = null;\n    private likeDelay: number = 1000;\n    private photosLimit: number;\n    private pageWillLeave: boolean = false;\n    private permissionsUpdatedHandler: () => void;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private apiUtils: ApiUtilsService,\n        private config: ConfigService,\n        private http: SecureHttpService,\n        private photoViewer: PhotoViewer,\n        private toast: ToastController,\n        private modalController: ModalController,\n        private actionSheetCtrl: ActionSheetController,\n        private events: Events,\n        private translate: TranslateService,\n        private alert: AlertController,\n        private application: ApplicationService,\n        private nav: NavController,\n        private sanitizer: DomSanitizer,\n        private api: DataStore,\n        private loading: LoadingController,\n        private auth: AuthService,\n        private navParams: NavParams,\n        private permissions: PermissionsService)\n    {\n        this.photosLimit = this.api.get('configs', 'profilePhotosLimit').value;\n        this.userId = this.navParams.get('userId');\n        this.profilePhotosPageNavParams = {\n            userId: this.userId\n        };\n\n        // -- init callbacks --//\n\n        // permissions updated handler\n        this.permissionsUpdatedHandler = (): void => {\n            // show permission denied slide\n            if (this.isViewAllowed && this.user && !this.isViewPhotoAllowed) {\n                this.slider.slideTo(1);\n            }\n\n            // user has not been loaded\n            if ((this.isViewAllowed && !this.user) || (this.isViewPhotoAllowed && !this.userPhotosFetched)) {\n                this.loadUserData();\n\n                return;\n            }\n\n            // user has been already loaded\n            if (this.isViewAllowed && this.user) {\n                this.pageIsReady = true;\n\n                return;\n            }\n        };\n    }\n\n    /**\n     * Get toast duration\n     */\n    get toastDuration(): number {\n        return this.api.get('configs', 'toastDuration').value;\n    }\n\n    /**\n     * Page will enter\n     */\n    ionViewWillEnter(): any {\n        this.pageIsReady = false;\n        this.pageWillLeave = false;\n        this.userPhotosFetched = false;\n\n        // load user data\n        this.events.subscribe('permissions:updated', this.permissionsUpdatedHandler);\n    }\n\n    /**\n     * Page will leave\n     */\n    ionViewWillLeave(): void {\n        this.pageWillLeave = true;\n\n        if (this.isUserBlocked && this.isUserBlockStatusChanged) {\n            this.events.publish('profileView:block', {\n                userId: this.user.id\n            });\n        }\n\n        if (this.isUserBookmarkStatusChanged) {\n            this.events.publish('profileView:bookmarkUpdated', {\n                userId: this.user.id\n            });\n        }\n\n        this.events.unsubscribe('permissions:updated', this.permissionsUpdatedHandler);\n    }\n\n    /**\n     * Page did enter\n     */\n    ionViewDidEnter(): void {\n        this.loadUserData();\n    }\n\n    /**\n     * View photo\n     */\n    viewPhoto(url: string): void {\n        this.photoViewer.show(url);\n    }\n\n    /**\n     * Photos slider did change\n     */\n    photosSliderDidChange(slider: any): void {\n        // track action (photo view)\n        if (!this.isProfileOwner) {\n            if (slider.getActiveIndex()\n                    && slider.getActiveIndex() <= this.userPhotos.length\n                    && !this.trackedPhotos.includes(slider.getActiveIndex())) {\n\n                // track action\n                this.permissions.trackAction('photo', 'view');\n                this.trackedPhotos.push(slider.getActiveIndex());\n            }\n        }\n    }\n\n    /**\n     * Show photo actions\n     */\n    showPhotoActions(photoId: number) {\n        if (!this.isProfileOwner) {\n            let actionSheet = this.actionSheetCtrl.create({\n                buttons: [{\n                    text: this.translate.instant('flag_photo'),\n                    handler: () => {\n                        let modal = this.modalController.create(FlagComponent, {\n                            identityId: photoId,\n                            entityType: 'photo_comments'\n                        });\n\n                        modal.onDidDismiss((status: {reported: boolean}) => {\n                            if (status.reported) {\n                                let toast = this.toast.create({\n                                    message: this.translate.instant('photo_reported'),\n                                    closeButtonText: this.translate.instant('ok'),\n                                    showCloseButton: true,\n                                    duration: this.toastDuration\n                                });\n\n                                toast.present();\n                            }\n                        });\n\n                        modal.present();\n                    }\n                }]\n            });\n\n            actionSheet.present();\n        }\n    }\n\n    /**\n     * Show profile actions\n     */\n    showProfileActions(): void {\n        if (!this.isProfileOwner) {\n            let actionSheet = this.actionSheetCtrl.create({\n                buttons: [{\n                    text: this.translate.instant('flag_profile'),\n                    handler: () => {\n                        let modal = this.modalController.create(FlagComponent, {\n                            identityId: this.user.id,\n                            entityType: 'user_join'\n                        });\n\n                        modal.onDidDismiss((status:{reported: boolean}) => {\n                            if (status.reported) {\n                                let toast = this.toast.create({\n                                    message: this.translate.instant('profile_reported'),\n                                    closeButtonText: this.translate.instant('ok'),\n                                    showCloseButton: true,\n                                    duration: this.toastDuration\n                                });\n\n                                toast.present();\n                            }\n                        });\n\n                        modal.present();\n                    }\n                }, {\n                    text: this.isUserBlocked ? this.translate.instant('unblock_profile') : this.translate.instant('block_profile'),\n                    handler: () => {\n                        // unblock profile\n                        if (this.isUserBlocked) {\n                            this.unblockUser();\n\n                            return;\n                        }\n\n                        // block profile\n                        let confirm = this.alert.create({\n                            message: this.translate.instant('block_profile_confirmation'),\n                            buttons: [\n                                {\n                                    text: this.translate.instant('cancel')\n                                },\n                                {\n                                    text: this.translate.instant('block_profile'),\n                                    handler: () => {\n                                        this.blockUser()\n                                    }\n                                }\n                            ]\n                        });\n\n                        confirm.present();\n                    }\n                }]\n            });\n\n            actionSheet.present();\n        }\n    }\n\n    /**\n     * Bookmark user\n     */\n    async bookmarkUser(): Promise<any> {\n        try {\n            // remove bookmark\n            if (this.isUserBookmarked) {\n                this.isUserBookmarked = false;\n                this.isUserBookmarkStatusChanged = true;\n\n                let toast = this.toast.create({\n                    message: this.translate.instant('profile_removed_from_bookmarks'),\n                    closeButtonText: this.translate.instant('ok'),\n                    showCloseButton: true,\n                    duration: this.toastDuration\n                });\n\n                toast.present();\n\n                // delete bookmark\n                await this.http.delete(`${this.config.getApiUrl()}/bookmarks/${this.user.id}/`)\n                    .map(res => res.json())\n                    .toPromise();\n\n                return;\n            }\n\n            // bookmark profile\n            this.isUserBookmarked = true;\n            this.isUserBookmarkStatusChanged = true;\n\n            let toast = this.toast.create({\n                message: this.translate.instant('profile_added_to_bookmarks'),\n                closeButtonText: this.translate.instant('ok'),\n                showCloseButton: true,\n                duration: this.toastDuration\n            });\n\n            toast.present();\n\n            // create a new bookmark\n            await this.http.post(`${this.config.getApiUrl()}/bookmarks/`, {\n                userId: this.user.id\n            }).map(res => res.json()).toPromise();\n        }\n        catch (e) {}\n    }\n\n    /**\n     * Like user\n     */\n    likeUser(): void {\n        // show a confirmation window\n        if (!this.application.getAppSetting('user_like_pressed', false)) {\n            let confirm = this.alert.create({\n                enableBackdropDismiss: false,\n                message: this.translate.instant('like_confirmation', {name: this.user.realName}),\n                buttons: [{\n                        text: this.translate.instant('cancel'),\n                        handler: () => {\n                            this.application.setAppSetting('user_like_pressed', true);\n                        }\n                    },\n                    {\n                        text: this.translate.instant('like'),\n                        handler: () => {\n                            this.application.setAppSetting('user_like_pressed', true);\n                            this.sendLikeRequest();\n                        }\n                    }\n                ]\n            });\n\n            confirm.present();\n\n            return;\n        }\n\n        this.sendLikeRequest();\n    }\n\n    /**\n     * Dislike user\n     */\n    dislikeUser(): void {\n        if (this.userLikeStatus == 'like') {\n            return;\n        }\n\n        // show a confirmation window\n        if (!Boolean(this.application.getAppSetting('user_dislike_pressed', false))) {\n            let confirm = this.alert.create({\n                enableBackdropDismiss: false,\n                message: this.translate.instant('dislike_confirmation', {name: this.user.realName}),\n                buttons: [{\n                    text: this.translate.instant('cancel'),\n                        handler: () => {\n                            this.application.setAppSetting('user_dislike_pressed', true);\n                        }\n                    },\n                    {\n                        text: this.translate.instant('dislike'),\n                        handler: () => {\n                            this.application.setAppSetting('user_dislike_pressed', true);\n                            this.sendDislikeRequest();\n                        }\n                    }\n                ]\n            });\n\n            confirm.present();\n\n            return;\n        }\n\n        this.sendDislikeRequest();\n    }\n\n    /**\n     * Get compatibility background\n     */\n    getCompatibilityBackground(match: number = 0): SafeStyle {\n        let background = `linear-gradient(to right, rgba(255,255,255,0) 0%, rgba(255,255,255,0) ${match}%, #d8d8d8 ${match}%)`;\n\n        return this.sanitizer.bypassSecurityTrustStyle(background);\n    }\n\n    /**\n     * Return back\n     */\n    returnBack(): void {\n        this.nav.pop();\n    }\n\n    /**\n     * Show chat\n     */\n    showChat(): void {\n        this.nav.push(MessagesPage, {\n            userId: this.user.id\n        });\n    }\n\n    /**\n     * Is view allowed\n     */\n    get isViewAllowed(): boolean {\n        return  this.isProfileOwner || this.permissions.isActionAllowed('base_view_profile');\n    }\n\n    /**\n     * Is view photo allowed\n     */\n    get isViewPhotoAllowed(): boolean {\n        return this.isProfileOwner || this.permissions.isActionAllowed('photo_view');\n    }\n\n    /**\n     * Is profile owner\n     */\n    get isProfileOwner(): boolean {\n        return this.auth.getUserId() == this.userId;\n    }\n\n    /**\n     * Get user relations\n     */\n    protected getUserRelations(): string[] {\n        if (this.isProfileOwner) {\n            this.userPhotosFetched = true;\n\n            return [\n                'avatar',\n                'photos',\n                'viewQuestions',\n                'permissions',\n                'memberships'\n            ];\n        }\n\n        let relations: string[] = [];\n\n        relations.push('avatar');\n        relations.push('compatibility');\n        relations.push('distance');\n        relations.push('matchActions');\n        relations.push('viewQuestions');\n        relations.push('blocks');\n        relations.push('bookmarks');\n\n        if (this.isViewPhotoAllowed) {\n            relations.push('photos');\n            this.userPhotosFetched = true;\n        }\n\n        return relations;\n    }\n\n    /**\n     * Send dislike request\n     */\n    protected sendDislikeRequest(): void {\n        this.events.publish('profileView:dislike', {\n            userId: this.user.id\n        });\n\n        // create a new dislike\n        setTimeout(async ():Promise<any> => {\n            try {\n                await this.api.getMapper('matchActions').create({\n                    userId: this.user.id,\n                    type: 'dislike'\n                });\n            }\n            catch (e) {}\n        }, this.likeDelay);\n\n        this.returnBack();\n    }\n\n    /**\n     * Send like request\n     */\n    protected sendLikeRequest(): void {\n        this.userLikeStatus = this.userLikeStatus == 'like' ? 'default' : 'like';\n\n        this.events.publish('profileView:like', {\n            userId: this.user.id,\n            type: this.userLikeStatus\n        });\n\n        if (this.likeDelayHandler) {\n            clearTimeout(this.likeDelayHandler);\n        }\n\n        // delayed action\n        this.likeDelayHandler = setTimeout(async ():Promise<any> => {\n            try {\n                this.likeDelayHandler = null;\n\n                // delete match action\n                if (this.userLikeStatus == 'default') {\n                    await this.api.getMapper('matchActions').destroy(this.user.id);\n\n                    return;\n                }\n\n                // create a new like\n                await this.api.getMapper('matchActions').create({\n                    userId: this.user.id,\n                    type: 'like'\n                });\n            }\n            catch (e){}\n        }, this.likeDelay);\n    }\n\n    /**\n     * Load user data\n     */\n    protected async loadUserData(): Promise<any> {\n        let loader = this.loading.create();\n\n        try {\n            await loader.present();\n\n            this.userPhotos = [];\n            this.pageIsReady = false;\n\n            if (this.isViewAllowed) {\n                  // clear user's cache data\n                if (this.isProfileOwner) {\n                    this.apiUtils.clearUserData(this.userId, true);\n\n                    this.user = await this.api.find('users', this.userId, { // get user info with relations\n                        params: {\n                            with: this.getUserRelations()\n                        }\n                    });\n                }\n                else {\n                    this.user = await this.api.getMapper('users').find(this.userId, { // get user info with relations and don't cache data\n                        params: {\n                            with: this.getUserRelations()\n                        }\n                    });\n\n                    this.userLikeStatus = this.user.matchActions.type;\n                    this.isUserBlocked  = this.user.blocks.isBlocked;\n                    this.isUserBookmarked = this.user.bookmarks.length > 0;\n                }\n\n                this.pageIsReady = true;\n\n                if (this.user.photos) {\n                    // process photos\n                    this.user.photos.forEach((photo) => {\n                        if (this.isProfileOwner || photo.approved) {\n                            if (this.userPhotos.length < this.photosLimit) {\n                                this.userPhotos.push(photo);\n                            }\n\n                            this.userPhotosCount++;\n                        }\n                    });\n                }\n            }\n\n            loader.dismiss();\n        }\n        catch (e) {\n            loader.dismiss();\n        }\n    }\n\n    /**\n     * Unblock user\n     */\n    protected async unblockUser(): Promise<any> {\n        try {\n            this.isUserBlocked = false;\n\n            let toast = this.toast.create({\n                message: this.translate.instant('profile_unblocked'),\n                closeButtonText: this.translate.instant('ok'),\n                showCloseButton: true,\n                duration: this.toastDuration\n            });\n\n            toast.present();\n\n            this.isUserBlockStatusChanged = true;\n            await this.api.getMapper('blocks').destroy(this.user.id);\n        }\n        catch (e) {}\n    }\n\n    /**\n     * Block user\n     */\n    protected async blockUser(): Promise<any> {\n        try {\n            this.isUserBlocked = true;\n\n            let toast = this.toast.create({\n                message: this.translate.instant('profile_blocked'),\n                closeButtonText: this.translate.instant('ok'),\n                showCloseButton: true,\n                duration: this.toastDuration\n            });\n\n            toast.present();\n\n            this.isUserBlockStatusChanged = true;\n            await this.api.getMapper('blocks').create({\n                userId: this.user.id\n            });\n        }\n        catch (e) {}\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/profile/view/index.ts","import { Component, ViewChild } from '@angular/core';\nimport { Keyboard } from '@ionic-native/keyboard';\nimport { Nav, Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { Globalization } from '@ionic-native/globalization';\nimport { DataStore } from 'js-data';\nimport { Geolocation } from '@ionic-native/geolocation';\n\n// import pages\nimport { DashboardPage } from '../pages/dashboard/index';\nimport { LoginPage } from '../pages/user/login/index';\nimport { AppUrlPage } from '../pages/appUrl/index';\nimport { AppMaintenancePage } from '../pages/appMaintenance/index';\n\n// import services\nimport { ApplicationService } from '../services/application/index';\nimport { AuthService } from '../services/auth/index';\nimport { ConfigService } from '../services/config/index';\n\n@Component({\n    templateUrl: 'app.html',\n    providers: [\n        Globalization,\n        StatusBar,\n        SplashScreen,\n        Geolocation\n    ]\n})\n\nexport class MyApp {\n    @ViewChild(Nav) nav: Nav;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private geolocation: Geolocation,\n        private application: ApplicationService,\n        private keyboard: Keyboard,\n        private platform: Platform,\n        private auth: AuthService,\n        private api: DataStore,\n        private config: ConfigService,\n        private globalization: Globalization,\n        private statusBar: StatusBar,\n        private splashScreen: SplashScreen)\n    {\n        this.initializeApp();\n    }\n\n    /**\n     * Initialize app\n     */\n    async initializeApp(): Promise<any> {\n        try {\n            await this.platform.ready();\n\n            // configure application\n            this.statusBar.styleDefault();\n            this.keyboard.disableScroll(false);\n            this.keyboard.hideKeyboardAccessoryBar(true);\n\n            // check token expiration time\n            this.nav.viewWillEnter.subscribe(() => {\n                if (this.auth.getUserId() && !this.auth.isAuthenticated()) {\n                    this.auth.logout();\n                    this.nav.setRoot(LoginPage);\n                }\n            });\n\n            // in mobile\n            if (this.platform.is('cordova')) {\n                //  get preferred language\n                let lang = await this.globalization.getPreferredLanguage();\n\n                this.application.setAppLanguage(lang.value.split('-')[0]);\n\n                // get current location\n                this.geolocation.getCurrentPosition().then((location: any) => {\n                    this.application.setAppLocation(location.coords.latitude, location.coords.longitude);\n                }).catch(() => {\n                });\n\n                // application url is not defined yet\n                if (!this.config.getApiUrl()) {\n                    this.splashScreen.hide();\n                    this.nav.setRoot(AppUrlPage);\n\n                    return;\n                }\n\n                this.loadDependencies();\n\n                return;\n            }\n\n            // application url is not defined yet\n            if (!this.config.getApiUrl()) {\n                this.splashScreen.hide();\n                this.nav.setRoot(AppUrlPage);\n\n                return;\n            }\n\n            this.loadDependencies();\n        }\n        catch (e) {}\n    }\n\n    /**\n     * Load dependencies\n     */\n    async loadDependencies(): Promise<any> {\n        try {\n            await this.application.loadDependencies();\n            this.splashScreen.hide();\n\n            // redirect to the page\n            if (this.api.get('configs', 'maintenanceMode').value) {\n                this.nav.setRoot(AppMaintenancePage);\n\n                return;\n            }\n\n            this.nav.setRoot(!this.auth.isAuthenticated() ? LoginPage : DashboardPage);\n\n        }\n        catch (e) {}\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","module.exports = {\"id\":\"com.at.theclubb\",\"version\":\"0.0.1\",\"name\":\"At The Club APP\",\"description\":\"At The Club mobile app\",\"authorEmail\":\"info@attheclub.com\",\"authorName\":\"attheclub\",\"authorUrl\":\"https://attheclubb.com\",\"serverUrl\":\"https://attheclubb.com\",\"facebookAppId\":\"156591851548438\",\"googleProjectNumber\":\"1068606795665\",\"play_store_key\":\"\",\"connectionTimeout\":\"40000\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./application.config.json\n// module id = 554\n// module chunks = 0","import { Injectable } from '@angular/core';\nimport { QuestionBase, QuestionBaseOptions, QuestionBaseParams } from './base';\n\nexport class QuestionTextOptions extends QuestionBaseOptions {\n    value: any;\n    values: {value: string | number, title: string}[];\n    key: string;\n    label: string;\n    type: string;\n    validators: {name: string, message?: string, params?: {}}[];\n};\n\nexport class QuestionTextParams extends QuestionBaseParams {\n    questionClass: string;\n    hideErrors: boolean;\n    hideWarning: boolean;\n    stacked: boolean;\n};\n\n@Injectable()\nexport class TextQuestion extends QuestionBase {\n    public controlType = 'text';\n    public stackedInput: boolean = false;\n    public type: string;\n\n    /**\n     * Constructor\n     */\n    constructor(options: QuestionTextOptions, params?: QuestionTextParams) {\n\n        super(options, params);\n\n        this.type = options['type'] || '';\n\n        if (params && params.stacked) {\n            this.stackedInput = true;\n        }\n    }\n\n    /**\n     * Get type\n     */\n    getType(): string {\n        return this.type ? this.type : this.controlType;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/questions/questions/text.ts","import { Injectable } from '@angular/core';\nimport { QuestionBase, QuestionBaseOptions, QuestionBaseParams } from './base';\n\nexport class QuestionSelectOptions extends QuestionBaseOptions {\n    value: any;\n    values: {value: string | number, title: string}[];\n    key: string;\n    label: string;\n    multiple: boolean;\n    validators: {name: string, message?: string, params?: {}}[];\n};\n\nexport class QuestionSelectParams extends QuestionBaseParams {\n    questionClass: string;\n    hideErrors: boolean;\n    hideWarning: boolean;\n    hideEmptyValue: boolean;\n};\n\n@Injectable()\nexport class SelectQuestion extends QuestionBase {\n    public controlType = 'select';\n    public multiple: boolean;\n    public hideEmptyValue: boolean = false;\n\n    /**\n     * Constructor\n     */\n    constructor(options: QuestionSelectOptions, params?: QuestionSelectParams) {\n\n        super(options, params);\n\n        this.multiple = options['multiple'] || false;\n\n        // init extra params\n        if (params) {\n            params.hideEmptyValue\n                ? this.hideEmptyValue = params.hideEmptyValue\n                : false;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/questions/questions/select.ts","import { Injectable } from '@angular/core';\nimport { QuestionBase } from './base';\n\n@Injectable()\nexport class TextareaQuestion extends QuestionBase {\n    public controlType = 'textarea';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/questions/questions/textarea.ts","import { Injectable } from '@angular/core';\nimport { QuestionBase, QuestionBaseOptions, QuestionBaseParams } from './base';\n\nexport class QuestionRangeParams extends QuestionBaseParams {\n    questionClass: string;\n    hideErrors: boolean;\n    hideWarning: boolean;\n    min: number;\n    max: number;\n};\n\n@Injectable()\nexport class RangeQuestion extends QuestionBase {\n    public controlType = 'range';\n    public min = 0;\n    public max = 100;\n\n    /**\n     * Constructor\n     */\n    constructor(options: QuestionBaseOptions, params?: QuestionRangeParams) {\n\n        super(options, params);\n\n        // init extra prams\n        if (params) {\n            params.min\n                ? this.min = params.min\n                : null;\n\n            params.max\n                ? this.max = params.max\n                : null;\n        }\n\n        this.value = Object.assign({}, options.value);\n    }\n\n    /**\n     * On change range\n     */\n    onChangeRange(): void {\n        this.value = this.controlView.value;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/questions/questions/range.ts","import { Injectable } from '@angular/core';\nimport { QuestionBase } from './base';\n\n@Injectable()\nexport class CheckboxQuestion extends QuestionBase {\n    public controlType = 'checkbox';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/questions/questions/checkbox.ts","import { Injectable } from '@angular/core';\nimport { QuestionBaseOptions } from './base';\nimport { DateQuestion, QuestionDateParams } from './date';\n\n@Injectable()\nexport class DateRangeQuestion extends DateQuestion {\n    public controlType = 'date_range';\n    protected questionChanged = false;\n\n    /**\n     * Constructor\n     */\n    constructor(options: QuestionBaseOptions, params?: QuestionDateParams) {\n\n        super(options, params);\n\n        this.value = Object.assign({}, options.value);\n    }\n\n    /**\n     * Update date\n     */\n    update(): void {\n        if (!this.questionChanged) {\n            this.controlView.markAsDirty();\n            this.controlView.markAsTouched();\n            this.questionChanged = true;\n        }\n\n        // trigger manually about update in the question\n        this.controlView.updateValueAndValidity();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/questions/questions/dateRange.ts","import { Injectable } from '@angular/core';\nimport { DataStore } from 'js-data';\n\n@Injectable()\nexport class ApiUtilsService {\n    /**\n     * Constructor\n     */\n    constructor(private api:DataStore) {}\n\n    /**\n     * Clear user data\n     */\n    clearUserData(userId: number, force: boolean = false): void {\n        let cacheLifeTime = parseInt(this.api.get('configs', 'userDataCacheTime').value);\n\n        if (force || cacheLifeTime <= 0) {\n            this.forceClearUserData(userId);\n            this.setUserCacheData(userId, cacheLifeTime);\n\n            return;\n        }\n\n        let userCache = this.api.get('usersCache', userId);\n\n        if (userCache) {\n            // check expiration time\n            if (userCache.willExpire <= Math.floor(Date.now() / 1000)) {\n                this.forceClearUserData(userId);\n                this.setUserCacheData(userId, cacheLifeTime);\n            }\n\n            return;\n        }\n\n        this.setUserCacheData(userId, cacheLifeTime);\n    }\n\n    /**\n     * Set user cache data\n     */\n    protected setUserCacheData(userId: number, cacheLifeTime: number): void {\n        this.api.remove('usersCache', userId);\n        this.api.add('usersCache', {\n            id: userId,\n            willExpire: Math.floor(Date.now() / 1000) + cacheLifeTime\n        });\n    }\n\n    /**\n     * Force clear user data\n     */\n    protected forceClearUserData(userId: number): void {\n        this.api.removeAll('permissions', {userId: userId});\n        this.api.removeAll('photos', {userId: userId});\n        this.api.removeAll('viewQuestions', {userId: userId});\n        this.api.removeAll('searchUsers', {userId: userId});\n        this.api.removeAll('avatars', {userId: userId});\n        this.api.removeAll('matchActions', {userId: userId});\n        this.api.removeAll('compatibilities', {userId: userId});\n        this.api.removeAll('blocks', {userId: userId});\n        this.api.removeAll('memberships', {userId: userId});\n\n        this.api.remove('users', userId);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/api/utils.ts","import { Injectable } from '@angular/core';\nimport { GoogleMapLocationQuestion } from './googlemapLocation';\nimport { QuestionBaseOptions, QuestionBaseParams } from './base';\n\nexport class QuestionExtendedGoogleMapLocationParams extends QuestionBaseParams {\n    questionClass: string;\n    hideErrors: boolean;\n    hideWarning: boolean;\n    min: number;\n    max: number;\n    step: number;\n    unit: string;\n};\n\n@Injectable()\nexport class ExtendedGoogleMapLocationQuestion extends GoogleMapLocationQuestion {\n    public controlType: string = 'extended_googlemap_location';\n    public value: {location: string, distance: number};\n    public min: number = 5;\n    public max: number = 100;\n    public step: number = 10;\n    public unit: string = 'miles';\n\n    /**\n     * Constructor\n     */\n    constructor(options: QuestionBaseOptions, params?: QuestionExtendedGoogleMapLocationParams) {\n\n        super(options, params);\n\n        // init extra prams\n        if (params) {\n            params.min\n                ? this.min = params.min\n                : null;\n\n            params.max\n                ? this.max = params.max\n                : null;\n\n            params.step\n                ? this.step = params.step\n                : null;\n\n            params.unit\n                ? this.unit = params.unit\n                : null;\n        }\n\n        this.value = Object.assign({}, options.value);\n    }\n\n    /**\n     * Get value\n     */\n    protected getValue(): any {\n        return this.value.location;\n    }\n\n    /**\n     * Set value\n     */\n    protected setValue(location: string): void {\n        this.value.location = location;\n        this.controlView.setValue(this.value);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/questions/questions/extendedGooglemapLocation.ts","import { trigger, state, style, transition, animate, keyframes } from '@angular/animations'\n\nexport const dislike = trigger('dislike', [\n    state('default', style({ transform: 'scale(1)' })),\n    state('like', style({ opacity: 0.5, transform: 'scale(0.8)' })),\n    transition('void => like', animate('0')),\n    transition('* => default', animate('.5s linear')),\n    transition('* => like', animate('.5s linear', keyframes([\n        style({ opacity: 1, transform: 'scale(1)', offset: 0}),\n        style({ transform: 'scale(0.4)', offset: 0.5}),\n        style({ transform: 'scale(0.8)', offset: 1})\n    ])))\n]);\n\nexport const like = trigger('like', [\n    state('default', style({ transform: 'scale(1)' })),\n    state('like', style({ transform: 'scale(1.2)' })),\n    transition('void => like', animate('0')),\n    transition('* => default', animate('.5s linear')),\n    transition('* => like', animate('.5s linear', keyframes([\n        style({ opacity: 1, transform: 'scale(1)', offset: 0}),\n        style({ transform: 'scale(1.4)', offset: 0.5}),\n        style({ transform: 'scale(1.2)', offset: 1})\n    ])))\n]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/animations/matchActions.ts","import { Component } from '@angular/core';\nimport { ViewChild } from '@angular/core';\nimport { Slides } from 'ionic-angular';\n\n@Component({\n    selector: 'inapps',\n    templateUrl: 'index.html',\n    providers: [\n    ]\n})\n\nexport class InappsPage {\n    @ViewChild('inappsSlider') slider: Slides;\n    private targetPage: string = 'Memberships'; // id\n\n    /**\n     * Select tab\n     */\n    select(index): void {\n        this.slider.slideTo(index);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/inapps/index.ts","var map = {\n\t\"./af\": 335,\n\t\"./af.js\": 335,\n\t\"./ar\": 336,\n\t\"./ar-dz\": 337,\n\t\"./ar-dz.js\": 337,\n\t\"./ar-kw\": 338,\n\t\"./ar-kw.js\": 338,\n\t\"./ar-ly\": 339,\n\t\"./ar-ly.js\": 339,\n\t\"./ar-ma\": 340,\n\t\"./ar-ma.js\": 340,\n\t\"./ar-sa\": 341,\n\t\"./ar-sa.js\": 341,\n\t\"./ar-tn\": 342,\n\t\"./ar-tn.js\": 342,\n\t\"./ar.js\": 336,\n\t\"./az\": 343,\n\t\"./az.js\": 343,\n\t\"./be\": 344,\n\t\"./be.js\": 344,\n\t\"./bg\": 345,\n\t\"./bg.js\": 345,\n\t\"./bm\": 346,\n\t\"./bm.js\": 346,\n\t\"./bn\": 347,\n\t\"./bn.js\": 347,\n\t\"./bo\": 348,\n\t\"./bo.js\": 348,\n\t\"./br\": 349,\n\t\"./br.js\": 349,\n\t\"./bs\": 350,\n\t\"./bs.js\": 350,\n\t\"./ca\": 351,\n\t\"./ca.js\": 351,\n\t\"./cs\": 352,\n\t\"./cs.js\": 352,\n\t\"./cv\": 353,\n\t\"./cv.js\": 353,\n\t\"./cy\": 354,\n\t\"./cy.js\": 354,\n\t\"./da\": 355,\n\t\"./da.js\": 355,\n\t\"./de\": 356,\n\t\"./de-at\": 357,\n\t\"./de-at.js\": 357,\n\t\"./de-ch\": 358,\n\t\"./de-ch.js\": 358,\n\t\"./de.js\": 356,\n\t\"./dv\": 359,\n\t\"./dv.js\": 359,\n\t\"./el\": 360,\n\t\"./el.js\": 360,\n\t\"./en-au\": 361,\n\t\"./en-au.js\": 361,\n\t\"./en-ca\": 362,\n\t\"./en-ca.js\": 362,\n\t\"./en-gb\": 363,\n\t\"./en-gb.js\": 363,\n\t\"./en-ie\": 364,\n\t\"./en-ie.js\": 364,\n\t\"./en-nz\": 365,\n\t\"./en-nz.js\": 365,\n\t\"./eo\": 366,\n\t\"./eo.js\": 366,\n\t\"./es\": 367,\n\t\"./es-do\": 368,\n\t\"./es-do.js\": 368,\n\t\"./es-us\": 369,\n\t\"./es-us.js\": 369,\n\t\"./es.js\": 367,\n\t\"./et\": 370,\n\t\"./et.js\": 370,\n\t\"./eu\": 371,\n\t\"./eu.js\": 371,\n\t\"./fa\": 372,\n\t\"./fa.js\": 372,\n\t\"./fi\": 373,\n\t\"./fi.js\": 373,\n\t\"./fo\": 374,\n\t\"./fo.js\": 374,\n\t\"./fr\": 375,\n\t\"./fr-ca\": 376,\n\t\"./fr-ca.js\": 376,\n\t\"./fr-ch\": 377,\n\t\"./fr-ch.js\": 377,\n\t\"./fr.js\": 375,\n\t\"./fy\": 378,\n\t\"./fy.js\": 378,\n\t\"./gd\": 379,\n\t\"./gd.js\": 379,\n\t\"./gl\": 380,\n\t\"./gl.js\": 380,\n\t\"./gom-latn\": 381,\n\t\"./gom-latn.js\": 381,\n\t\"./gu\": 382,\n\t\"./gu.js\": 382,\n\t\"./he\": 383,\n\t\"./he.js\": 383,\n\t\"./hi\": 384,\n\t\"./hi.js\": 384,\n\t\"./hr\": 385,\n\t\"./hr.js\": 385,\n\t\"./hu\": 386,\n\t\"./hu.js\": 386,\n\t\"./hy-am\": 387,\n\t\"./hy-am.js\": 387,\n\t\"./id\": 388,\n\t\"./id.js\": 388,\n\t\"./is\": 389,\n\t\"./is.js\": 389,\n\t\"./it\": 390,\n\t\"./it.js\": 390,\n\t\"./ja\": 391,\n\t\"./ja.js\": 391,\n\t\"./jv\": 392,\n\t\"./jv.js\": 392,\n\t\"./ka\": 393,\n\t\"./ka.js\": 393,\n\t\"./kk\": 394,\n\t\"./kk.js\": 394,\n\t\"./km\": 395,\n\t\"./km.js\": 395,\n\t\"./kn\": 396,\n\t\"./kn.js\": 396,\n\t\"./ko\": 397,\n\t\"./ko.js\": 397,\n\t\"./ky\": 398,\n\t\"./ky.js\": 398,\n\t\"./lb\": 399,\n\t\"./lb.js\": 399,\n\t\"./lo\": 400,\n\t\"./lo.js\": 400,\n\t\"./lt\": 401,\n\t\"./lt.js\": 401,\n\t\"./lv\": 402,\n\t\"./lv.js\": 402,\n\t\"./me\": 403,\n\t\"./me.js\": 403,\n\t\"./mi\": 404,\n\t\"./mi.js\": 404,\n\t\"./mk\": 405,\n\t\"./mk.js\": 405,\n\t\"./ml\": 406,\n\t\"./ml.js\": 406,\n\t\"./mr\": 407,\n\t\"./mr.js\": 407,\n\t\"./ms\": 408,\n\t\"./ms-my\": 409,\n\t\"./ms-my.js\": 409,\n\t\"./ms.js\": 408,\n\t\"./mt\": 410,\n\t\"./mt.js\": 410,\n\t\"./my\": 411,\n\t\"./my.js\": 411,\n\t\"./nb\": 412,\n\t\"./nb.js\": 412,\n\t\"./ne\": 413,\n\t\"./ne.js\": 413,\n\t\"./nl\": 414,\n\t\"./nl-be\": 415,\n\t\"./nl-be.js\": 415,\n\t\"./nl.js\": 414,\n\t\"./nn\": 416,\n\t\"./nn.js\": 416,\n\t\"./pa-in\": 417,\n\t\"./pa-in.js\": 417,\n\t\"./pl\": 418,\n\t\"./pl.js\": 418,\n\t\"./pt\": 419,\n\t\"./pt-br\": 420,\n\t\"./pt-br.js\": 420,\n\t\"./pt.js\": 419,\n\t\"./ro\": 421,\n\t\"./ro.js\": 421,\n\t\"./ru\": 422,\n\t\"./ru.js\": 422,\n\t\"./sd\": 423,\n\t\"./sd.js\": 423,\n\t\"./se\": 424,\n\t\"./se.js\": 424,\n\t\"./si\": 425,\n\t\"./si.js\": 425,\n\t\"./sk\": 426,\n\t\"./sk.js\": 426,\n\t\"./sl\": 427,\n\t\"./sl.js\": 427,\n\t\"./sq\": 428,\n\t\"./sq.js\": 428,\n\t\"./sr\": 429,\n\t\"./sr-cyrl\": 430,\n\t\"./sr-cyrl.js\": 430,\n\t\"./sr.js\": 429,\n\t\"./ss\": 431,\n\t\"./ss.js\": 431,\n\t\"./sv\": 432,\n\t\"./sv.js\": 432,\n\t\"./sw\": 433,\n\t\"./sw.js\": 433,\n\t\"./ta\": 434,\n\t\"./ta.js\": 434,\n\t\"./te\": 435,\n\t\"./te.js\": 435,\n\t\"./tet\": 436,\n\t\"./tet.js\": 436,\n\t\"./th\": 437,\n\t\"./th.js\": 437,\n\t\"./tl-ph\": 438,\n\t\"./tl-ph.js\": 438,\n\t\"./tlh\": 439,\n\t\"./tlh.js\": 439,\n\t\"./tr\": 440,\n\t\"./tr.js\": 440,\n\t\"./tzl\": 441,\n\t\"./tzl.js\": 441,\n\t\"./tzm\": 442,\n\t\"./tzm-latn\": 443,\n\t\"./tzm-latn.js\": 443,\n\t\"./tzm.js\": 442,\n\t\"./uk\": 444,\n\t\"./uk.js\": 444,\n\t\"./ur\": 445,\n\t\"./ur.js\": 445,\n\t\"./uz\": 446,\n\t\"./uz-latn\": 447,\n\t\"./uz-latn.js\": 447,\n\t\"./uz.js\": 446,\n\t\"./vi\": 448,\n\t\"./vi.js\": 448,\n\t\"./x-pseudo\": 449,\n\t\"./x-pseudo.js\": 449,\n\t\"./yo\": 450,\n\t\"./yo.js\": 450,\n\t\"./zh-cn\": 451,\n\t\"./zh-cn.js\": 451,\n\t\"./zh-hk\": 452,\n\t\"./zh-hk.js\": 452,\n\t\"./zh-tw\": 453,\n\t\"./zh-tw.js\": 453\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 583;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/moment/locale ^\\.\\/.*$\n// module id = 583\n// module chunks = 0","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef, OnInit, OnDestroy } from '@angular/core';\nimport { ActionSheetController, AlertController, NavController, Events } from 'ionic-angular';\nimport { TranslateService } from 'ng2-translate';\nimport { DataStore } from 'js-data';\nimport { PhotoViewer } from '@ionic-native/photo-viewer';\n\n// services\nimport { PermissionsService } from '../../../../services/permissions/index';\nimport { PhotoUploaderService } from '../../../../services/photoUploader/index';\nimport { ConfigService } from '../../../../services/config/index';\n\n// pages\nimport { InappsPage } from '../../../../pages/inapps/index';\n\n@Component({\n    selector: 'plain-message',\n    templateUrl: 'index.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        PhotoUploaderService\n    ]\n})\n\nexport class PlainMessageComponent implements OnInit, OnDestroy {\n    @Input() message: any;\n    @Input() prevMessage: any;\n    @Output() messageDeleted: EventEmitter<any> = new EventEmitter();\n    @Output() messageDelivered: EventEmitter<any> = new EventEmitter();\n    @Output() messageTracked: EventEmitter<any> = new EventEmitter();\n\n    private isMessageOpening: boolean = false;\n    private isSendingInProcess: boolean = false;\n    private messageSendFailedHandler: () => void;\n    private permissionsUpdatedHandler: () => void;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private ref: ChangeDetectorRef,\n        private events: Events,\n        private photoViewer: PhotoViewer,\n        private config: ConfigService,\n        private photoUploader: PhotoUploaderService,\n        private permissions: PermissionsService,\n        private nav: NavController,\n        private api: DataStore,\n        private alert: AlertController,\n        private actionSheetCtrl: ActionSheetController,\n        private translate: TranslateService)\n    {\n        // -- init callbacks --//\n\n        // send message failed handler\n        this.messageSendFailedHandler = (): void => {\n            this.ref.markForCheck();\n        };\n\n        // permissions updated handler\n        this.permissionsUpdatedHandler = (): void => {\n            this.ref.markForCheck();\n        };\n    }\n\n    /**\n     * Component init\n     */\n     ngOnInit(): void {\n        this.events.subscribe('message:sendFailed', this.messageSendFailedHandler);\n        this.events.subscribe('permissions:updated', this.permissionsUpdatedHandler);\n\n    }\n\n    /**\n     * Component destroy\n     */\n    ngOnDestroy(): void {\n        this.events.unsubscribe('message:sendFailed', this.messageSendFailedHandler);\n        this.events.unsubscribe('permissions:updated', this.permissionsUpdatedHandler);\n    }\n\n    /**\n     * Show message\n     */\n    async showMessage(): Promise<any> {\n        try {\n            this.isMessageOpening = true;\n\n            await this.api.find('messages', this.message.id, {\n                force: true,\n                forceHandleError: true\n            });\n\n            this.messageTracked.emit(this.message.id);\n        }\n        catch (e) {\n        }\n        finally {\n            this.isMessageOpening = false;\n        }\n    }\n\n    /**\n     * Is read message allowed\n     */\n    get isReadMessageAllowed(): boolean {\n        return this.message.wasAuthorized\n            || this.permissions.isActionAllowed('mailbox_read_chat_message');\n    }\n\n    /**\n     * Is read message allowed after tracking\n     */\n    get isReadMessageAllowedAfterTracking(): boolean {\n        return this.permissions.isAllowedAfterTracking('mailbox_read_chat_message');\n    }\n\n    /**\n     * Is read message promoted\n     */\n    get isReadMessagePromoted(): boolean {\n        return this.permissions.isActionPromoted('mailbox_read_chat_message');\n    }\n\n    /**\n     * Show purchases page\n     */\n    showPurchasesPage(): void {\n        this.nav.push(InappsPage);\n    }\n\n    /**\n     * View photo\n     */\n    viewPhoto(url: string): void {\n        this.photoViewer.show(url);\n    }\n\n    /**\n     * Show message action\n     */\n    showMessageActions(): void {\n        let buttons: any[] = [];\n\n        // delete message\n        buttons.push({\n            text: this.translate.instant('delete_message'),\n            handler: () => {\n                let buttons: any[] = [{\n                    text: this.translate.instant('no')\n                }, {\n                    text: this.translate.instant('yes'),\n                    handler: () => this.deleteMessage()\n                }];\n\n                let confirm = this.alert.create({\n                    message: this.translate.instant('delete_message_confirmation'),\n                    buttons: buttons\n                });\n\n                confirm.present();\n            }\n        });\n\n        // resend message\n        buttons.push({\n            text: this.translate.instant('resend_message'),\n            handler: () => this.resendMessage()\n        });\n\n        let actionSheet = this.actionSheetCtrl.create({\n            subTitle: this.message.notDeliveredDesc ? this.message.notDeliveredDesc : '',\n            buttons: buttons\n        });\n\n        actionSheet.present();\n    }\n\n    /**\n     * Delete message\n     */\n    protected deleteMessage(): void {\n        this.api.remove('messages', this.message.id);\n        this.ref.markForCheck();\n\n        this.messageDeleted.emit(this.message.id);\n    }\n\n    /**\n     * Resend message\n     */\n    protected resendMessage(): void {\n        if (!this.message.attachments.length) {\n            this.resendTextMessage();\n\n            return;\n        }\n\n        // get not delivered photo\n        let photo: any = this.message.attachments[0];\n\n        this.resendPhotoMessage(photo.fileName, photo.downloadUrl);\n    }\n\n    /**\n     * Resend text message\n     */\n    protected async resendTextMessage(): Promise<any> {\n        try {\n            this.message.deliverInProcess = true;\n            this.isSendingInProcess = true;\n            this.ref.markForCheck();\n\n            let newMessage: any = await this.api.create('messages', {\n                opponentId: this.message.opponentId,\n                text: this.message.text,\n                conversationId: this.message.conversationId,\n                timeStamp: this.message.timeStamp\n            });\n\n            this.deleteMessage();\n            this.messageDelivered.emit(newMessage);\n            this.isSendingInProcess = false;\n            this.ref.markForCheck();\n        }\n        catch (e) {\n            this.message.deliverInProcess = false;\n            this.isSendingInProcess = false;\n            this.ref.markForCheck();\n\n            // update error description\n            if (e.response && e.response.data) {\n                let errorDescription: string = e.response.data.shortDescription;\n\n                if (errorDescription) {\n                    this.message.notDeliveredDesc = errorDescription;\n\n                    return;\n                }\n\n                this.message.notDeliveredDesc = '';\n            }\n\n            this.ref.markForCheck();\n        }\n    }\n\n    /**\n     * Resend photo message\n     */\n    protected resendPhotoMessage(imageName: string, imagePath: string): void {\n        this.message.deliverInProcess = true;\n        this.isSendingInProcess = true;\n        this.ref.markForCheck();\n\n        // init photo uploader\n        this.photoUploader.url =  this.config.getApiUrl() + '/mailbox/photo-messages/?';\n        this.photoUploader.url += `opponentId=${this.message.opponentId}&`;\n        this.photoUploader.url += `conversationId=${this.message.conversationId}&`;\n\n        // photo successfully uploaded\n        this.photoUploader.successUploadCallback = (newMessage: any) => {\n            newMessage = JSON.parse(newMessage);\n\n            this.deleteMessage();\n            this.api.add('messages', newMessage);\n            this.isSendingInProcess = false;\n            this.ref.markForCheck();\n\n            this.messageDelivered.emit(newMessage);\n        };\n\n        // uploading failed\n        this.photoUploader.errorUploadCallback = (error: {type: string, message: string}) => {\n            this.message.deliverInProcess = false;\n            this.isSendingInProcess = false;\n            this.ref.markForCheck();\n\n            // update error description\n            if (error.message) {\n                let errorParams: any = JSON.parse(error.message);\n\n                if (errorParams.shortDescription) {\n                    this.message.notDeliveredDesc = errorParams.shortDescription;\n\n                    return;\n                }\n\n                this.message.notDeliveredDesc = '';\n            }\n\n            this.ref.markForCheck();\n        };\n\n        // trying to upload photo\n        this.photoUploader.uploadImage(imageName, imagePath);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/messages/components/plainMessage/index.ts","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n    selector: 'wink-message',\n    templateUrl: 'index.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class WinkMessageComponent {\n    @Input() message: any;\n    @Input() prevMessage: any;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/messages/components/winkMessage/index.ts","import { Component, ChangeDetectionStrategy, Input, OnInit, OnDestroy } from '@angular/core';\nimport { ChangeDetectorRef, ViewChild, AfterViewInit } from '@angular/core';\nimport { DataStore } from 'js-data';\nimport { Scroll, NavController, Events, AlertController, ToastController, LoadingController } from 'ionic-angular';\nimport { TranslateService } from 'ng2-translate';\n\n// pages\nimport { ProfileViewPage } from '../../../profile/view/index';\n\n// services\nimport { PermissionsService } from '../../../../services/permissions/index';\nimport { AuthService } from '../../../../services/auth/index';\n\n@Component({\n    selector: 'hot-list',\n    templateUrl: 'index.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class HotListComponent implements OnInit, OnDestroy, AfterViewInit {\n    @Input() public activeComponent: string;\n    @ViewChild('hotListScroll') scroll: Scroll;\n\n    private userHotList: any;\n    private currentLocalLimit: number;\n    private searchInProgress: boolean = true;\n    private isUserInList: boolean = false;\n    private clearScrollHandler: any;\n    private configsUpdatedHandler: () => void;\n    private permissionsUpdatedHandler: () => void;\n    private hotListUpdatedHandler: () => void;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private loadingCtrl: LoadingController,\n        private toast: ToastController,\n        private translate: TranslateService,\n        private alert: AlertController,\n        private permissions: PermissionsService,\n        private events: Events,\n        private nav: NavController,\n        private auth: AuthService,\n        private api: DataStore,\n        private ref: ChangeDetectorRef)\n    {\n        // -- init callbacks --//\n\n        // configs updated handler\n        this.configsUpdatedHandler = (): void => {\n            this.ref.markForCheck();\n        };\n\n        // permissions updated handler\n        this.permissionsUpdatedHandler = (): void => {\n            this.ref.markForCheck();\n        };\n\n        // hot list updated handler\n        this.hotListUpdatedHandler = (): void => {\n            this.ref.markForCheck();\n        };\n    }\n\n    /**\n     * Component init\n     */\n    async ngOnInit(): Promise<any> {\n        try {\n            // config updated\n            this.events.subscribe('configs:updated', this.configsUpdatedHandler);\n\n            // permissions updated\n            this.events.subscribe('permissions:updated', this.permissionsUpdatedHandler);\n\n            // hot list updated\n            this.events.subscribe('hotList:updated', this.hotListUpdatedHandler);\n\n            await this.api.findAll('hotListUsers');\n            this.searchInProgress = false;\n            this.currentLocalLimit = this.defaultLocalLimit;\n\n            // check current user in hot list\n            let currentUser = this.api.filter('hotListUsers', {\n                where: {\n                    userId: this.auth.getUserId()\n                }\n            });\n\n            if (currentUser.length) {\n                this.userHotList = currentUser[0];\n                this.isUserInList = true;\n            }\n\n            this.ref.markForCheck();\n        }\n        catch (e) {}\n    }\n\n    /**\n     * After view init\n     */\n    ngAfterViewInit() {\n        // load more users while scrolling\n        this.clearScrollHandler = this.scroll.addScrollEventListener(() => {\n            let scrollTop: number = this.scroll._scrollContent.nativeElement.scrollTop;\n            let clientHeight: number = this.scroll._scrollContent.nativeElement.clientHeight;\n            let scrollHeight: number = this.scroll._scrollContent.nativeElement.scrollHeight;\n\n            if (scrollTop + clientHeight >= scrollHeight - this.scrollThreshold) {\n                if (this.isCheckLoadMoreActive) {\n                    this.loadMoreUsers();\n                }\n            }\n        });\n    }\n\n    /**\n     * Component destroy\n     */\n    ngOnDestroy(): void {\n        this.events.unsubscribe('configs:updated', this.configsUpdatedHandler);\n        this.events.unsubscribe('permissions:updated', this.permissionsUpdatedHandler);\n        this.events.unsubscribe('hotList:updated', this.hotListUpdatedHandler);\n\n        if (this.clearScrollHandler) {\n            this.clearScrollHandler();\n        }\n    }\n\n    /**\n     * Get toast duration\n     */\n    get toastDuration(): number {\n        return this.api.get('configs', 'toastDuration').value;\n    }\n\n    /**\n     * Is hot list join allowed\n     */\n    get isHotListJoinAllowed(): boolean {\n        return this.permissions.isActionAllowed('hotlist_add_to_list');\n    }\n\n    /**\n     * Is hot list join promoted\n     */\n    get isHotListJoinPromoted(): boolean {\n        return this.permissions.isActionPromoted('hotlist_add_to_list');\n    }\n\n    /**\n     * Current user\n     */\n    get currentUser(): any {\n        return this.api.get('users', this.auth.getUserId()); // get logged user data\n    }\n\n    /**\n     * Get scroll threshold\n     */\n    get scrollThreshold(): number {\n        return this.api.get('configs', 'scrollThreshold').value;\n    }\n\n    /**\n     * Get default local limit\n     */\n    get defaultLocalLimit(): number {\n        return this.api.get('configs', 'hotListLocalLimit').value;\n    }\n\n    /**\n     * Get users length\n     */\n    get usersLength(): number {\n        return this.api.getAll('hotListUsers').length;\n    }\n\n    /**\n     * Get user list\n     */\n    getUserList(): any[] {\n        return this.api.filter('hotListUsers', {\n            limit: this.currentLocalLimit,\n            orderBy: [\n                ['timestamp', 'DESC']\n            ]});\n    }\n\n    /**\n     * Join to hot list\n     */\n    joinToHotList(): void {\n        if (this.isHotListJoinPromoted) {\n            this.permissions.showAccessDeniedAlert();\n\n            return;\n        }\n\n        let actionPrice: number = this.permissions.getActionPrice('hotlist_add_to_list');\n\n        // show confirmation window\n        if (actionPrice < 0) {\n            let avatarButtons: any[] = [{\n                text: this.translate.instant('no')\n            }, {\n                text: this.translate.instant('yes'),\n                handler: () => this.sendJoinToHotListRequest()\n            }];\n\n            let confirm = this.alert.create({\n                message: this.translate.instant('hot_list_join_confirmation', {\n                    count: Math.abs(actionPrice)\n                }),\n                buttons: avatarButtons\n            });\n\n            confirm.present();\n\n            return;\n        }\n\n        this.sendJoinToHotListRequest();\n    }\n\n    /**\n     * Remove from hot list\n     */\n    async removeFromHotList(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            await loader.present();\n            await this.api.destroy('hotListUsers', this.userHotList.id);\n            this.userHotList = {};\n\n            this.isUserInList = false;\n            this.ref.markForCheck();\n\n            loader.dismiss();\n        }\n        catch (e) {\n            loader.dismiss();\n        }\n    }\n\n    /**\n     * Load more users\n     */\n    async loadMoreUsers(): Promise<any> {\n        // load from a local list\n        this.currentLocalLimit += this.defaultLocalLimit;\n        this.ref.markForCheck();\n    }\n\n    /**\n     * View profile\n     */\n    viewProfile(user: any): void {\n        this.nav.push(ProfileViewPage, {\n            userId: user.userId\n        });\n    }\n\n    /**\n     * Send join to hot list request\n     */\n    private async sendJoinToHotListRequest(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            await loader.present();\n            this.userHotList = await this.api.create('hotListUsers', {});\n\n            this.isUserInList = true;\n            this.ref.markForCheck();\n\n            let actionPrice: number = this.permissions.getActionPrice('hotlist_add_to_list');\n\n            if (actionPrice) {\n                let toast = this.toast.create({\n                    message: actionPrice > 0\n                        ? this.translate.instant('increase_credits_notification', {count: actionPrice})\n                        : this.translate.instant('decrease_credits_notification', {count: Math.abs(actionPrice)}),\n                    closeButtonText: this.translate.instant('ok'),\n                    showCloseButton: true,\n                    duration: this.toastDuration\n                });\n\n                toast.present();\n            }\n\n            loader.dismiss();\n        }\n        catch (e) {\n            loader.dismiss();\n        }\n    }\n\n    /**\n     * Is check load more active\n     */\n    private get isCheckLoadMoreActive(): boolean {\n        if (this.activeComponent == 'search'\n            && this.usersLength >= this.currentLocalLimit && this.currentLocalLimit) {\n\n            return true;\n        }\n\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/dashboard/components/hotList/index.ts","import { Component, ChangeDetectionStrategy, Input, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { StackConfig, Direction } from 'angular2-swing';\nimport { Events, NavController, AlertController } from 'ionic-angular';\nimport { DataStore } from 'js-data';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { TranslateService } from 'ng2-translate';\nimport { trigger, state, style, transition, animate } from '@angular/animations'\n\n// services\nimport { PermissionsService } from '../../../../services/permissions/index';\nimport { AuthService } from '../../../../services/auth/index';\nimport { SecureHttpService } from '../../../../services/http/index';\nimport { ConfigService } from '../../../../services/config/index';\nimport { ApplicationService } from '../../../../services/application/index';\n\n// pages\nimport { InappsPage } from '../../../../pages/inapps/index';\nimport { ProfileViewPage } from '../../../profile/view/index';\n\n@Component({\n    selector: 'tinder',\n    templateUrl: 'index.html',\n    animations: [\n        trigger('removed', [\n            state('remove', style({ opacity: 0 })),\n            transition('* => remove', animate('.5s linear')),\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class TinderComponent implements OnInit, OnDestroy {\n    @Input() public activeComponent: string;\n\n    private removeCardDelay: number = 500;\n    private inappsPage = InappsPage;\n    private searchInProgress: boolean = false;\n    private cards: any[] = [];\n    private stackConfig: StackConfig;\n    private throwOutDistance: number = 800;\n    private permissionsUpdatedHandler: () => void;\n    private avatarUpdatedHandler: () => void;\n    private avatarDeletedHandler: () => void;\n    private timeoutHandler: any;\n    private profileUpdatedHandler: () => void;\n    private configsUpdatedHandler: () => void;\n    private profileLikedHandler: () => void;\n    private profileDislikedHandler: () => void;\n    private profileBlockedHandler: () => void;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private translate: TranslateService,\n        private alert: AlertController,\n        private nav: NavController,\n        private sanitizer: DomSanitizer,\n        private application: ApplicationService,\n        private config: ConfigService,\n        private http: SecureHttpService,\n        private auth: AuthService,\n        private api: DataStore,\n        private events: Events,\n        private permissions: PermissionsService,\n        private ref: ChangeDetectorRef)\n    {\n        // full list of options: https://github.com/gajus/swing#configuration\n        this.stackConfig = {\n            // a value between 0 and 1 indicating the completeness of the throw out condition.\n            throwOutConfidence: (offsetX, offsetY, element) => {\n                return this.isCardThrowAllowed()\n                    ? Math.min(Math.abs(offsetX) / (element.offsetWidth/2), 1)\n                    : 0;\n            },\n            throwOutDistance: () => this.throwOutDistance\n        };\n\n        // -- init callbacks --//\n\n        // permissions updated handler\n        this.permissionsUpdatedHandler = (): void => {\n            // make users search\n            if (this.isSearchAllowed) {\n                this.searchUsers();\n            }\n\n            this.ref.markForCheck();\n        };\n\n        // avatar updated handler\n        this.avatarUpdatedHandler = (): void => {\n            this.ref.markForCheck();\n        };\n\n        // avatar deleted handler\n        this.avatarDeletedHandler = (): void => {\n            this.ref.markForCheck();\n        };\n\n        // profile updated handler\n        this.profileUpdatedHandler = (): void => {\n            if (this.isSearchAllowed) {\n                this.searchUsers(true);\n            }\n\n            this.ref.markForCheck();\n        };\n\n        // configs updated handler\n        this.configsUpdatedHandler = (): void => {\n            this.ref.markForCheck();\n        };\n\n        // profile liked\n        this.profileLikedHandler = (): void =>  {\n            this.likeUser(false, false);\n        };\n\n        // profile disliked\n        this.profileDislikedHandler = (): void => {\n            this.dislikeUser(false, false);\n        };\n\n        // profile blocked\n        this.profileBlockedHandler = (): void => {\n            this.dislikeUser(false, false);\n        };\n    }\n\n    /**\n     * Component init\n     */\n    ngOnInit(): void {\n        if (this.isSearchAllowed) {\n            this.searchUsers();\n        }\n\n        // config updated\n        this.events.subscribe('configs:updated', this.configsUpdatedHandler);\n\n        // profile updated\n        this.events.subscribe('user:updated', this.profileUpdatedHandler);\n\n        // permissions updated\n        this.events.subscribe('permissions:updated', this.permissionsUpdatedHandler);\n\n        // avatar updated\n        this.events.subscribe('user:avatarUpdated', this.avatarUpdatedHandler);\n\n        // avatar deleted\n        this.events.subscribe('user:avatarDeleted', this.avatarDeletedHandler);\n\n        // profile has been liked\n        this.events.subscribe('profileView:like', this.profileLikedHandler);\n\n        // profile has been disliked\n        this.events.subscribe('profileView:dislike', this.profileDislikedHandler);\n\n        // profile has been blocked\n        this.events.subscribe('profileView:block', this.profileBlockedHandler);\n    }\n\n    /**\n     * Component destroy\n     */\n    ngOnDestroy(): void {\n        this.events.unsubscribe('configs:updated', this.configsUpdatedHandler);\n        this.events.unsubscribe('user:updated', this.profileUpdatedHandler);\n        this.events.unsubscribe('permissions:updated', this.permissionsUpdatedHandler);\n        this.events.unsubscribe('user:avatarUpdated', this.avatarUpdatedHandler);\n        this.events.unsubscribe('user:avatarDeleted', this.avatarDeletedHandler);\n        this.events.unsubscribe('profileView:like', this.profileLikedHandler);\n        this.events.unsubscribe('profileView:dislike', this.profileDislikedHandler);\n        this.events.unsubscribe('profileView:block', this.profileBlockedHandler);\n\n        // clear timeout\n        if (this.timeoutHandler) {\n            clearTimeout(this.timeoutHandler);\n        }\n    }\n\n    /**\n     * current user\n     */\n    get currentUser(): any {\n        return this.api.get('users', this.auth.getUserId()); // get logged user data\n    }\n\n    /**\n     * Is search allowed\n     */\n    get isSearchAllowed(): boolean {\n        return this.permissions.isActionAllowed('base_search_users');\n    }\n\n    /**\n     * Get users limit\n     */\n    get usersLimit(): number {\n        return this.api.get('configs', 'tinderUsersLimit').value;\n    }\n\n    /**\n     * Search timeout\n     */\n    get searchTimeout(): number {\n        return this.api.get('configs', 'tinderSearchTimeout').value;\n    }\n\n    /**\n     * Tinder card moving\n     */\n    tinderCardMoving(event: any): void {\n        let card: any = this.cards[this.cards.length - 1];\n\n        if (event.throwDirection == Direction.LEFT || event.throwDirection == Direction.RIGHT) {\n            card.swipeDirection = event.throwDirection == Direction.LEFT ? 'left' : 'right';\n            this.ref.markForCheck();\n\n            return;\n        }\n\n        this.ref.markForCheck();\n        card.swipeDirection = '';\n    }\n\n    /**\n     * Tinder card stop moving\n     */\n    tinderCardStopMoving(): void {\n        let card: any = this.cards[this.cards.length - 1];\n\n        if (card && !this.isCardThrowAllowed()) {\n            switch (card.swipeDirection) {\n                case 'left' :\n                    this.dislikeConfirmation(card, !Boolean(this.application.getAppSetting('user_dislike_pressed', false)));\n                    break;\n\n                case 'right' :\n                    this.likeConfirmation(card, !Boolean(this.application.getAppSetting('user_like_pressed', false)));\n                    break;\n\n                default :\n            }\n        }\n\n        if (card) {\n            card.swipeDirection = '';\n            this.ref.markForCheck();\n        }\n    }\n\n    /**\n     * Like user\n     */\n    likeUser(sendRequest: boolean = true, showAnimation: boolean = true): void {\n        if (!showAnimation) {\n            let card = this.cards.pop();\n            this.ref.markForCheck();\n\n            if (sendRequest) {\n                this.sendLikeRequest(card);\n            }\n\n            this.searchUsers();\n\n            return;\n        }\n\n        let card = this.cards[this.cards.length - 1];\n\n        if (card.status != 'remove') {\n            card.status = 'remove';\n            this.ref.markForCheck();\n\n            if (sendRequest) {\n                this.sendLikeRequest(card);\n            }\n\n            // remove card\n            setTimeout(() => {\n                this.cards.pop();\n                this.ref.markForCheck();\n                this.searchUsers();\n            }, this.removeCardDelay);\n        }\n    }\n\n    /**\n     * Dislike user\n     */\n    dislikeUser(sendRequest: boolean = true, showAnimation: boolean = true): void {\n        if (!showAnimation) {\n            let card = this.cards.pop();\n            this.ref.markForCheck();\n\n            if (sendRequest) {\n                this.sendDislikeRequest(card);\n            }\n\n            this.searchUsers();\n\n            return;\n        }\n\n        let card = this.cards[this.cards.length - 1];\n\n        if (card.status != 'remove') {\n            card.status = 'remove';\n            this.ref.markForCheck();\n\n            if (sendRequest) {\n                this.sendDislikeRequest(card);\n            }\n\n            // remove card\n            setTimeout(() => {\n                this.cards.pop();\n                this.ref.markForCheck();\n                this.searchUsers();\n            }, this.removeCardDelay);\n        }\n    }\n\n    /**\n     * View profile\n     */\n    viewProfile(userId: number): void {\n        this.nav.push(ProfileViewPage, {\n            userId: userId\n        });\n    }\n\n    /**\n     * Get compatibility background\n     */\n    getCompatibilityBackground(match: number = 0): SafeStyle {\n        let background = `linear-gradient(to right, rgba(255,255,255,0) 0%, rgba(255,255,255,0) ${match}%, #d8d8d8 ${match}%)`;\n\n        return this.sanitizer.bypassSecurityTrustStyle(background);\n    }\n\n    /**\n     * Like confirmation\n     */\n    likeConfirmation(card: any, showAnimation: boolean = true): void {\n        if (!this.application.getAppSetting('user_like_pressed', false)) {\n            let confirm = this.alert.create({\n                enableBackdropDismiss: false,\n                message: this.translate.instant('like_confirmation', {name: card.displayName ? card.displayName : card.userName}),\n                buttons: [{\n                    text: this.translate.instant('cancel'),\n                    handler: () => {\n                        this.application.setAppSetting('user_like_pressed', true);\n                    }\n                }, {\n                    text: this.translate.instant('like'),\n                    handler: () => {\n                        this.application.setAppSetting('user_like_pressed', true);\n                        this.likeUser(true, showAnimation);\n                    }\n                }\n                ]\n            });\n\n            confirm.present();\n\n            return;\n        }\n\n        this.likeUser(true, showAnimation);\n    }\n\n    /**\n     * Dislike confirmation\n     */\n    dislikeConfirmation(card: any, showAnimation: boolean = true): void {\n        if (!Boolean(this.application.getAppSetting('user_dislike_pressed', false))) {\n            let confirm = this.alert.create({\n                enableBackdropDismiss: false,\n                message: this.translate.instant('dislike_confirmation', {name: card.displayName ? card.displayName : card.userName}),\n                buttons: [{\n                    text: this.translate.instant('cancel'),\n                    handler: () => {\n                        this.application.setAppSetting('user_dislike_pressed', true);\n                    }\n                },\n                    {\n                        text: this.translate.instant('dislike'),\n                        handler: () => {\n                            this.application.setAppSetting('user_dislike_pressed', true);\n                            this.dislikeUser(true, showAnimation);\n                        }\n                    }\n                ]\n            });\n\n            confirm.present();\n\n            return;\n        }\n\n        this.dislikeUser(true, showAnimation);\n    }\n\n    /**\n     * Search users\n     */\n    private async searchUsers(force: boolean = false): Promise<any> {\n        if (!force && this.cards.length || this.searchInProgress) {\n            return;\n        }\n\n        try {\n            this.cards = [];\n            this.searchInProgress = true;\n\n            // clear timeout\n            if (this.timeoutHandler) {\n                clearTimeout(this.timeoutHandler);\n            }\n\n            let urlParams:string = '?';\n\n            urlParams += 'with[]=avatar&';\n            urlParams += 'with[]=compatibility&';\n            urlParams += 'with[]=distance&';\n            urlParams += 'with[]=matchActions&';\n            urlParams += `limit=${this.usersLimit}`;\n\n            if (this.application.getAppLocation()) {\n                urlParams += `location=${this.application.getAppLocation()}&`;\n            }\n\n            // search users\n            this.cards = await this.http.get(this.config.getApiUrl() + '/tinder-users/' + urlParams)\n                .map(res => res.json())\n                .toPromise();\n\n            this.searchInProgress = false;\n            this.ref.markForCheck();\n\n            // try to load users later\n            if (!this.cards.length) {\n                this.timeoutHandler = setTimeout(() => {\n                    if (this.isSearchAllowed) {\n                        this.searchUsers();\n                    }\n                }, this.searchTimeout);\n            }\n        }\n        catch (e) {\n            this.searchInProgress = false;\n            this.ref.markForCheck();\n        }\n    }\n\n    /**\n     * Send like request\n     */\n    private async sendLikeRequest(card: any): Promise<any> {\n        try {\n            await this.api.getMapper('matchActions').create({\n                userId: card.id,\n                type: 'like'\n            });\n        }\n        catch (e) {}\n    }\n\n    /**\n     * Send dislike request\n     */\n    private async sendDislikeRequest(card: any): Promise<any> {\n        try {\n            await this.api.getMapper('matchActions').create({\n                userId: card.id,\n                type: 'dislike'\n            });\n        }\n        catch (e) {}\n    }\n\n    /**\n     * Is card throw allowed\n     */\n    private isCardThrowAllowed(): boolean {\n        return Boolean(this.application.getAppSetting('user_dislike_pressed', false))\n                && Boolean(this.application.getAppSetting('user_like_pressed', false));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/dashboard/components/tinder/index.ts","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, OnInit, OnDestroy } from '@angular/core';\nimport { NavController, Events } from 'ionic-angular';\nimport { DataStore } from 'js-data';\n\n// pages\nimport { InappsPage } from '../../../../pages/inapps/index';\nimport { EditUserQuestionsPage } from '../../../../pages/user/edit/questions/index';\nimport { EditUserPhotosPage } from '../../../../pages/user/edit/photos/index';\nimport { ProfileViewPage } from '../../../../pages/profile/view/index';\nimport { AppSettingsPage } from '../../../appSettings/index';\nimport { BookmarksPage } from '../../../../pages/user/bookmarks/index';\nimport { GuestsPage } from '../../../../pages/user/guests/index';\nimport { CompatibleUsersPage } from '../../../../pages/user/compatibleUsers/index';\n\n// services\nimport { AuthService } from '../../../../services/auth/index';\n\n@Component({\n    selector: 'profile',\n    templateUrl: 'index.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class ProfileComponent implements OnInit, OnDestroy {\n    @Input() public activeComponent: string;\n\n    private appSettingsPage = AppSettingsPage;\n    private profileEditPage = EditUserQuestionsPage;\n    private profileEditPhotosPage = EditUserPhotosPage;\n    private bookmarksPage = BookmarksPage;\n    private inappsPage = InappsPage;\n    private guestsPage = GuestsPage;\n    private compatibleUsersPage = CompatibleUsersPage;\n    private guestsUpdatedHandler: () => void;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private events: Events,\n        private ref: ChangeDetectorRef,\n        private auth: AuthService,\n        private nav: NavController,\n        private api: DataStore)\n    {\n        // -- init callbacks --//\n\n        // guests updated handler\n        this.guestsUpdatedHandler = (): void => {\n            this.ref.markForCheck();\n        };\n    }\n\n    /**\n     * Component init\n     */\n    ngOnInit(): void {\n        this.events.subscribe('guests:updated', this.guestsUpdatedHandler);\n    }\n\n    /**\n     * Component destroy\n     */\n    ngOnDestroy(): void {\n        this.events.unsubscribe('guests:updated', this.guestsUpdatedHandler);\n    }\n\n    /**\n     * User data\n     */\n    get user(): any {\n        return this.api.get('users', this.auth.getUserId());\n    }\n\n    /**\n     * Get new guests count\n     */\n    getNewGuestsCount(): number {\n        return this.api.filter('guests', {\n            where: {\n                viewed: false\n            }\n        }).length;\n    }\n\n    /**\n     * Show profile\n     */\n    showProfile(): void {\n        this.nav.push(ProfileViewPage, {\n            userId: this.auth.getUserId()\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/dashboard/components/profile/index.ts","import { Component, Input, ViewChild, ChangeDetectionStrategy, ChangeDetectorRef, OnInit, OnDestroy, AfterViewInit } from '@angular/core';\nimport { DataStore } from 'js-data';\nimport { Scroll, Events, LoadingController, ToastController, ActionSheetController, NavController, AlertController } from 'ionic-angular';\nimport { Keyboard } from '@ionic-native/keyboard';\nimport { TranslateService } from 'ng2-translate';\n\n// pages\nimport { MessagesPage } from '../../../messages/index';\n\n@Component({\n    selector: 'conversations',\n    templateUrl: 'index.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class ConversationsComponent implements OnInit, OnDestroy, AfterViewInit {\n    @ViewChild('conversationsScroll') scroll: Scroll;\n    @Input() public activeComponent: string;\n\n    private pageReady: boolean = false;\n    private userNameFilter: string = '';\n    private currentConversationsLimit: number;\n    private configsUpdatedHandler: () => void;\n    private conversationsUpdatedHandler: () => void;\n    private matchedUsersUpdatedHandler: () => void;\n    private clearScrollHandler: any;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private events: Events,\n        private ref: ChangeDetectorRef,\n        private loadingCtrl: LoadingController,\n        private toast: ToastController,\n        private alert: AlertController,\n        private translate: TranslateService,\n        private actionSheetCtrl: ActionSheetController,\n        private keyboard: Keyboard,\n        private api: DataStore,\n        private navController: NavController)\n    {\n        this.currentConversationsLimit = this.conversationsLimit;\n\n        // -- init callbacks --//\n\n        // configs updated handler\n        this.configsUpdatedHandler = (): void => {\n            this.ref.markForCheck();\n        };\n\n        // conversations updated handler\n        this.conversationsUpdatedHandler = (): void => {\n            this.ref.markForCheck();\n        };\n\n        // matched users updated handler\n        this.matchedUsersUpdatedHandler = (): void => {\n            this.ref.markForCheck();\n        };\n    }\n\n    /**\n     * Get toast duration\n     */\n    get toastDuration(): number {\n        return this.api.get('configs', 'toastDuration').value;\n    }\n\n    /**\n     * Get scroll threshold\n     */\n    get scrollThreshold(): number {\n        return this.api.get('configs', 'scrollThreshold').value;\n    }\n\n    /**\n     * Conversations limit\n     */\n    get conversationsLimit(): number {\n        return this.api.get('configs', 'conversationsLimit').value;\n    }\n\n    /**\n     * Component init\n     */\n    async ngOnInit(): Promise<any> {\n        try {\n            this.events.subscribe('configs:updated', this.configsUpdatedHandler);\n            this.events.subscribe('conversations:updated', this.conversationsUpdatedHandler);\n            this.events.subscribe('matchedUsers:updated', this.matchedUsersUpdatedHandler);\n\n            // load matches and conversations\n            await Promise.all([\n                this.api.findAll('matchedUsers'),\n                this.api.findAll('conversations')\n            ]);\n\n            this.pageReady = true;\n            this.ref.markForCheck();\n        }\n        catch (e) {}\n    }\n\n    /**\n     * After view init\n     */\n    ngAfterViewInit() {\n        // load more users while scrolling\n        this.clearScrollHandler = this.scroll.addScrollEventListener(() => {\n            let scrollTop: number = this.scroll._scrollContent.nativeElement.scrollTop;\n            let clientHeight: number = this.scroll._scrollContent.nativeElement.clientHeight;\n            let scrollHeight: number = this.scroll._scrollContent.nativeElement.scrollHeight;\n\n            if (scrollTop + clientHeight >= scrollHeight - this.scrollThreshold) {\n                if (this.isCheckLoadMoreActive) {\n                    this.loadMoreConversations();\n                }\n            }\n        });\n    }\n\n    /**\n     * Component destroy\n     */\n    ngOnDestroy(): void {\n        this.events.unsubscribe('configs:updated', this.configsUpdatedHandler);\n        this.events.unsubscribe('conversations:updated', this.conversationsUpdatedHandler);\n        this.events.unsubscribe('matchedUsers:updated', this.matchedUsersUpdatedHandler);\n\n        if (this.clearScrollHandler) {\n            this.clearScrollHandler();\n        }\n    }\n\n    /**\n     * Username filter changed\n     */\n    userNameFilterChanged(): void {\n        this.currentConversationsLimit = this.conversationsLimit;\n    }\n\n    /**\n     * Get matches\n     */\n    getMatches(): any[] {\n        return this.api.filter('matchedUsers', {\n            where: {\n                displayName: {\n                    'likei': `%${this.userNameFilter}%`\n                }\n            },\n            orderBy: [\n                ['isNew', 'DESC'], // newest first\n                ['createStamp', 'DESC']\n            ]});\n    }\n\n    /**\n     * Get conversations\n     */\n    getConversations(): any[] {\n        return this.api.filter('conversations', {\n            where: {\n                opponentDisplayName: {\n                    'likei': `%${this.userNameFilter}%`\n                }\n            },\n            limit: this.currentConversationsLimit,\n            orderBy: [\n                ['isRead', 'ASC'], // not read first\n                ['lastMessageTimestamp', 'DESC']\n            ]});\n    }\n\n    /**\n     * Show conversation actions\n     */\n    showConversationActions(conversation: any): void {\n        let buttons: any[] = [];\n\n        // block (unblock) opponent\n        if (!conversation.opponentBlocked) {\n            buttons.push({\n                text: this.translate.instant('block_profile'),\n                handler: () => {\n                    let buttons: any[] = [{\n                        text: this.translate.instant('no')\n                    }, {\n                        text: this.translate.instant('yes'),\n                        handler: () => this.blockUser(conversation.opponentId)\n                    }];\n\n                    let confirm = this.alert.create({\n                        message: this.translate.instant('block_profile_confirmation'),\n                        buttons: buttons\n                    });\n\n                    confirm.present();\n                }\n            });\n        }\n        else {\n            buttons.push({\n                text: this.translate.instant('unblock_profile'),\n                handler: () => this.unblockUser(conversation.opponentId)\n            });\n        }\n\n        // delete conversation\n        buttons.push({\n            text: this.translate.instant('delete_conversation'),\n            handler: () => {\n                let buttons: any[] = [{\n                    text: this.translate.instant('no')\n                }, {\n                    text: this.translate.instant('yes'),\n                    handler: () => this.deleteConversation(conversation.id)\n                }];\n\n                let confirm = this.alert.create({\n                    message: this.translate.instant('delete_conversation_confirmation'),\n                    buttons: buttons\n                });\n\n                confirm.present();\n            }\n        });\n\n        // mark read/unread conversation\n        buttons.push({\n            text: conversation.isRead\n                ? this.translate.instant('mark_unread_conversation')\n                : this.translate.instant('mark_read_conversation'),\n            handler: () => this.markConversation(conversation.id, conversation.isRead)\n        });\n\n        let actionSheet = this.actionSheetCtrl.create({\n            buttons: buttons\n        });\n\n        actionSheet.present();\n    }\n\n    /**\n     * Close keyboard\n     */\n    closeKeyboard(): void {\n        this.keyboard.close();\n    }\n\n    /**\n     * Show chat\n     */\n    showChat(userId: number, conversationId?: number): void {\n        this.navController.push(MessagesPage, {\n            userId: userId,\n            conversationId: conversationId\n        });\n    }\n\n    /**\n     * Load more conversations\n     */\n    loadMoreConversations(): void {\n        this.currentConversationsLimit += this.conversationsLimit;\n        this.ref.markForCheck();\n    }\n\n    /**\n     * Is check load more active\n     */\n    get isCheckLoadMoreActive(): boolean {\n        if (this.activeComponent == 'conversations') {\n            let conversations: any[] = this.api.filter('conversations', {\n                where: {\n                    opponentDisplayName: {\n                        'likei': `%${this.userNameFilter}%`\n                    }\n                }});\n\n            if (conversations.length > this.currentConversationsLimit) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Mark conversation\n     */\n    protected async markConversation(conversationId: number, isRead: boolean): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            await loader.present();\n            await this.api.update('conversations', conversationId, {\n                isRead: !isRead\n            });\n\n            this.ref.markForCheck();\n\n            let toast = this.toast.create({\n                message: isRead\n                    ? this.translate.instant('conversation_has_been_marked_as_unread')\n                    : this.translate.instant('conversation_has_been_marked_as_read'),\n                closeButtonText: this.translate.instant('ok'),\n                showCloseButton: true,\n                duration: this.toastDuration\n            });\n\n            toast.present();\n            loader.dismiss();\n        }\n        catch (e) {\n            loader.dismiss();\n        }\n    }\n\n    /**\n     * Delete conversation\n     */\n    protected async deleteConversation(conversationId: number): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            await loader.present();\n            await this.api.destroy('conversations', conversationId);\n\n            // remove messages from storage\n            this.api.removeAll('messages', {\n                conversationId: conversationId\n            });\n\n            this.ref.markForCheck();\n\n            let toast = this.toast.create({\n                message: this.translate.instant('conversation_has_been_deleted'),\n                closeButtonText: this.translate.instant('ok'),\n                showCloseButton: true,\n                duration: this.toastDuration\n            });\n\n            toast.present();\n            loader.dismiss();\n        }\n        catch (e) {\n            loader.dismiss();\n        }\n    }\n\n    /**\n     * Unblock user\n     */\n    protected async unblockUser(userId: number): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            await loader.present();\n            await this.api.getMapper('blocks').destroy(userId);\n\n            this.ref.markForCheck();\n\n            let toast = this.toast.create({\n                message: this.translate.instant('profile_unblocked'),\n                closeButtonText: this.translate.instant('ok'),\n                showCloseButton: true,\n                duration: this.toastDuration\n            });\n\n            toast.present();\n            loader.dismiss();\n        }\n        catch (e) {\n            loader.dismiss();\n        }\n    }\n\n    /**\n     * Block user\n     */\n    protected async blockUser(userId: number): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            await loader.present();\n            await this.api.getMapper('blocks').create({\n                userId: userId\n            });\n\n            this.ref.markForCheck();\n\n            let toast = this.toast.create({\n                message: this.translate.instant('profile_blocked'),\n                closeButtonText: this.translate.instant('ok'),\n                showCloseButton: true,\n                duration: this.toastDuration\n            });\n\n            toast.present();\n            loader.dismiss();\n        }\n        catch (e) {\n            loader.dismiss();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/dashboard/components/conversations/index.ts","import { Component, OnInit, OnDestroy, Input, ViewChild, AfterViewInit } from '@angular/core';\nimport { ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Scroll, Events, ModalController } from 'ionic-angular';\nimport { DataStore } from 'js-data';\nimport { NavController } from 'ionic-angular';\nimport { Keyboard } from '@ionic-native/keyboard';\n\n// import components\nimport { UserSearchFilterComponent } from './components/searchFilter/index';\n\n// services\nimport { PermissionsService } from '../../../../services/permissions/index';\nimport { AuthService } from '../../../../services/auth/index';\nimport { ApplicationService } from '../../../../services/application/index';\n\n// pages\nimport { InappsPage } from '../../../inapps/index';\nimport { ProfileViewPage } from '../../../profile/view/index';\n\n// questions\nimport { QuestionManager } from '../../../../services/questions/manager';\n\n@Component({\n    selector: 'search',\n    templateUrl: 'index.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class SearchComponent implements OnInit, OnDestroy, AfterViewInit {\n    @Input() public activeComponent: string;\n    @ViewChild('searchScroll') scroll: Scroll;\n\n    private searchUserNameFilter: string = '';\n    private searchFilter: {name: string, value: any, type: string}[] = [];\n    private inappsPage = InappsPage;\n    private userListLoading: boolean = false;\n    private showUserListLoading: boolean = true;\n    private currentGlobalLimit: number;\n    private currentLocalLimit: number;\n    private users: any[] = [];\n    private isNewSearch: boolean = true;\n    private searchStarted: boolean = false;\n    private permissionsUpdatedHandler: () => void;\n    private configsUpdatedHandler: () => void;\n    private avatarUpdatedHandler: () => void;\n    private avatarDeletedHandler: () => void;\n    private clearScrollHandler: any;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private keyboard: Keyboard,\n        private modalCtrl: ModalController,\n        private ref: ChangeDetectorRef,\n        private events: Events,\n        private nav: NavController,\n        private application: ApplicationService,\n        private auth: AuthService,\n        private api: DataStore,\n        private permissions: PermissionsService)\n    {\n        // -- init callbacks --//\n\n        // permissions updated handler\n        this.permissionsUpdatedHandler = (): void => {\n            // make users search\n            if (this.isSearchAllowed && !this.searchStarted) {\n                this.searchUsers(true);\n            }\n\n            this.ref.markForCheck();\n        };\n\n        // configs updated handler\n        this.configsUpdatedHandler = (): void => {\n            this.ref.markForCheck();\n        };\n\n        // avatar updated handler\n        this.avatarUpdatedHandler = (): void => {\n            this.ref.markForCheck();\n        };\n\n        // avatar deleted handler\n        this.avatarDeletedHandler = (): void => {\n            this.ref.markForCheck();\n        };\n    }\n\n    /**\n     * Component init\n     */\n    ngOnInit(): void {\n        if (this.isSearchAllowed) {\n            this.searchUsers(true);\n        }\n\n        // config updated\n        this.events.subscribe('configs:updated', this.configsUpdatedHandler);\n\n        // permissions updated\n        this.events.subscribe('permissions:updated', this.permissionsUpdatedHandler);\n\n        // avatar updated\n        this.events.subscribe('user:avatarUpdated', this.avatarUpdatedHandler);\n\n        // avatar deleted\n        this.events.subscribe('user:avatarDeleted', this.avatarDeletedHandler);\n    }\n\n    /**\n     * After view init\n     */\n    ngAfterViewInit() {\n        // load more users while scrolling\n        this.clearScrollHandler = this.scroll.addScrollEventListener(() => {\n            let scrollTop: number = this.scroll._scrollContent.nativeElement.scrollTop;\n            let clientHeight: number = this.scroll._scrollContent.nativeElement.clientHeight;\n            let scrollHeight: number = this.scroll._scrollContent.nativeElement.scrollHeight;\n\n            if (scrollTop + clientHeight >= scrollHeight - this.scrollThreshold) {\n                if (this.isCheckLoadMoreActive && !this.userListLoading) {\n                    this.loadMoreUsers();\n                }\n            }\n        });\n    }\n\n    /**\n     * Component destroy\n     */\n    ngOnDestroy(): void {\n        this.events.unsubscribe('configs:updated', this.configsUpdatedHandler);\n        this.events.unsubscribe('permissions:updated', this.permissionsUpdatedHandler);\n        this.events.unsubscribe('user:avatarUpdated', this.avatarUpdatedHandler);\n        this.events.unsubscribe('user:avatarDeleted', this.avatarDeletedHandler);\n\n        if (this.clearScrollHandler) {\n            this.clearScrollHandler();\n        }\n    }\n\n    /**\n     * Show search filter modal\n     */\n    showSearchFilterModal(): void {\n        let modal = this.modalCtrl.create(UserSearchFilterComponent, {\n            filter: this.searchFilter // pass collected filter\n        });\n\n        // capture returned data\n        modal.onDidDismiss((filter: {name: string, value: any, type: string}[]) => {\n            if (filter.length) {\n                this.searchFilter = filter;\n                this.searchUsers(true);\n                this.ref.markForCheck();\n            }\n        });\n\n        modal.present();\n    }\n\n    /**\n     * Current user\n     */\n    get currentUser(): any {\n       return this.api.get('users', this.auth.getUserId()); // get logged user data\n    }\n\n    /**\n     * Is search allowed\n     */\n    get isSearchAllowed(): boolean {\n        return this.permissions.isActionAllowed('base_search_users');\n    }\n\n    /**\n     * Get default global limit\n     */\n    get defaultGlobalLimit(): number {\n        return this.api.get('configs', 'searchUserLimit').value;\n    }\n\n    /**\n     * Get scroll threshold\n     */\n    get scrollThreshold(): number {\n        return this.api.get('configs', 'scrollThreshold').value;\n    }\n\n    /**\n     * Get default local limit\n     */\n    get defaultLocalLimit(): number {\n        return this.api.get('configs', 'searchUserLocalLimit').value;\n    }\n\n    /**\n     * View profile\n     */\n    viewProfile(user: any): void {\n        this.nav.push(ProfileViewPage, {\n            userId: user.id\n        });\n    }\n\n    /**\n     * Search users\n     */\n    async searchUsers(startNewSearch: boolean = false): Promise<any> {\n        try {\n            this.searchStarted = true;\n            this.userListLoading = true;\n            this.keyboard.close();\n\n            let lastSearchId = 0;\n\n            this.ref.markForCheck();\n\n            if (startNewSearch) {\n                this.isNewSearch = true;\n                this.currentGlobalLimit = this.defaultGlobalLimit;\n                this.currentLocalLimit = this.defaultLocalLimit;\n\n                let filter: any = this.searchFilter;\n\n                // process filters\n                if (this.searchUserNameFilter.trim()) {\n                    filter = filter.concat([{\n                        name: 'username',\n                        value: this.searchUserNameFilter,\n                        type: QuestionManager.TYPE_TEXT\n                    }]);\n                }\n\n                // create new search\n                let newSearch = await this.api.create('searchUsers', {userId: this.auth.getUserId()}, {\n                    params: {\n                        filter: JSON.stringify(filter)\n                    }\n                });\n\n                lastSearchId = newSearch.id;\n            }\n            else {\n                // get latest users search id\n                let search: any = this.api.filter('searchUsers', {\n                    where: {\n                        userId: this.auth.getUserId()\n                    },\n                    orderBy: [\n                        ['id', 'DESC']\n                    ],\n                    limit: 1\n                });\n\n                lastSearchId = search[0].id;\n                this.isNewSearch = false;\n            }\n\n            if (lastSearchId) {\n                let foundUsers: any[] = await this.api.getMapper('users').findAll({\n                    with: ['avatar', 'distance'],\n                    limit: this.currentGlobalLimit,\n                    searchId: lastSearchId,\n                    location: this.application.getAppLocation()\n                });\n\n                this.users = foundUsers;\n            }\n            else {\n                this.users = [];\n            }\n\n            this.userListLoading = false;\n        }\n        catch (e) {\n            this.userListLoading = false;\n        }\n\n        this.ref.markForCheck();\n    }\n\n    /**\n     * Get user list\n     */\n    getUserList(): any[] {\n        return this.users.slice(0, this.currentLocalLimit);\n    }\n\n    /**\n     * Load more users\n     */\n    async loadMoreUsers(): Promise<any> {\n        // fetch data from api\n        if (this.currentLocalLimit + this.defaultLocalLimit > this.users.length) {\n            this.currentGlobalLimit += this.defaultGlobalLimit;\n            this.showUserListLoading = false;\n            this.ref.markForCheck();\n\n            await this.searchUsers(false);\n\n            this.showUserListLoading = true;\n        }\n\n        // load from a local list\n        this.currentLocalLimit += this.defaultLocalLimit;\n        this.ref.markForCheck();\n    }\n\n    /**\n     * Is check load more active\n     */\n    protected get isCheckLoadMoreActive(): boolean {\n        if (this.activeComponent == 'search'\n            && this.users.length >= this.currentLocalLimit && this.currentLocalLimit && this.isSearchAllowed) {\n\n            return true;\n        }\n\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/dashboard/components/search/index.ts","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { Events } from 'ionic-angular';\nimport { DataStore } from 'js-data';\n\n@Component({\n    selector: 'dashboard-tabs',\n    templateUrl: 'index.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class DashboardTabsComponent implements OnInit, OnDestroy {\n    @Input() activeComponent: string;\n    @Input() activeSubComponent: string;\n    @Output() componentChanged = new EventEmitter();\n\n    private conversationsUpdatedHandler: () => void;\n    private matchedUsersUpdatedHandler: () => void;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private ref: ChangeDetectorRef,\n        private events: Events,\n        private api: DataStore)\n    {\n        // -- init callbacks --//\n\n        // conversations updated handler\n        this.conversationsUpdatedHandler = (): void => {\n            this.ref.markForCheck();\n        };\n\n        // matched users updated handler\n        this.matchedUsersUpdatedHandler = (): void => {\n            this.ref.markForCheck();\n        };\n    }\n\n    /**\n     * Component init\n     */\n     ngOnInit(): void {\n        this.events.subscribe('matchedUsers:updated', this.matchedUsersUpdatedHandler);\n        this.events.subscribe('conversations:updated', this.conversationsUpdatedHandler);\n    }\n\n    /**\n     * Component destroy\n     */\n    ngOnDestroy(): void {\n        this.events.unsubscribe('conversations:updated', this.conversationsUpdatedHandler);\n        this.events.unsubscribe('matchedUsers:updated', this.matchedUsersUpdatedHandler);\n    }\n\n    /**\n     * Change component\n     */\n    changeComponent(componentName: string, subComponentName?: string): void {\n        this.componentChanged.emit({\n            componentName: componentName,\n            subComponentName: subComponentName\n        });\n    }\n\n    /**\n     * Get unread conversations count\n     */\n    get getUnreadConversationsCount(): number {\n        return this.api.filter('conversations', {\n            where: {\n                isRead: false\n            }\n        }).length;\n    }\n\n    /**\n     * Get new matched users count\n     */\n    get getNewMatchedUsersCount(): number {\n        return this.api.filter('matchedUsers', {\n            where: {\n                isNew: true\n            }\n        }).length;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/dashboard/components/tabs/index.ts","import { DataStore } from 'js-data';\nimport { NavController, LoadingController } from 'ionic-angular';\n\nimport { Component } from '@angular/core';\nimport { SecureHttpService } from '../../../../services/http/index';\nimport { ConfigService } from '../../../../services/config/index';\nimport { AuthService} from '../../../../services/auth/index';\n\nimport { ViewMembershipComponent } from './viewMembership/index'\n\n@Component({\n    selector: 'memberships',\n    templateUrl: 'index.html'\n})\n\nexport class MembershipsComponent {\n\n    private memberships: any = [];\n    private currentMembership: string = '';\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private auth: AuthService,\n        private api: DataStore,\n        private config: ConfigService,\n        private http: SecureHttpService,\n        private loadingCtrl: LoadingController,\n        private nav: NavController\n    ){\n        this.loadMemberships()\n    }\n\n    public viewMembership(membershipId): void{\n        this.nav.push(ViewMembershipComponent, {'mewmbershipId': membershipId})\n    }\n\n    async loadMemberships(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n        await loader.present();\n        try{\n            this.memberships = await this.http.get(this.config.getApiUrl() + '/memberships/')\n                .map(res => res.json())\n                .toPromise();\n            this.memberships.forEach((membership) => {\n                if (membership.current == true) {\n                    this.currentMembership = membership.title;\n                }\n            });\n        } catch(e) {}\n        loader.dismiss();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/inapps/components/memberships/index.ts","import { NavController, LoadingController } from 'ionic-angular';\n\nimport { Component } from '@angular/core';\nimport { SecureHttpService } from '../../../../services/http/index';\nimport { ConfigService } from '../../../../services/config/index';\nimport { AuthService} from '../../../../services/auth/index';\nimport { InAppsService} from '../../../../services/inapps/index';\nimport { ApiUtilsService } from '../../../../services/api/utils';\n\nimport { DashboardPage } from '../../../../pages/dashboard/index';\n\n@Component({\n    selector: 'credits',\n    templateUrl: 'index.html'\n})\n\nexport class CreditsComponent {\n    private creditPacks: any = [];\n    private creditBalance: number = 0;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private auth: AuthService,\n        private apiUtils: ApiUtilsService,\n        private config: ConfigService,\n        private http: SecureHttpService,\n        private iaps: InAppsService,\n        private loadingCtrl: LoadingController,\n        private nav: NavController\n    ){\n        this.loadCreditPacks()\n    }\n\n    async buyPack(productId: string): Promise<any>{\n        let loader = this.loadingCtrl.create();\n        await loader.present();\n        try{\n            let result = await this.iaps.buyProduct(productId);\n            if (result){\n                this.apiUtils.clearUserData(this.auth.getUserId(), true);\n                this.nav.push(DashboardPage)\n            }\n            loader.dismiss();\n        } catch(e) {\n            loader.dismiss();\n        }\n    }\n\n    async loadCreditPacks(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n        await loader.present();\n        try{\n            let data = await this.http.get(this.config.getApiUrl() + '/credits/')\n                .map(res => res.json())\n                .toPromise();\n            let products = await this.iaps.getProducts(data['packs']);\n            data['packs'] = data['packs'].filter((el) => {\n                for (let key in products) {\n                    if (el['productId'].toLowerCase() == products[key]['productId']) {\n                        return true;\n                    }\n                }\n                return false;\n            });\n\n            this.creditPacks = data['packs'];\n            this.creditBalance = data['balance'];\n        } catch(e) {}\n        loader.dismiss();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/inapps/components/credits/index.ts","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, OnInit, OnDestroy } from '@angular/core';\nimport { AlertController, Events } from 'ionic-angular';\nimport { FormGroup, AbstractControl } from '@angular/forms';\nimport { QuestionBase }     from '../../../services/questions/questions/base';\nimport { sprintf } from 'sprintf-js';\n\nimport { TranslateService } from 'ng2-translate';\n\n// validators\nimport { Validators } from '../../../services/questions/validators/index';\nimport { RequireValidator } from '../../../services/questions/validators/require';\n\n@Component({\n    selector: 'question',\n    templateUrl: './index.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class QuestionComponent implements OnInit, OnDestroy {\n    @Input() question: QuestionBase;\n    @Input() form: FormGroup;\n\n    private baseQuestionClass: string = 'sk-base-question-presentation';\n    private baseQuestionWarningClass: string = 'sk-question-warning';\n    private asyncValidatorFinishedHandler: () => void;\n\n    constructor(\n        private events: Events,\n        private ref: ChangeDetectorRef,\n        private validators: Validators,\n        private requireValidator: RequireValidator,\n        private alert: AlertController,\n        private translate: TranslateService)\n    {\n        // -- init callbacks --//\n\n        // async validator finished validation process handler\n        this.asyncValidatorFinishedHandler = (): void => {\n            this.ref.markForCheck();\n        };\n    }\n\n    /**\n     * Component init\n     */\n    ngOnInit() {\n        // async validator finished\n        this.events.subscribe('asyncValidator:finished', this.asyncValidatorFinishedHandler);\n\n        this.form.valueChanges.subscribe(() => {\n            this.ref.markForCheck();\n        });\n    }\n\n    /**\n     * Component destroy\n     */\n    ngOnDestroy(): void {\n        this.events.unsubscribe('asyncValidator:finished', this.asyncValidatorFinishedHandler);\n    }\n\n    /**\n     * Is question valid\n     */\n    get isValid(): boolean {\n        let control: AbstractControl = this.form.controls[this.question.key];\n\n        if ((!control.valid && control.dirty && !control.pending)\n            || (this.hasGroupError() && control.dirty && !control.pending)) {\n\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Get question class\n     */\n    get getQuestionClass(): string {\n        let params: any = this.question.params;\n        let control: AbstractControl = this.form.controls[this.question.key];\n        let hideWarning: boolean = params && params.hideWarning && params.hideWarning == true;\n        let appliedRequireValidators = [];\n\n        if (this.question.validators && this.question.validators.length) {\n            appliedRequireValidators = this.question.validators.filter((validator: any) => {\n                return validator.name == 'require';\n            });\n        }\n\n        let warning = !hideWarning && appliedRequireValidators.length && !this.requireValidator.isValid(control.value)\n            ? this.baseQuestionWarningClass\n            : '';\n\n        if (params && params.questionClass) {\n            return `${this.baseQuestionClass} ${warning} ${params.questionClass}`;\n        }\n\n        return `${this.baseQuestionClass} ${warning}`;\n    }\n\n    /**\n     * Show errors\n     */\n    showErrors(event): void {\n        event.stopPropagation();\n\n        let errors: string = '';\n\n        this.getErrors().forEach((error) => {\n            errors += `${error}<br />`;\n        });\n\n        let alert = this.alert.create({\n            subTitle: errors,\n            buttons: [this.translate.instant('ok')]\n        });\n\n        alert.present();\n    }\n\n    /**\n     * Has visible errors\n     */\n    get hasVisibleErrors(): boolean {\n        let params: any = this.question.params;\n        let hideErrors = params && params.hideErrors && params.hideErrors == true;\n\n        return !hideErrors && !this.isValid;\n    }\n\n    /**\n     * Get list of errors\n     */\n    protected getErrors(): Array<string> {\n        let control: AbstractControl = this.form.controls[this.question.key];\n        let errors: Array<string> = [];\n\n        // check all assigned question's validators\n        this.question.validators.forEach((validator) => {\n            if (control.hasError(validator.name)) {\n                let message = !validator.message\n                    ? this.validators.getDefaultMessage(validator.name)\n                    : validator.message;\n\n                errors.push(sprintf(message, control.value));\n            }\n        });\n\n        // check a group error\n        if (this.hasGroupError()) {\n            let groupError: any = control.parent.errors;\n\n            errors.push(sprintf(groupError.message, control.value));\n        }\n\n        return errors;\n    }\n\n    /**\n     * Has group error\n     */\n    protected hasGroupError(): boolean {\n        let control: AbstractControl = this.form.controls[this.question.key];\n\n        if (control.parent) {\n            let groupError: any = control.parent.errors;\n\n            if (groupError\n                && groupError.question\n                && groupError.message\n                && groupError.question == this.question.key) {\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/question/index.ts","import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, OnInit, OnDestroy } from '@angular/core';\nimport { DataStore } from 'js-data';\nimport { Events } from 'ionic-angular';\n\n@Component({\n    selector: 'user-avatar',\n    templateUrl: './index.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AvatarComponent implements OnInit, OnDestroy {\n    @Input() public isAvatarActive: boolean = true;\n    @Input() public url: string;\n    @Input() public useBigAvatar: boolean = false;\n\n    private configsUpdatedHandler: () => void;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private events: Events,\n        private api: DataStore,\n        private ref: ChangeDetectorRef)\n    {\n        // -- init callbacks --//\n\n        // configs updated handler\n        this.configsUpdatedHandler = (): void => {\n            this.ref.markForCheck();\n        };\n    }\n\n    /**\n     * Component init\n     */\n    ngOnInit(): void {\n        this.events.subscribe('configs:updated', this.configsUpdatedHandler);\n    }\n\n    /**\n     * Component destroy\n     */\n    ngOnDestroy(): void {\n        this.events.unsubscribe('configs:updated', this.configsUpdatedHandler);\n    }\n\n    /**\n     * Get default avatar\n     */\n    get defaultAvatar(): string {\n        return this.api.get('configs', 'defaultAvatar').value;\n    }\n\n    /**\n     * Get big default avatar\n     */\n    get bigDefaultAvatar(): string {\n        return this.api.get('configs', 'bigDefaultAvatar').value;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/components/avatar/index.ts","import { ElementRef, HostListener, Directive, AfterViewInit, Optional, OnInit, OnDestroy, NgZone } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { Observable, Subscription } from 'rxjs/Rx';\nimport { DataStore } from 'js-data';\n\n@Directive({\n    selector: '[autosize]'\n})\n\nexport class AutosizeDirective implements OnInit, OnDestroy, AfterViewInit {\n    private modelSub: Subscription;\n    private textareaEl: HTMLTextAreaElement;\n    private debounceTime: number = 100;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private api: DataStore,\n        private element: ElementRef,\n        private ngZone: NgZone,\n        @Optional() private model: NgModel\n    ) {}\n\n    @HostListener('input')\n    onInput(): void {\n        // this is run whenever the user changes the input.\n        this.adjust();\n    }\n\n    /**\n     * View in init\n     */\n    ngOnInit() {\n        if(!this.model) {\n            return;\n        }\n\n        // listen for changes to the underlying model\n        // to adjust the textarea size.\n        this.modelSub = this.model\n            .valueChanges\n            .debounceTime(this.debounceTime)\n            .subscribe(() => this.adjust());\n    }\n\n    /**\n     * View destroy\n     */\n    ngOnDestroy() {\n        if(this.modelSub) {\n            this.modelSub.unsubscribe();\n        }\n    }\n\n    /**\n     * After view init\n     */\n    ngAfterViewInit() {\n        if (this.isTextarea(this.element.nativeElement)) {\n            this.setupTextarea(this.element.nativeElement);\n\n            return;\n        }\n\n        const children: HTMLElement[] = Array.from(this.element.nativeElement.children) as HTMLElement[];\n        const textareaEl = children.find(el => this.isTextarea(el));\n\n        if (textareaEl) {\n            this.setupTextarea(textareaEl as HTMLTextAreaElement);\n\n            return;\n        }\n\n        throw new Error('The `autosize` attribute directive must be used on a `textarea` or an element that contains a `textarea`.');\n    }\n\n    /**\n     * Max textarea height\n     */\n    get maxHeight(): number {\n        return this.api.get('configs', 'maxTextareaHeight').value;\n    }\n\n    /**\n     * Check if is it a textarea\n     */\n    private isTextarea(el: HTMLElement) {\n        return el.tagName === 'TEXTAREA';\n    }\n\n    /**\n     * Setup textarea\n     */\n    private setupTextarea(textareaEl: HTMLTextAreaElement) {\n        this.textareaEl = textareaEl;\n\n        // Set some necessary styles\n        const style = this.textareaEl.style;\n        style.overflow = 'hidden';\n        style.resize = 'none';\n\n        // Listen for window resize events\n        this.ngZone.runOutsideAngular(() => {\n            Observable.fromEvent(window, 'resize')\n                .debounceTime(this.debounceTime)\n                .subscribe(() => this.adjust());\n        });\n\n        // ensure we adjust the textarea if\n        // content is already present\n        this.adjust();\n    }\n\n    /**\n     * Adjust textarea height\n     */\n    private adjust(): void {\n        if (!this.textareaEl) {\n            return;\n        }\n\n        if (this.textareaEl.scrollHeight <= this.maxHeight) {\n            this.textareaEl.style.height = 'auto';\n            this.textareaEl.style.height = this.textareaEl.scrollHeight + 'px';\n\n            return;\n        }\n\n        this.textareaEl.style.overflow = 'auto';\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/directives/autosize/index.ts","import { Component, ViewChild, AfterViewChecked } from '@angular/core';\nimport { NavController, ToastController, AlertController, LoadingController, Content, NavParams, Events, InfiniteScroll, ActionSheetController } from 'ionic-angular';\nimport { DataStore } from 'js-data';\nimport { TranslateService } from 'ng2-translate';\n\n// services\nimport { PermissionsService } from '../../services/permissions/index';\nimport { HttpErrorHandlerService } from '../../services/http/errorHandler';\nimport { SecureHttpService } from '../../services/http/index';\nimport { ConfigService } from '../../services/config/index';\nimport { PhotoUploaderService } from '../../services/photoUploader/index';\n\n// pages\nimport { DashboardPage } from '../dashboard/index';\nimport { ProfileViewPage } from '../profile/view/index';\n\n// types\nimport { PhotoUploaderSource } from '../../services/photoUploader/index';\n\n@Component({\n    selector: 'messages',\n    templateUrl: 'index.html',\n    providers: [\n        PhotoUploaderService\n    ]\n})\n\nexport class MessagesPage implements AfterViewChecked {\n    @ViewChild(Content) content: Content;\n    @ViewChild(InfiniteScroll) infiniteScroll: InfiniteScroll = null;\n\n    private userId: number;\n    private user: any;\n    private conversationId: number = 0;\n    private isConversationEmpty: boolean = true;\n    private pageReady: boolean = false;\n    private message: string = '';\n    private needToScrollContent: boolean = false;\n    private contentScrolled: boolean = false;\n    private fetchHistory: boolean = true;\n    private messages: any[] = [];\n    private unreadMessageId: number = 0;\n    private permissionsUpdatedHandler: () => Promise<any>;\n    private conversationsUpdatedHandler: () => Promise<any>;\n    private messagesUpdatedHandler: (updatedMessages: {newMessages: any[], updatedMessages: any[]}) => void;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private nav: NavController,\n        private toast: ToastController,\n        private alert: AlertController,\n        private photoUploader: PhotoUploaderService,\n        private translate: TranslateService,\n        private actionSheetCtrl: ActionSheetController,\n        private config: ConfigService,\n        private http: SecureHttpService,\n        private events: Events,\n        private httpErrorHandler: HttpErrorHandlerService,\n        private loadingCtrl: LoadingController,\n        private permissions: PermissionsService,\n        private navParams: NavParams,\n        private api: DataStore)\n    {\n        this.userId = this.navParams.get('userId');\n        this.conversationId = this.navParams.get('conversationId');\n\n        // try to find user's conversation\n        if (!this.conversationId) {\n            let conversation: any = this.getConversation();\n\n            if (conversation) {\n                this.conversationId = conversation.id;\n            }\n        }\n\n        // -- init callbacks --//\n\n        // permissions updated handler\n        this.permissionsUpdatedHandler = async (): Promise<any> => {\n            if (this.permissions.isActionAllowed('mailbox_read_chat_message') && this.checkForEmptyMessages()) {\n                await this.loadMessages(true);\n\n                // mark conversation as read\n                if (!this.checkForEmptyMessages()) {\n                    this.markConversationAsRead();\n                }\n\n                // mark messages as read\n                this.markMessagesAsRead();\n            }\n        };\n\n        // conversations updated handler\n        this.conversationsUpdatedHandler = async (): Promise<any> => {\n            this.markAsReadOutcomigMessages();\n            this.setMessages();\n\n            if (!this.messages.length) {\n                this.isConversationEmpty = true;\n            }\n        };\n\n        // messages updated handler\n        this.messagesUpdatedHandler = (updatedMessages: {newMessages: any[], updatedMessages: any[]}) => {\n            if (this.conversationId) {\n                let isThereNewMessages: boolean = false;\n                let isThereUpdatedMessages: boolean = false;\n\n                // check for new messages\n                updatedMessages.newMessages.every((message: any) => {\n                    if (message.conversationId == this.conversationId) {\n                        isThereNewMessages = true;\n\n                        return false;\n                    }\n\n                    return true;\n                });\n\n                // check for updated messages\n                updatedMessages.updatedMessages.every((message: any) => {\n                    if (message.conversationId == this.conversationId) {\n                        isThereUpdatedMessages = true;\n\n                        return false;\n                    }\n\n                    return true;\n                });\n\n                if (isThereNewMessages || isThereUpdatedMessages) {\n                    this.setMessages();\n\n                    if (isThereNewMessages) {\n                        this.needToScrollContent = true;\n\n                        // mark conversation as read\n                        if (!this.checkForEmptyMessages()) {\n                            this.markConversationAsRead();\n                        }\n\n                        // mark messages as read\n                        this.markMessagesAsRead();\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Page will be active\n     */\n     ionViewWillEnter(): void {\n        // don't handle http errors\n        this.httpErrorHandler.setHandleHttpErrors(false);\n\n        // refresh messages list\n        this.events.subscribe('permissions:updated', this.permissionsUpdatedHandler);\n\n        // change status of outcoming messages\n        this.events.subscribe('conversations:updated', this.conversationsUpdatedHandler);\n\n        // new messages\n        this.events.subscribe('messages:updated', this.messagesUpdatedHandler);\n    }\n\n    /**\n     * Page will leave\n     */\n    ionViewWillLeave(): void {\n        this.httpErrorHandler.setHandleHttpErrors(true);\n\n        this.events.unsubscribe('permissions:updated', this.permissionsUpdatedHandler);\n        this.events.unsubscribe('conversations:updated', this.conversationsUpdatedHandler);\n        this.events.unsubscribe('messages:updated', this.messagesUpdatedHandler);\n\n        this.fetchHistory = false;\n    }\n\n    /**\n     * Component init\n     */\n    async ngOnInit(): Promise<any> {\n        this.setMessages();\n\n        this.permissions.isActionAllowed('mailbox_read_chat_message') && this.checkForEmptyMessages()\n            ? await this.loadMessages(true) // force to load new messages\n            : await this.loadMessages();\n\n        // mark conversation as read\n        if (this.messages.length && !this.checkForEmptyMessages()) {\n            this.markConversationAsRead();\n        }\n\n        // mark user match as viewed\n        if (this.user.matchActions.isMutual && this.user.matchActions.isNew) {\n            this.markMatchedUser();\n        }\n\n        this.markMessagesAsRead();\n    }\n\n    /**\n     * View rendered\n     */\n    async ngAfterViewChecked(): Promise<any> {\n        // scroll content to bottom\n        if (this.needToScrollContent) {\n            this.needToScrollContent = false;\n\n            await this.content.scrollToBottom();\n            this.contentScrolled = true;\n        }\n    }\n\n    /**\n     * Set messages\n     */\n    setMessages(): void {\n        this.messages = this.api.filter('messages', {\n            where: {\n                conversationId: this.conversationId\n            }, orderBy: [\n                ['timeStamp', 'ASC']\n            ]});\n    }\n\n    /**\n     * Message tracked\n     */\n    messageTrackedEvent(): void {\n        this.setMessages();\n\n        if (!this.checkForEmptyMessages()) {\n            this.markConversationAsRead();\n        }\n\n        this.markMessagesAsRead();\n    }\n\n    /**\n     * Message deleted\n     */\n    messageDeletedEvent(): void {\n        this.setMessages();\n\n        if (!this.messages.length) {\n            this.isConversationEmpty = true;\n        }\n    }\n\n    /**\n     * Message delivered\n     */\n    messageDeliveredEvent(message: any): any {\n        this.setMessages();\n\n        if (!this.conversationId) {\n            this.isConversationEmpty = false;\n            this.conversationId = message.conversationId;\n        }\n    }\n\n    /**\n     * Load more messages\n     */\n    async loadMoreMessages(): Promise<any> {\n        if (this.messages) {\n            try {\n                let url: string = this.config.getApiUrl()\n                    + `/mailbox/messages/history/?beforeMessageId=${this.messages[0].id}&conversationId=${this.conversationId}&limit=${this.messagesLimit}`;\n\n                let oldMessages: any[] = await this.http.get(url, true)\n                    .map(res => res.json())\n                    .toPromise();\n\n                if (!oldMessages.length) {\n                    this.fetchHistory = false;\n\n                    if (this.infiniteScroll) {\n                        this.infiniteScroll.complete();\n                        this.infiniteScroll.enable(false);\n                    }\n\n                    return;\n                }\n\n                oldMessages.forEach((message) => this.api.add('messages', message));\n\n                this.setMessages();\n                this.findUnreadMessageId();\n                this.markMessagesAsRead();\n            }\n            catch (e) {\n            }\n        }\n\n        if (this.infiniteScroll) {\n            this.infiniteScroll.complete();\n        }\n    }\n\n    /**\n     * Get toast duration\n     */\n    get toastDuration(): number {\n        return this.api.get('configs', 'toastDuration').value;\n    }\n\n    /**\n     * Get messages limit\n     */\n    get messagesLimit(): number {\n        return this.api.get('configs', 'messagesLimit').value;\n    }\n\n    /**\n     * Attach max upload size\n     */\n     get attachMaxUploadSize(): number {\n        return this.api.get('configs', 'attachMaxUploadSize').value;\n     }\n\n    /**\n     * Is check load more active\n     */\n    get isCheckLoadMoreActive(): boolean {\n        return this.contentScrolled && this.fetchHistory\n            && this.conversationId && this.messages.length >= this.messagesLimit;\n    }\n\n    /**\n     * Is send message area allowed\n     */\n    get isSendMessageAreaAllowed(): boolean {\n        // continue the conversation\n        if (this.conversationId && !this.isConversationEmpty) {\n            return this.permissions.isActionAllowed('mailbox_reply_to_chat_message')\n                    || this.permissions.isActionPromoted('mailbox_reply_to_chat_message');\n        }\n\n        // start a new conversation\n        return this.permissions.isActionAllowed('mailbox_send_chat_message')\n            || this.permissions.isActionPromoted('mailbox_send_chat_message');\n    }\n\n    /**\n     * Is send message area promoted\n     */\n    get isSendMessageAreaPromoted(): boolean {\n        // continue the conversation\n        if (this.conversationId && !this.isConversationEmpty) {\n            return this.permissions.isActionPromoted('mailbox_reply_to_chat_message');\n        }\n\n        // start a new conversation\n        return this.permissions.isActionPromoted('mailbox_send_chat_message');\n    }\n\n    /**\n     * Is message valid\n     */\n    get isMessageValid(): boolean {\n        return this.message.trim() != '' || this.isSendMessageAreaPromoted;\n    }\n\n    /**\n     * Show conversation actions\n     */\n    showConversationActions(): void {\n        let buttons: any = [];\n\n        buttons.push({\n            text: this.user.blocks.isBlocked\n                ? this.translate.instant('unblock_profile')\n                : this.translate.instant('block_profile'),\n            handler: () => {\n                // unblock profile\n                if (this.user.blocks.isBlocked) {\n                    this.unblockUser();\n\n                    return;\n                }\n\n                // block profile\n                let confirm = this.alert.create({\n                    message: this.translate.instant('block_profile_confirmation'),\n                    buttons: [\n                        {\n                            text: this.translate.instant('cancel')\n                        },\n                        {\n                            text: this.translate.instant('block_profile'),\n                            handler: () => {\n                                this.blockUser()\n                            }\n                        }\n                    ]\n                });\n\n                confirm.present();\n            }\n        });\n\n        if (this.conversationId) {\n            // delete conversation\n            buttons.push({\n                text: this.translate.instant('delete_conversation'),\n                handler: () => {\n                    let buttons: any[] = [{\n                        text: this.translate.instant('no')\n                    }, {\n                        text: this.translate.instant('yes'),\n                        handler: () => this.deleteConversation()\n                    }];\n\n                    let confirm = this.alert.create({\n                        message: this.translate.instant('delete_conversation_confirmation'),\n                        buttons: buttons\n                    });\n\n                    confirm.present();\n                }\n            });\n\n            // mark as unread conversation\n            buttons.push({\n                text: this.translate.instant('mark_unread_conversation'),\n                handler: () => this.markConversationAsUnread()\n            });\n        }\n\n        let actionSheet = this.actionSheetCtrl.create({\n            buttons: buttons\n        });\n\n        actionSheet.present();\n    }\n\n    /**\n     * Show upload image actions\n     */\n     showUploadImageActions(): void {\n        // check send message permission\n        if (this.isSendMessageAreaPromoted) {\n            this.permissions.showAccessDeniedAlert();\n\n            return;\n        }\n\n        let buttons: any = [];\n\n        buttons.push({\n            text: this.translate.instant('take_photo'),\n            handler: () => this.sendImage('camera')\n        });\n\n        buttons.push({\n            text: this.translate.instant('choose_photo_from_library'),\n            handler: () => this.sendImage('library')\n        });\n\n        let actionSheet = this.actionSheetCtrl.create({\n            buttons: buttons\n        });\n\n        actionSheet.present();\n     }\n\n    /**\n     * Send message\n     */\n    async sendMessage(): Promise<any> {\n        // check send message permission\n        if (this.isSendMessageAreaPromoted) {\n            this.permissions.showAccessDeniedAlert();\n\n            return;\n        }\n\n        let fakeMessage: any = this.getFakeMessage(this.message);\n\n        try {\n            this.unreadMessageId = 0;\n\n            // create a fake message\n            this.isConversationEmpty = false;\n            this.api.add('messages', fakeMessage);\n\n            this.setMessages();\n\n            this.message = '';\n            this.needToScrollContent = true;\n\n            // create a real message\n            let newMessage: any = await this.api.create('messages', Object.assign({}, fakeMessage));\n\n            if (!this.conversationId) {\n                this.conversationId = newMessage.conversationId;\n            }\n\n            newMessage.deliverInProcess = false;\n            this.api.add('messages', newMessage);\n\n            // remove previously created fake message\n            this.api.remove('messages', fakeMessage.id);\n            this.setMessages();\n\n            this.needToScrollContent = true;\n        }\n        catch (e) {\n            // mark message as not delivered\n            fakeMessage.notDelivered = true;\n            fakeMessage.deliverInProcess = false;\n\n            if (e.response && e.response.data) {\n                let errorDescription: string = e.response.data.shortDescription;\n\n                if (errorDescription) {\n                    fakeMessage.notDeliveredDesc = errorDescription;\n                }\n            }\n\n            // update fake message\n            this.api.add('messages', fakeMessage);\n            this.setMessages();\n\n            this.events.publish('message:sendFailed');\n        }\n    }\n\n    /**\n     * Get system message type\n     */\n    getSystemMessageType(text: string): any {\n        let params: any = JSON.parse(text);\n\n        if (params.entityType) {\n            return params.entityType;\n        }\n    }\n\n    /**\n     * View profile\n     */\n    viewProfile(userId: number): void {\n        this.nav.push(ProfileViewPage, {\n            userId: userId\n        });\n    }\n\n\n    /**\n     * Send image\n     */\n    private async sendImage(source: PhotoUploaderSource): Promise<any> {\n        let fakeMessage: any = this.getFakeMessage();\n\n        try {\n            this.unreadMessageId = 0;\n\n            // init photo uploader\n            this.photoUploader.maxFileSizeMb =  this.attachMaxUploadSize;\n            this.photoUploader.url =  this.config.getApiUrl() + '/mailbox/photo-messages/?';\n            this.photoUploader.url += `opponentId=${this.userId}&`;\n            this.photoUploader.url += `conversationId=${this.conversationId}`;\n\n            // photo successfully uploaded\n            this.photoUploader.successUploadCallback = (newMessage: any) => {\n                newMessage = JSON.parse(newMessage);\n\n                if (!this.conversationId) {\n                    this.conversationId = newMessage.conversationId;\n                }\n\n                this.api.add('messages', newMessage);\n\n                // remove previously created fake message\n                this.api.remove('messages', fakeMessage.id);\n                this.setMessages();\n\n                this.needToScrollContent = true;\n            };\n\n            // start uploading image\n            this.photoUploader.photoCopiedCallback = (image: {name: string, path: string}) => {\n                // create a fake message\n                fakeMessage.attachments.push({\n                    fileName: image.name,\n                    downloadUrl: image.path,\n                    type: 'image'\n                });\n\n                // create a fake message\n                this.isConversationEmpty = false;\n                this.api.add('messages', fakeMessage);\n\n                this.setMessages();\n                this.needToScrollContent = true;\n            };\n\n            // uploading failed\n            this.photoUploader.errorUploadCallback = (error: {type: string, message: string}) => {\n                // retry to send again\n                if (PhotoUploaderService.ERROR_UPLOADING_FILE == error.type) {\n                    // mark message as not delivered\n                    fakeMessage.notDelivered = true;\n                    fakeMessage.deliverInProcess = false;\n\n                    if (error.message) {\n                        let errorParams: any = JSON.parse(error.message);\n\n                        if (errorParams.shortDescription) {\n                            fakeMessage.notDeliveredDesc = errorParams.shortDescription;\n                        }\n                    }\n\n                    // update fake message\n                    this.api.add('messages', fakeMessage);\n                    this.setMessages();\n                    this.events.publish('message:sendFailed');\n                }\n            };\n\n            this.photoUploader.takePicture(source);\n        }\n        catch(e) {}\n    }\n\n    /**\n     * Check for empty messages\n     */\n    private checkForEmptyMessages(): boolean {\n        let isThereEmptyMessage: boolean = false;\n\n        this.messages.every((message) => {\n            if (!message.text.trim() && !message.attachments.length && !message.newMessage) {\n                isThereEmptyMessage = true;\n\n                return false;\n            }\n\n            return true;\n        });\n\n        return isThereEmptyMessage;\n    }\n\n    /**\n     * Load messages\n     */\n    private async loadMessages(forceToLoad: boolean = false): Promise<any> {\n        let loader = this.loadingCtrl.create();\n        this.pageReady = false;\n\n        try {\n            await loader.present();\n\n            // load messages\n            if (this.conversationId) {\n                let limit: number = this.messages.length > this.messagesLimit\n                    ? this.messages.length\n                    : this.messagesLimit;\n\n                // load user data and list of messages\n                [this.user] = await Promise.all([\n                    this.api.getMapper('users').find(this.userId, {\n                        params: {\n                            with: ['blocks', 'avatar', 'matchActions']\n                        }\n                    }),\n                    this.api.findAll('messages', {\n                        conversationId: this.conversationId,\n                        limit: limit\n                    }, {\n                        force: forceToLoad,\n                        forceHandleError: true\n                    })\n                ]);\n\n                this.setMessages();\n                this.findUnreadMessageId();\n            }\n            else {\n                // load user data\n                this.user = await this.api.getMapper('users').find(this.userId, {\n                    params: {\n                        with: ['blocks', 'avatar', 'matchActions']\n                    }\n                });\n            }\n\n            if (this.messages.length) {\n                this.isConversationEmpty = false;\n            }\n\n            loader.dismiss();\n\n            this.pageReady = true;\n            this.needToScrollContent = true;\n        }\n        catch (e) {\n            loader.dismiss();\n        }\n    }\n\n\n    /**\n     * mark conversation as read\n     */\n    private async markConversationAsRead(): Promise<any> {\n        try {\n            let conversation: any = this.getConversation();\n\n            if (conversation && !conversation.isRead) {\n                await this.api.update('conversations', conversation.id, {\n                    isRead: true\n                }, {\n                    forceHandleError: true\n                });\n            }\n        }\n        catch (e) {}\n    }\n\n    /**\n     * Get fake messge\n     */\n    private getFakeMessage(message: string = ''): Object {\n        let timeStamp: number = Math.floor(Date.now() / 1000);\n\n        return  {\n            id: timeStamp,\n            isAuthor: true,\n            opponentId: this.userId,\n            text: message,\n            conversationId: this.conversationId,\n            timeStamp: timeStamp,\n            deliverInProcess: true,\n            notDelivered: false,\n            notDeliveredDesc: '',\n            wasAuthorized: true,\n            newMessage: true,\n            attachments: []\n        };\n    }\n\n    /**\n     * Get conversation\n     */\n    private getConversation(): any {\n        let conversation: any[] = this.api.filter('conversations', {\n            where: {\n                opponentId: this.userId\n            }});\n\n        if (conversation[0]) {\n            return conversation[0];\n        }\n    }\n\n    /**\n     * Mark as read outcoming messages\n     */\n    private markAsReadOutcomigMessages(): void {\n        // get current conversation\n        let conversation: any = this.getConversation();\n\n        if (conversation && conversation.opponentIsRead) {\n            // get not read outcoming messages\n            let messages: any[] = this.api.filter('messages', {\n                where: {\n                    conversationId: conversation.id,\n                    isAuthor: true,\n                    recipientRead: false,\n                    newMessage: false\n                }});\n\n            let updateMessages: boolean = false;\n\n            // mark messages as read by recipient\n            messages.forEach((message: any) => {\n                message.recipientRead = true;\n                updateMessages = true;\n            });\n\n            if (updateMessages) {\n                this.setMessages();\n            }\n        }\n    }\n\n    /**\n     * Mark matched user\n     */\n    private async markMatchedUser(): Promise<any> {\n        try {\n            await this.api.update('matchedUsers', this.user.matchActions.id, {\n                isNew: false\n            });\n        }\n        catch(e) {}\n    }\n\n    /**\n     * Mark messages as read\n     */\n    private async markMessagesAsRead(): Promise<any> {\n        try {\n            if (this.conversationId) {\n                let messages:any[] = this.api.filter('messages', {\n                    where: {\n                        conversationId: this.conversationId,\n                        isAuthor: false,\n                        recipientRead: false,\n                        text: {\n                            '!=': ''\n                        }\n                    }\n                });\n\n                let needToUpdate:any[] = [];\n\n                messages.forEach((message:any) => {\n                    needToUpdate.push({\n                        id: message.id\n                    });\n                });\n\n                if (needToUpdate.length) {\n                    await this.api.updateAll('messages', needToUpdate, {}, {\n                        forceHandleError: true\n                    });\n\n                    this.setMessages();\n                }\n            }\n        }\n        catch(e) {}\n    }\n\n    /**\n     * Find unread message id\n     */\n    private findUnreadMessageId(): void {\n        if (this.conversationId) {\n            let message: any[] = this.api.filter('messages', {\n                where: {\n                    conversationId: this.conversationId,\n                    isAuthor: false,\n                    recipientRead: false,\n                    newMessage: false\n                },\n                limit: 1,\n                orderBy: [\n                    ['timeStamp', 'ASC']\n                ]\n            });\n\n            if (message[0]) {\n                this.unreadMessageId = message[0].id;\n            }\n        }\n    }\n\n    /**\n     * Block user\n     */\n    private async blockUser(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            this.user.blocks.isBlocked = true;\n\n            await loader.present();\n            await this.api.getMapper('blocks').create({\n                userId: this.userId\n            }, {\n                forceHandleError: true\n            });\n\n            let toast = this.toast.create({\n                message: this.translate.instant('profile_blocked'),\n                closeButtonText: this.translate.instant('ok'),\n                showCloseButton: true,\n                duration: this.toastDuration\n            });\n\n            toast.present();\n            loader.dismiss();\n        }\n        catch (e) {\n            this.user.blocks.isBlocked = false;\n            loader.dismiss();\n        }\n    }\n\n    /**\n     * Unblock user\n     */\n    private async unblockUser(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            this.user.blocks.isBlocked = false;\n\n            await loader.present();\n            await this.api.getMapper('blocks').destroy(this.user.id, {\n                forceHandleError: true\n            });\n\n            let toast = this.toast.create({\n                message: this.translate.instant('profile_unblocked'),\n                closeButtonText: this.translate.instant('ok'),\n                showCloseButton: true,\n                duration: this.toastDuration\n            });\n\n            toast.present();\n            loader.dismiss();\n        }\n        catch (e) {\n            loader.dismiss();\n            this.user.blocks.isBlocked = true;\n        }\n    }\n\n    /**\n     * Delete conversation\n     */\n    private async deleteConversation(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            await loader.present();\n            await this.api.destroy('conversations', this.conversationId, {\n                forceHandleError: true\n            });\n\n            // remove messages from storage\n            this.api.removeAll('messages', {\n                conversationId: this.conversationId\n            });\n\n            loader.dismiss();\n\n            let toast = this.toast.create({\n                message: this.translate.instant('conversation_has_been_deleted'),\n                closeButtonText: this.translate.instant('ok'),\n                showCloseButton: true,\n                duration: this.toastDuration\n            });\n\n            toast.present();\n\n            this.nav.setRoot(DashboardPage, {\n                component: 'conversations'\n            });\n        }\n        catch (e) {\n            loader.dismiss();\n        }\n    }\n\n    /**\n     * Mark conversation as unread\n     */\n    private async markConversationAsUnread(): Promise<any> {\n        let loader = this.loadingCtrl.create();\n\n        try {\n            await loader.present();\n            await this.api.update('conversations', this.conversationId, {\n                isRead: false\n            }, {\n                forceHandleError: true\n            });\n\n            loader.dismiss();\n\n            let toast = this.toast.create({\n                message: this.translate.instant('conversation_has_been_marked_as_unread'),\n                closeButtonText: this.translate.instant('ok'),\n                showCloseButton: true,\n                duration: this.toastDuration\n            });\n\n            toast.present();\n\n            this.nav.setRoot(DashboardPage, {\n                component: 'conversations'\n            });\n        }\n        catch (e) {\n            loader.dismiss();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/messages/index.ts","import { IValidator } from './interface';\n\nexport abstract class BaseValidator implements IValidator {\n    protected params: {};\n\n    /**\n     * Validate\n     */\n    abstract validate(): Function;\n\n    /**\n     * Add params\n     */\n    addParams(params: {}): any {\n        this.params = params;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/questions/validators/baseValidator.ts","import { Component } from '@angular/core';\nimport { DataStore } from 'js-data';\nimport { Events, NavController } from 'ionic-angular';\n\n// services\nimport { AuthService } from '../../services/auth/index';\n\n// import pages\nimport { DashboardPage } from '../../pages/dashboard/index';\nimport { LoginPage } from '../../pages/user/login/index';\n\n@Component({\n    selector: 'app-maintenance',\n    templateUrl: 'index.html',\n    providers: [\n    ]\n})\n\nexport class AppMaintenancePage {\n    /**\n     * Constructor\n     */\n    constructor(\n        private auth: AuthService,\n        private api: DataStore,\n        private events: Events,\n        private nav: NavController) {}\n\n    /**\n     * Do refresh\n     */\n    async doRefresh(refresher): Promise<any> {\n        try {\n            // update all configs\n            await this.api.findAll('configs', {}, {force: true});\n\n            refresher.complete();\n\n            // check maintenance mode\n            if (!this.api.get('configs', 'maintenanceMode').value) {\n                this.events.publish('maintenance:restore');\n\n                this.nav.setRoot(!this.auth.isAuthenticated() ? LoginPage : DashboardPage);\n            }\n        }\n        catch (e) {\n            refresher.complete();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/appMaintenance/index.ts","import { Injectable } from '@angular/core';\nimport { AlertController, Platform } from 'ionic-angular';\nimport { Transfer, FileUploadOptions } from '@ionic-native/transfer';\nimport { Camera, CameraOptions } from '@ionic-native/camera';\nimport { File } from '@ionic-native/file';\nimport { FilePath } from '@ionic-native/file-path';\nimport { TranslateService } from 'ng2-translate';\n\n// import services\nimport { AuthService } from '../auth/index';\n\ndeclare var cordova: any;\n\nexport type PhotoUploaderSource = 'camera' | 'library';\n\n@Injectable()\nexport class PhotoUploaderService {\n    public maxFileSizeMb: number = 30;\n    public url: string;\n    public httpMethod: string = 'POST';\n    public successUploadCallback: (any);\n    public errorUploadCallback: (any);\n    public startUploadingCallback: (any);\n    public photoCopiedCallback: (any);\n\n    private image: string;\n\n    // error codes\n    public static ERROR_SELECTING_IMAGE: string = 'error_selecting_image';\n    public static ERROR_STORING_FILE: string = 'error_storing_file';\n    public static ERROR_GETTING_FILE_INFO: string = 'error_getting_file_info';\n    public static ERROR_MAX_SIZE_LIMIT_EXCEEDED: string = 'error_max_size_limit_exceeded';\n    public static ERROR_UPLOADING_FILE: string = 'error_uploading_file';\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private transfer: Transfer,\n        private file: File,\n        private filePath: FilePath,\n        private camera: Camera,\n        private platform: Platform,\n        private alert: AlertController,\n        private auth: AuthService,\n        private translate: TranslateService) {}\n\n    /**\n     * Take picture\n     */\n    async takePicture(fromSource: PhotoUploaderSource): Promise<any> {\n        try {\n            let sourceType: number = fromSource == 'camera'\n                ? this.camera.PictureSourceType.CAMERA\n                : this.camera.PictureSourceType.PHOTOLIBRARY;\n\n            // create options for the Camera Dialog\n            let options: CameraOptions = {\n                quality: 100,\n                allowEdit: true,\n                encodingType: this.camera.EncodingType.JPEG,\n                sourceType: sourceType,\n                saveToPhotoAlbum: false,\n                correctOrientation: true,\n                mediaType: this.camera.MediaType.PICTURE\n            };\n\n            // get the data of an image\n            let imagePath: string = await this.camera.getPicture(options);\n\n            // special handling for Android library\n            if (this.platform.is('android') && sourceType === this.camera.PictureSourceType.PHOTOLIBRARY) {\n                let filePath: string = await this.filePath.resolveNativePath(imagePath);\n\n                let correctPath = filePath.substr(0, filePath.lastIndexOf('/') + 1);\n                let currentName = imagePath.substring(imagePath.lastIndexOf('/') + 1, imagePath.lastIndexOf('?'));\n\n                this.copyFileToLocalDir(correctPath, currentName, this.createFileName());\n            }\n            else {\n                var currentName = imagePath.substr(imagePath.lastIndexOf('/') + 1);\n                var correctPath = imagePath.substr(0, imagePath.lastIndexOf('/') + 1);\n\n                this.copyFileToLocalDir(correctPath, currentName, this.createFileName());\n            }\n        }\n        catch (e) {\n            if (this.errorUploadCallback) {\n                this.errorUploadCallback.call(null, {\n                    type: PhotoUploaderService.ERROR_SELECTING_IMAGE,\n                    message: e.message\n                });\n            }\n\n            if (e != 'no image selected') {\n                this.showAlert('error_selecting_image');\n            }\n        }\n    }\n\n\n    /**\n     * Upload image\n     */\n     uploadImage(imageName: string, imagePath: string): void {\n        let language = this.translate.currentLang\n            ? this.translate.currentLang\n            : this.translate.getDefaultLang();\n\n        let headers = {\n            'api-language': language\n        };\n\n        // add auth header\n        if (this.auth.getToken()) {\n            headers[this.auth.getAuthHeaderName()] = this.auth.getAuthHeaderValue();\n        }\n\n        let options: FileUploadOptions = {\n            fileKey: 'file',\n            fileName: imageName,\n            chunkedMode: false,\n            httpMethod: this.httpMethod,\n            mimeType: 'image/jpeg',\n            params : {\n                fileName: imageName\n            },\n            headers: headers\n        };\n\n        const fileTransfer = this.transfer.create();\n\n        // use the FileTransfer to upload the image\n        fileTransfer.upload(imagePath, this.url, options)\n            .then((data) => {\n                if (this.successUploadCallback) {\n                    this.successUploadCallback.call(null, data.response);\n                }\n            }, (err: any) => {\n                if (this.errorUploadCallback) {\n                    this.errorUploadCallback.call(null, {\n                        type: PhotoUploaderService.ERROR_UPLOADING_FILE,\n                        message: err.body\n                    });\n                }\n\n                this.showAlert('error_uploading_file');\n            });\n    }\n\n    /**\n     * Create file name\n     */\n    private createFileName(): string {\n        let d = new Date();\n\n        return  d.getTime() + \".jpg\";\n    }\n\n    /**\n     * Copy file to a local dir\n     */\n    private async copyFileToLocalDir(namePath, currentName, newFileName): Promise<any> {\n        try {\n            if (this.startUploadingCallback) {\n                this.startUploadingCallback.call(null);\n            }\n\n            let directory: any = await this.file.resolveDirectoryUrl(namePath);\n            let file: any = await this.file.getFile(directory, currentName, {\n                create: false\n            });\n\n            file.getMetadata( async (data: any): Promise<any> => {\n                try {\n                    // check the file  size\n                    if (data.size / 1024 / 1024 <= this.maxFileSizeMb) {\n                        await this.file.copyFile(namePath, currentName, cordova.file.dataDirectory, newFileName);\n\n                        if (this.photoCopiedCallback) {\n                            this.photoCopiedCallback.call(null, {\n                                name: newFileName,\n                                path: this.pathForImage(newFileName)\n                            });\n                        }\n\n                        // upload file\n                        this.image = newFileName;\n                        this.uploadImage(this.image, this.pathForImage(this.image));\n                    }\n                    else {\n                        this.errorUploadCallback.call(null, {\n                            type: PhotoUploaderService.ERROR_MAX_SIZE_LIMIT_EXCEEDED,\n                            message: 'The uploaded file exceeds the max upload filesize'\n                        });\n\n                        this.showAlert('error_file_exceeds_max_upload_size', {\n                            size: this.maxFileSizeMb\n                        });\n                    }\n                }\n                catch (e) {\n                    if (this.errorUploadCallback) {\n                        this.errorUploadCallback.call(null, {\n                            type: PhotoUploaderService.ERROR_STORING_FILE,\n                            message: e.message\n                        });\n                    }\n\n                    this.showAlert('error_storing_file');\n                }\n            }, (error: any) => {\n                if (this.errorUploadCallback) {\n                    this.errorUploadCallback.call(null, {\n                        type: PhotoUploaderService.ERROR_GETTING_FILE_INFO,\n                        message: error.code\n                    });\n                }\n\n                this.showAlert('error_getting_file_info');\n            });\n        }\n        catch (e) {\n            if (this.errorUploadCallback) {\n                this.errorUploadCallback.call(null, {\n                    type: PhotoUploaderService.ERROR_GETTING_FILE_INFO,\n                    message: e.message\n                });\n            }\n\n            this.showAlert('error_getting_file_info');\n        }\n    }\n\n    /**\n     * Show alert\n     */\n    private showAlert(description: string, params?: Object): void {\n        let alert = this.alert.create({\n            title: this.translate.instant('error_occurred'),\n            subTitle: this.translate.instant(description, params),\n            buttons: [this.translate.instant('ok')]\n        });\n\n        alert.present();\n    }\n\n    /**\n     * Path for image\n     */\n    private pathForImage(img): string {\n        if (img === null) {\n            return '';\n        }\n\n        return cordova.file.dataDirectory + img;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/photoUploader/index.ts","import { Directive, HostListener } from '@angular/core';\nimport { TextInput } from 'ionic-angular';\n\n@Directive({\n    selector: '[changeFocusByEnter]'\n})\nexport class ChangeFocusByEnterDirective {\n\n    constructor(private inputRef: TextInput) { }\n\n    @HostListener('keydown', ['$event'])\n    onInputChange(e) {\n        let code = e.keyCode || e.which;\n\n        if (code === 13) {\n            e.preventDefault();\n            this.inputRef.focusNext();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/directives/changeFocusByEnter/index.ts","import { MissingTranslationHandler, MissingTranslationHandlerParams } from 'ng2-translate/ng2-translate';\n\nexport class CustomMissingTranslationHandler implements MissingTranslationHandler {\n    handle(params: MissingTranslationHandlerParams) {\n        console.warn(`Translation is missing for key: ${params.key}`);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/i18n/index.ts","import { Injectable } from '@angular/core';\nimport { HttpAdapter } from 'js-data-http';\nimport { DataStore } from 'js-data';\nimport { Events } from 'ionic-angular';\nimport { TranslateService } from 'ng2-translate';\n\n// import services\nimport { ConfigService } from '../config/index';\nimport { AuthService } from '../auth/index';\nimport { HttpErrorHandlerService } from '../http/errorHandler';\n\n// import all registered resources\nimport { Distances } from './resources/distances';\nimport { Compatibilities } from './resources/compatibilities';\nimport { Avatars } from './resources/avatars';\nimport { Users, UsersProperties } from './resources/users';\nimport { UserMemberships } from './resources/userMemberships';\nimport { QuestionsData } from './resources/questionsData';\nimport { JoinQuestions } from './resources/joinQuestions';\nimport { EditQuestions } from './resources/editQuestions';\nimport { SearchQuestions } from './resources/searchQuestions';\nimport { SearchUsers } from './resources/searchUsers';\nimport { UserGenders } from './resources/userGenders';\nimport { Configs } from './resources/configs';\nimport { Permissions } from './resources/permissions';\nimport { Photos } from './resources/photos';\nimport { UsersCache } from './resources/usersCache';\nimport { MatchActions } from './resources/matchActions';\nimport { ViewQuestions } from './resources/viewQuestions';\nimport { Blocks } from './resources/blocks';\nimport { MatchedUsers } from './resources/matchedUsers';\nimport { Conversations } from './resources/conversations';\nimport { Messages } from './resources/messages';\nimport { Guests } from './resources/guests';\nimport { HotListUsers } from './resources/hotListUsers';\n\n/**\n * Api factory\n */\nexport function apiFactory (\n    config: ConfigService,\n    auth: AuthService,\n    translate: TranslateService,\n    events: Events,\n    errorHandler: HttpErrorHandlerService\n): DataStore {\n    // register all mappers\n    let mappers = {\n        users: Users,\n        usersCache: UsersCache,\n        questionsData: QuestionsData,\n        avatars: Avatars,\n        compatibilities: Compatibilities,\n        distances: Distances,\n        memberships: UserMemberships,\n        permissions: Permissions,\n        photos: Photos,\n        joinQuestions: JoinQuestions,\n        editQuestions: EditQuestions,\n        searchQuestions: SearchQuestions,\n        viewQuestions: ViewQuestions,\n        searchUsers: SearchUsers,\n        userGenders: UserGenders,\n        matchActions: MatchActions,\n        configs: Configs,\n        blocks: Blocks,\n        matchedUsers: MatchedUsers,\n        conversations: Conversations,\n        messages: Messages,\n        guests: Guests,\n        hotListUsers: HotListUsers\n    };\n\n    let properties = {\n        users: UsersProperties\n    };\n\n    // common mappers\n    let commonMappers = ['configs'];\n\n    let api  = new DataStore();\n\n    let httpAdapter = new HttpAdapter({\n        basePath: config.getApiUrl(),\n        forceTrailingSlash: true,\n        httpConfig: {\n            timeout: parseInt(config.getConfig('connectionTimeout'))\n        },\n        beforeHTTP: (config) => {\n            // add auth header\n            config.headers || (config.headers = {});\n\n            if (auth.getToken()) {\n                config.headers[auth.getAuthHeaderName()] = auth.getAuthHeaderValue();\n            }\n\n            // add current language\n            config.headers['api-language'] = translate.currentLang\n                ? translate.currentLang\n                : translate.getDefaultLang();\n        },\n        error: (error: any, errorDesc: any) => {\n            let errorCode: number = 500; // default error code\n            let errorType: string = '';\n            let errorDescription: string = '';\n\n            if (errorDesc.message && errorDesc.message.match(/^timeout|network error/i)) {\n                errorCode = 0;\n            }\n            else {\n                // try to extract error code and error desc\n                errorCode = errorDesc.response.status;\n                let errorDetails: any = errorDesc.response.data;\n\n                errorType = errorDetails && errorDetails.type ? errorDetails.type : '';\n                errorDescription = errorDetails && errorDetails.description ? errorDetails.description : '';\n            }\n\n            let forceHandleError: boolean = errorDesc.config.forceHandleError\n                ? errorDesc.config.forceHandleError\n                : false;\n\n            errorHandler.handleError(errorCode, errorType, errorDescription, forceHandleError);\n        }\n    });\n\n    api.registerAdapter('http', httpAdapter, {\n        default: true\n    });\n\n    // init mappers\n    for (var mapperName in mappers) {\n        api.defineMapper(mapperName, mappers[mapperName]);\n    }\n\n    // init properties\n    for (var property in properties) {\n        Object.defineProperties(api.getMapper(property).recordClass.prototype, properties[property]);\n    }\n\n    // system events\n    let systemEvents = [\n        'user:logout',\n        'user:status_restore',\n        'maintenance:restore'\n    ];\n\n    // clear mappers\n    systemEvents.forEach((event) => {\n        events.subscribe(event, () => {\n            // clear all mappers\n            for (var mapperName in mappers) {\n                if (!commonMappers.includes(mapperName)) {\n                    api.removeAll(mapperName);\n                }\n            }\n        });\n    });\n\n    return api;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/api/factory.ts","\nexport const Distances = {\n    name: 'Distances',\n    endpoint: 'distances',\n    relations: {\n        belongsTo: {\n            users: {\n                foreignKey: 'userId',\n                localField: 'user'\n            }\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/api/resources/distances.ts","\nexport const Compatibilities = {\n    name: 'Compatibilities',\n    endpoint: 'compatibilities',\n    relations: {\n        belongsTo: {\n            users: {\n                foreignKey: 'userId',\n                localField: 'user'\n            }\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/api/resources/compatibilities.ts","\nexport const Avatars = {\n    name: 'Avatars',\n    endpoint: 'avatars',\n    relations: {\n        belongsTo: {\n            users: {\n                foreignKey: 'userId',\n                localField: 'user'\n            }\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/api/resources/avatars.ts","\nexport const Users = {\n    name: 'Users',\n    endpoint: 'users',\n    relations: {\n        hasMany: {\n            permissions: {\n                foreignKey: 'userId',\n                localField: 'permissions'\n            },\n            photos: {\n                foreignKey: 'userId',\n                localField: 'photos'\n            },\n            viewQuestions: {\n                foreignKey: 'userId',\n                localField: 'viewQuestions'\n            },\n            searchUsers: {\n                foreignKey: 'userId',\n                localField: 'searchUsers'\n            }\n        },\n        hasOne: {\n            avatars: {\n                foreignKey: 'userId',\n                localField: 'avatar'\n            },\n            blocks: {\n                foreignKey: 'userId',\n                localField: 'block'\n            },\n            matchActions: {\n                foreignKey: 'userId',\n                localField: 'matchActions'\n            },\n            compatibilities: {\n                foreignKey: 'userId',\n                localField: 'compatibility'\n            },\n            memberships: {\n                foreignKey: 'userId',\n                localField: 'membership'\n            }\n        }\n    }\n};\n\nexport const UsersProperties = {\n    realName: {\n        get: function () {\n            return this.displayName ? this.displayName : this.userName;\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/api/resources/users.ts","\nexport const UserMemberships = {\n    name: 'UserMemberships',\n    endpoint: 'memberships',\n    relations: {\n        belongsTo: {\n            users: {\n                foreignKey: 'userId',\n                localField: 'user'\n            }\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/api/resources/userMemberships.ts","\nexport const QuestionsData = {\n    name: 'QuestionsData',\n    endpoint: 'questions-data',\n    relations: {\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/api/resources/questionsData.ts","\nexport const JoinQuestions = {\n    name: 'JoinQuestions',\n    endpoint: 'join-questions',\n    relations: {\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/api/resources/joinQuestions.ts","\nexport const EditQuestions = {\n    name: 'EditQuestions',\n    endpoint: 'edit-questions',\n    relations: {\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/api/resources/editQuestions.ts","\nexport const SearchQuestions = {\n    name: 'SearchQuestions',\n    endpoint: 'search-questions',\n    relations: {\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/api/resources/searchQuestions.ts","\nexport const SearchUsers = {\n    name: 'SearchUsers',\n    endpoint: 'search-users',\n    relations: {\n        belongsTo: {\n            users: {\n                foreignKey: 'userId',\n                localField: 'user'\n            }\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/api/resources/searchUsers.ts","\nexport const UserGenders = {\n    name: 'UserGenders',\n    endpoint: 'user-genders',\n    relations: {\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/api/resources/userGenders.ts","\nexport const Configs = {\n    name: 'Configs',\n    endpoint: 'configs',\n    relations: {\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/api/resources/configs.ts","\nexport const Permissions = {\n    name: 'Permissions',\n    endpoint: 'permissions',\n    relations: {\n        belongsTo: {\n            users: {\n                foreignKey: 'userId',\n                localField: 'user'\n            }\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/api/resources/permissions.ts","\nexport const Photos = {\n    name: 'Photos',\n    endpoint: 'photos',\n    relations: {\n        belongsTo: {\n            users: {\n                foreignKey: 'userId',\n                localField: 'user'\n            }\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/api/resources/photos.ts","\nexport const UsersCache = {\n    name: 'UsersCache',\n    endpoint: 'usersCache',\n    relations: {\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/api/resources/usersCache.ts","\nexport const MatchActions = {\n    name: 'MatchActions',\n    endpoint: 'math-actions/user',\n    relations: {\n        belongsTo: {\n            users: {\n                foreignKey: 'userId',\n                localField: 'user'\n            }\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/api/resources/matchActions.ts","\nexport const ViewQuestions = {\n    name: 'ViewQuestions',\n    endpoint: 'view-questions',\n    relations: {\n        belongsTo: {\n            users: {\n                foreignKey: 'userId',\n                localField: 'user'\n            }\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/api/resources/viewQuestions.ts","\nexport const Blocks = {\n    name: 'Blocks',\n    endpoint: 'blocks/user',\n    relations: {\n        belongsTo: {\n            users: {\n                foreignKey: 'userId',\n                localField: 'user'\n            }\n        }\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/api/resources/blocks.ts","\nexport const MatchedUsers = {\n    name: 'MatchedUsers',\n    endpoint: 'matched-users'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/api/resources/matchedUsers.ts","\nexport const Conversations = {\n    name: 'Conversations',\n    endpoint: 'mailbox/conversations'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/api/resources/conversations.ts","\nexport const Messages = {\n    name: 'Messages',\n    endpoint: 'mailbox/messages'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/api/resources/messages.ts","\nexport const Guests = {\n    name: 'Guests',\n    endpoint: 'guests'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/api/resources/guests.ts","\nexport const HotListUsers = {\n    name: 'HotListUsers',\n    endpoint: 'hotlist-users'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/api/resources/hotListUsers.ts","import { ModalController } from 'ionic-angular';\nimport { QuestionManager } from './manager';\n\n/**\n * Question manager factory\n */\nexport function questionManagerFactory (modalCtrl: ModalController): QuestionManager {\n    return new QuestionManager(modalCtrl);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/questions/factory.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({name: 'nlbr'})\nexport class NlbrPipe implements PipeTransform {\n    transform(value: string, args: string[]): any {\n        return value.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/pipes/nlbr/index.ts"],"sourceRoot":""}